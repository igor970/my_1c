#Область ПрограммныйИнтерфейс

#Область ПроверкаНеобходимостиЗаполненияВидовЗапасов

// Процедура проверяет изменение реквизитов в документе.
//
Функция ПроверитьИзменениеРеквизитовДокумента(МенеджерВременныхТаблиц, Ссылка, ИменаРеквизитов) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИСТИНА КАК РеквизитыИзменены
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ДанныеДокумента
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.%1 КАК СохраненныеДанные
	|		ПО СохраненныеДанные.Ссылка = &Ссылка
	|ГДЕ
	|	СохраненныеДанные.Ссылка ЕСТЬ NULL
	|	%2";
	
	ТекстУсловие = "";
	
	Для Каждого КлючИЗначение Из Новый Структура(ИменаРеквизитов) Цикл
		
		ТекстУсловие = ТекстУсловие + "
			|	ИЛИ ДанныеДокумента." + КлючИЗначение.Ключ + " <> СохраненныеДанные." + КлючИЗначение.Ключ;
		
	КонецЦикла;
	
	Запрос.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Запрос.Текст,
		Ссылка.Метаданные().Имя,
		ТекстУсловие);
	
	Результат = Запрос.Выполнить();
	
	Возврат НЕ Результат.Пустой();
	
КонецФункции

// Функция проверяет изменение табличной части "Товары" относительно табличной части "Виды запасов" документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц.
//
// Возвращаемое значение:
//	Булево - Истина - товары изменены
//           Ложь - товары не изменены.
//
Функция ПроверитьИзменениеТоваровПоКоличеству(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.Количество КАК Количество
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

// Функция проверяет изменение табличной части "Товары" относительно табличной части "Виды запасов" документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - Менеджер временных таблиц.
//
// Возвращаемое значение:
//	Булево - Истина - товары изменены
//           Ложь - товары не изменены.
//
Функция ПроверитьИзменениеТоваровПоКоличествуИСумме(МенеджерВременныхТаблиц) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаТоваров.СтавкаНДС КАК СтавкаНДС,
	|		ТаблицаТоваров.Количество КАК Количество,
	|		ТаблицаТоваров.СуммаСНДС КАК СуммаСНДС,
	|		ТаблицаТоваров.СуммаНДС КАК СуммаНДС,
	|		ТаблицаТоваров.СуммаВознаграждения КАК СуммаВознаграждения,
	|		ТаблицаТоваров.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаТоваров КАК ТаблицаТоваров
	|	ГДЕ
	|		ТаблицаТоваров.Номенклатура.ТипНоменклатуры  В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаВидыЗапасов.СтавкаНДС КАК СтавкаНДС,
	|		-ТаблицаВидыЗапасов.Количество КАК Количество,
	|		-ТаблицаВидыЗапасов.СуммаСНДС КАК СуммаСНДС,
	|		-ТаблицаВидыЗапасов.СуммаНДС КАК СуммаНДС,
	|		-ТаблицаВидыЗапасов.СуммаВознаграждения КАК СуммаВознаграждения,
	|		-ТаблицаВидыЗапасов.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|	) КАК ТаблицаТоваров
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.СтавкаНДС
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаТоваров.Количество) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаСНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДС) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаВознаграждения) <> 0
	|	ИЛИ СУММА(ТаблицаТоваров.СуммаНДСВознаграждения) <> 0
	|");
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	РезультатЗапрос = Запрос.Выполнить();
	
	Возврат (Не РезультатЗапрос.Пустой());
	
КонецФункции

// Проверяет необходимость принудительного перезаполнения видов запасов и устанавливает соответствующий параметр
// запроса.
//
// Параметры:
//	ДокументОбъектИлиДопСвойства - ДокументОбъект, Структура - объект документа или дополнительные свойства документа.
//	Запрос - Запрос - запрос обращения к ИБ.
//
// Возвращаемое значение:
//	Булево - Истина, необходимо перезаполнить виды запасов.
//
Функция ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДокументОбъектИлиДопСвойства,
																	Запрос = Неопределено) Экспорт
	
	ИмяДопСвойства = ИмяДопСвойстваДляПерезаполненияВидовЗапасов();
	
	ПерезаполнитьВидыЗапасов = ?(ТипЗнч(ДокументОбъектИлиДопСвойства) = Тип("Структура"),
								ДокументОбъектИлиДопСвойства.Свойство(ИмяДопСвойства),
								ДокументОбъектИлиДопСвойства.ДополнительныеСвойства.Свойство(ИмяДопСвойства));
	
	Если Запрос <> Неопределено Тогда
		Запрос.УстановитьПараметр(ИмяДопСвойства, ПерезаполнитьВидыЗапасов);
	КонецЕсли;
	
	Возврат ПерезаполнитьВидыЗапасов;
	
КонецФункции

// Процедура дополняет временные таблицы обязательными колонками, требующихся для корректного заполнения видов запасов.
//
// Параметры:
//	Запрос - Запрос  - запрос, который содержит описание временных таблиц.
//
Процедура ДополнитьВременныеТаблицыОбязательнымиКолонками(Запрос) Экспорт
	
	ОписаниеТаблиц = ОписаниеТаблицСОбязательнымиКолонками();
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	
	Для Каждого ЗапросСхемы Из СхемаЗапроса.ПакетЗапросов Цикл
		
		Если ТипЗнч(ЗапросСхемы) = Тип("ЗапросУничтоженияТаблицыСхемыЗапроса") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЗапросСхемы.ТаблицаДляПомещения) Тогда
			Продолжить;
		КонецЕсли;
		
		// Если источник запроса берется из параметра, то добавим служебную временную
		// таблицу, чтобы была возможность выбирать значения НЕОПРЕДЕЛЕНО.
		Если ОписаниеТаблиц.Свойство(ЗапросСхемы.ТаблицаДляПомещения) Тогда
			
			Если ЗапросСхемы.Операторы[0].Источники.Количество()
				И СтрНайти(ЗапросСхемы.Операторы[0].Источники[0].Источник.ИмяТаблицы, "&") <> 0 Тогда
				
				ТаблицаДляПомещения = ЗапросСхемы.ТаблицаДляПомещения;
				ЗапросСхемы.ТаблицаДляПомещения = ТаблицаДляПомещения + "СлужебнаяВТ";
				
				НовыйЗапросСхемы = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросВыбораСхемыЗапроса"));
				НовыйЗапросСхемы.ТаблицаДляПомещения = ТаблицаДляПомещения;
				НовыйЗапросСхемы.Операторы[0].Источники.Добавить(ТаблицаДляПомещения + "СлужебнаяВТ");
				
				ДоступныеПоля = НовыйЗапросСхемы.Операторы[0].Источники[0].Источник.ДоступныеПоля;
				
				Для Каждого ДоступноеПоле Из ДоступныеПоля Цикл
					НовыйЗапросСхемы.Операторы[0].ВыбираемыеПоля.Добавить(ТаблицаДляПомещения + "СлужебнаяВТ."
																			+ ДоступноеПоле.Имя);
				КонецЦикла;
				
				СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса")).ИмяТаблицы =
					ТаблицаДляПомещения + "СлужебнаяВТ";
				
			КонецЕсли;
			
		КонецЕсли;
		
		ОписаниеТаблицы = Неопределено;
		
		Если ОписаниеТаблиц.Свойство(ЗапросСхемы.ТаблицаДляПомещения, ОписаниеТаблицы) Тогда
			Для Каждого ОписаниеКолонки Из ОписаниеТаблицы Цикл
				Если ЗапросСхемы.Колонки.Найти(ОписаниеКолонки.Ключ) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				Для Каждого Оператор Из ЗапросСхемы.Операторы Цикл
					Поле = Оператор.ВыбираемыеПоля.Добавить(ОписаниеКолонки.Значение);
				КонецЦикла;
				
				Колонка = ЗапросСхемы.Колонки.Найти(Поле);
				Колонка.Псевдоним = ОписаниеКолонки.Ключ;
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеВидовЗапасов

// Возвращает структуру, которая используется при заполнении видов запасов.
// В структуре описываются основные отборы видов запасов и варианты контроля.
//
// Параметры:
//	* ИмяТЧВидыЗапасов - Строка - Имя табличной части документа, в которую будут добавлены подобранные виды запасов
//	* ТаблицаВидыЗапасов - ТаблицаЗначений - Таблица, в которую будут добавлены подобранные виды запасов. Если определено, 
//		то виды запасов будут добавлены только в таблицу значений, а не в табличную часть.
//	* ИмяПоляОрганизация - Строка - Имя реквизита в документе, в котором хранится организация.
//	* ДоступныеВидыЗапасовУжеСформированы - Булево - Показывает отсутствие необходимости
//		формирования ВТ ДоступныеВидыЗапасов.
//	* ТаблицаОстатковУжеСформирована - Булево - в редких случаях таблица остатков, по которой нужно заполнять виды запасов
//                                              может быть сформирована заранее в вызывающем коде
//	* ПодбиратьВидыЗапасовПоИнтеркампани - Булево - Разрешает необходимость потребления видов запасов
//		по схеме интеркампани.
//	* ПриПодбореПоИнтеркампаниИсключатьОрганизации - Массив из СправочникСсылка.Организации
//	* ДокументДелаетИПриходИРасход - Булево - Признак того, что документ делает приходные и расходные движения.
//		Например: Документ.ПередачаТоваровМеждуОрганизациями. В этом случае используется более сложный механизм
//		формирования резервов - резервы записываются один раз при обработке всех видов движений.
//	* НалогообложениеНДС - Неопределено - Тип налогообложения документа. Если не заполнено, то считается, что
//		оно не меняется.
//	* ОтборыВидовЗапасов - см. Справочники.ВидыЗапасов.ПараметрыОтбораВидовЗапасов() - По данным отборам строится временная таблица ДоступныеВидыЗапасов.
//		Используется при построении таблицы остатков.
//	* СообщатьОбОшибкахЗаполнения - Булево - Признак необходимости вывода информационных сообщений пользователю.
//	* ИмяТаблицыОстатков - Строка - Имя таблицы остатков.
//	* КоличествоПериодовПриФормированииРезервовОрганизаций - Число - заполняется при формировании остатков по источнику ТоварыОрганизаций 
//	* ПодбиратьЗапасыРазныхПериодов - Булево - Разрешается документу использовать виды запасов из разных периодов.
//	* ТаблицаНовыеРезервы - Неопределено, ТаблицаЗначений - Таблица сформированных резервов.
//	* ПериодЗаполнения - Неопределено - если ПодбиратьЗапасыРазныхПериодов = Истина, то в этом параметре передается, начиная с какого периода
//	                                    нужно перезаполнять виды запасов
//	* ЕстьТаблицаПриходуемыхВидовЗапасов - Булево - признак, что нужно в таблицу остатков плюсовать таблицу видов запасов из заполняемого документа
//	                                                т.е. документ при проведении оприходует эти виды запасов, поэтому сам документ может их и израсходовать уже
//	* ИмяТаблицыПриходуемыхВидовЗапасов - Строка - имя временной таблицы, в которой лежат приходуемые при проведении документом виды запасов, которые нужно учесть, когда
//	                                               выставлен флаг ЕстьТаблицаПриходуемыхВидовЗапасов
//	* ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение - Строка - значения: Всегда, Никогда, ПоНастройкамДоговора, ПоХозяйственнойОперации - если по остаткам подобрался вид запасов ТоварыПринятыеНаХранение
//															то в зависимости от флага он или подставится в ТЧ, или подставится собственный, а по ТоварыПринятыеНаХранение
//															расходный сформируется резерв. Если указано ПоХозяйственнойОперации - выбор действия зависит от хозяйственной операции в строке и определяется
//                                                          параметром
//  * ДействияПодбораТоваровПринятыхНаОтветственноеХранениеПоХозяйственнойОперации - Соответствие - ключ - ПеречислениеСсылка.ХозяйственныеОперации,
//																							   значение - строка из списка значений параметра ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение
//	* ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию - Неопределено - Если не хватает остатков, то генерируется вид запасов по умолчанию.
//		В этом случае необходима ТаблицаРеквизитовВидовЗапасовПоУмолчанию.
//	* ВладелецТовараВШапке - Булево - используется для определения, откуда брать значения для генерации видов запасов - из ВТ ТаблицаДанныхДокумента, в которой лежат реквизиты шапки документа, или
//                                    из ТаблицаРеквизитовВидовЗапасовПоУмолчанию
//	* ТаблицаРеквизитовВидовЗапасовПоУмолчанию - См. ЗапасыСервер.ПустаяТаблицаРеквизитовВидовЗапасовПоУмолчанию()
//	* ПриНехваткеТоваровОрганизацииФормироватьРезервПоТоварамТребующимПодтвержденияВыпуска - Булево - при формировании резервов по товарам организаций в обработке проведения или
//											удаления проведения будет формироваться компенсирующий резерв по виду запасов с типом ТоварТребующийПодтвержденияВыпуска.
//											Так же резерв по этому типу может сформироваться при заполнении видов запасов в ТЧ. Это произойдет,
//											если ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Истина, а в ТаблицаРеквизитовВидовЗапасовПоУмолчанию указан тип запасов
//											резерва ТоварТребующийПодтвержденияВыпуска
//
Функция ПараметрыЗаполненияВидовЗапасов() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИмяТЧВидыЗапасов", "ВидыЗапасов");
	Результат.Вставить("ТаблицаВидыЗапасов", Неопределено);
	Результат.Вставить("ИмяПоляОрганизация", "Организация");
	
	Результат.Вставить("ДоступныеВидыЗапасовУжеСформированы", Ложь);
	Результат.Вставить("ТаблицаОстатковУжеСформирована", Ложь);
	
	Результат.Вставить("ПодбиратьВидыЗапасовПоИнтеркампани", Истина);
	Результат.Вставить("ПриПодбореПоИнтеркампаниИсключатьОрганизации", Новый Массив);
	Результат.Вставить("КорВидыЗапасов", Новый Массив);
	
	Результат.Вставить("ДокументДелаетИПриходИРасход", Ложь);
	
	Результат.Вставить("НалогообложениеНДС", Неопределено);
	Результат.Вставить("ОтборыВидовЗапасов", Справочники.ВидыЗапасов.ПараметрыОтбораВидовЗапасов());
	Результат.ОтборыВидовЗапасов.ТипЗапасов = Новый Массив;
	Результат.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.Товар);
	Результат.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи);
	Результат.ОтборыВидовЗапасов.ТипЗапасов.Добавить(Перечисления.ТипыЗапасов.КомиссионныйТовар);
	
	Результат.Вставить("СообщатьОбОшибкахЗаполнения", Истина);
	Результат.Вставить("ИмяТаблицыОстатков", "ТоварыОрганизаций");
	Результат.Вставить("КоличествоПериодовПриФормированииРезервовОрганизаций", Неопределено);
	
	Результат.Вставить("ПодбиратьЗапасыРазныхПериодов", Ложь);
	Результат.Вставить("ПериодЗаполнения", Неопределено);
	Результат.Вставить("ЕстьТаблицаПриходуемыхВидовЗапасов", Ложь);
	Результат.Вставить("ИмяТаблицыПриходуемыхВидовЗапасов", "");
	
	Результат.Вставить("ТаблицаНовыеРезервы", Неопределено);
	Результат.Вставить("ТаблицаСторноДвижений", Неопределено);
	
	Результат.Вставить("БезОтбораПоНомерамГТД", Ложь);
	Результат.Вставить("ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение", "");
	Результат.Вставить("ДействияПодбораТоваровПринятыхНаОтветственноеХранениеПоХозяйственнойОперации", Неопределено);

	Результат.Вставить("ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию", Неопределено);
	Результат.Вставить("ТаблицаРеквизитовВидовЗапасовПоУмолчанию", ПустаяТаблицаРеквизитовВидовЗапасовПоУмолчанию());
	Результат.Вставить("ВладелецТовараВШапке", Истина);
	Результат.Вставить("ПриНехваткеТоваровОрганизацииФормироватьРезервПоТоварамТребующимПодтвержденияВыпуска", Ложь);
	
	Возврат Результат;
	
КонецФункции

// Процедура заполняет виды запасов в табличной части "Товары" документа поступления товаров.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц- менеджер временных таблиц, который должен содержать таблицу
//														ИсходнаяТаблицаТоваров (НомерСтроки, Номенклатура, Организация,
//														ХозяйственнаяОперация, ТипЗапасов, Поставщик, Соглашение, Валюта,
//														НалогообложениеНДС).
//	ТабличнаяЧастьТовары - ТабличнаяЧасть - Табличная часть документа.
//	ВидЗапасовДокумента - СправочникСсылка.ВидыЗапасов - Найденный вид запасов (возвращаемое значение).
//															Используется если параметр "ТабличнаяЧастьТовары" имеет
//															значение Неопределено.
//	ИмяПоля - Строка - Имя поля в табличной части ТабличнаяЧастьТовары, в котором должны находиться виды запасов.
//	ЭтоПередачаТоваровМеждуОрганизациями - Булево - Признак того, что вызов идет из документа передачи товаров
//													между организациями.
//	
Процедура ЗаполнитьВидыЗапасовПоУмолчанию(МенеджерВременныхТаблиц,
											ТабличнаяЧастьТовары,
											ВидЗапасовДокумента = Неопределено,
											ИмяПоля = "ВидЗапасов") Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара КАК ЭтоВозвратнаяТара,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.ЭтоВозвратнаяТара
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|		ИНАЧЕ ТаблицаТоваров.ТипЗапасов
	|	КОНЕЦ КАК ТипЗапасов,
	|	ТаблицаТоваров.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.ЭтоВозвратнаяТара
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|		ИНАЧЕ ТаблицаТоваров.ХозяйственнаяОперация
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.Соглашение КАК Соглашение,
	|	ТаблицаТоваров.Валюта КАК Валюта,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ТаблицаТоваров.НалогообложениеНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ТаблицаТоваров.НалогообложениеОрганизации КАК НалогообложениеОрганизации,
	|	ВЫБОР ТаблицаТоваров.ВладелецТовара
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Партнеры.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.ВладелецТовара
	|	КОНЕЦ КАК ВладелецТовара,
	|	ВЫБОР ТаблицаТоваров.Контрагент
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР ТаблицаТоваров.Договор
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		КОГДА ЗНАЧЕНИЕ(Справочник.ДоговорыМеждуОрганизациями.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТаблицаТоваров.Договор
	|	КОНЕЦ КАК Договор,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета
	|			ТОГДА ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.ГруппаПродукции КАК ГруппаПродукции,
	|	ТаблицаТоваров.ВидЦены КАК ВидЦены,
	|	ТаблицаТоваров.ТекущийВидЗапасов КАК ТекущийВидЗапасов
	|ПОМЕСТИТЬ ТаблицаТоваровСАналитикой
	|ИЗ
	|	ИсходнаяТаблицаТоваров КАК ТаблицаТоваров
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.Организация КАК Организация
	|ПОМЕСТИТЬ ОтборВидовЗапасов
	|ИЗ
	|	ТаблицаТоваровСАналитикой КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасовРезерва.Ссылка КАК Ссылка,
	|	ВидыЗапасовРезерва.Организация КАК Организация,
	|	ВидыЗапасовРезерва.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасовРезерва.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВидыЗапасовРезерва.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасовРезерва.Соглашение КАК Соглашение,
	|	ВидыЗапасовРезерва.Валюта КАК Валюта,
	|	ВидыЗапасовРезерва.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВидыЗапасовРезерва.Контрагент КАК Контрагент,
	|	ВидыЗапасовРезерва.Договор КАК Договор,
	|	ВидыЗапасовРезерва.ГруппаПродукции КАК ГруппаПродукции,
	|	ВидыЗапасовРезерва.ВидЦены КАК ВидЦены,
	|	ВидыЗапасовРезерва.Устаревший КАК Устаревший
	|ПОМЕСТИТЬ ВидыЗапасовРезерва
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасовРезерва
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборВидовЗапасов КАК Отбор
	|		ПО ВидыЗапасовРезерва.Организация = Отбор.Организация
	|ГДЕ
	|	НЕ ВидыЗапасовРезерва.ЭтоДубль
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ТипЗапасов,
	|	Соглашение,
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки            КАК НомерСтроки,
	|	ТаблицаТоваров.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.ТипЗапасов             КАК ТипЗапасов,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара      КАК ЭтоВозвратнаяТара,
	|	ТаблицаТоваров.Организация            КАК Организация,
	|	ТаблицаТоваров.ХозяйственнаяОперация  КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.Соглашение             КАК Соглашение,
	|	ТаблицаТоваров.Валюта                 КАК Валюта,
	|	ТаблицаТоваров.НалогообложениеНДС     КАК НалогообложениеНДС,
	|	ТаблицаТоваров.НалогообложениеОрганизации КАК НалогообложениеОрганизации,
	|	ТаблицаТоваров.ВладелецТовара         КАК ВладелецТовара,
	|	ТаблицаТоваров.Контрагент             КАК Контрагент,
	|	ТаблицаТоваров.Договор                КАК Договор,
	|	ТаблицаТоваров.ГруппаПродукции        КАК ГруппаПродукции,
	|	ТаблицаТоваров.ВидЦены                КАК ВидЦены,
	|	ВидыЗапасовРезерва.Ссылка             КАК ВидЗапасов
	|ИЗ
	|	ТаблицаТоваровСАналитикой КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗапасовРезерва КАК ВидыЗапасовРезерва
	|		ПО ТаблицаТоваров.Организация = ВидыЗапасовРезерва.Организация
	|			И ТаблицаТоваров.ТипЗапасов = ВидыЗапасовРезерва.ТипЗапасов
	|			И ТаблицаТоваров.ВладелецТовара = ВидыЗапасовРезерва.ВладелецТовара
	|			И ТаблицаТоваров.Контрагент = ВидыЗапасовРезерва.Контрагент
	|			И ТаблицаТоваров.Соглашение = ВидыЗапасовРезерва.Соглашение
	|			И ТаблицаТоваров.Договор = ВидыЗапасовРезерва.Договор
	|			И ТаблицаТоваров.Валюта = ВидыЗапасовРезерва.Валюта
	|			И ТаблицаТоваров.ГруппаПродукции = ВидыЗапасовРезерва.ГруппаПродукции
	|			И ТаблицаТоваров.ВидЦены = ВидыЗапасовРезерва.ВидЦены
	|			И ТаблицаТоваров.НалогообложениеНДС = ВидыЗапасовРезерва.НалогообложениеНДС
	|			И ТаблицаТоваров.ГруппаФинансовогоУчета = ВидыЗапасовРезерва.ГруппаФинансовогоУчета
	|			И (ВЫБОР
	|					КОГДА ТаблицаТоваров.ТекущийВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|						ТОГДА НЕ ВидыЗапасовРезерва.Устаревший
	|					ИНАЧЕ ВидыЗапасовРезерва.Ссылка = ТаблицаТоваров.ТекущийВидЗапасов
	|				КОНЕЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаФинансовогоУчета,
	|	ГруппаПродукции,
	|	ТипЗапасов,
	|	ТаблицаТоваров.ЭтоВозвратнаяТара,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОтборВидовЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВидыЗапасовРезерва";

	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ПоляКлюча	= "ГруппаФинансовогоУчета, ГруппаПродукции, ТипЗапасов, ЭтоВозвратнаяТара";
	КлючСтроки	= Новый Структура(ПоляКлюча);
	ВидЗапасов	= Неопределено;
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ГруппаФинансовогоУчета <> КлючСтроки.ГруппаФинансовогоУчета
			Или Выборка.ГруппаПродукции <> КлючСтроки.ГруппаПродукции
			Или Выборка.ТипЗапасов <> КлючСтроки.ТипЗапасов
			Или Выборка.ЭтоВозвратнаяТара <> КлючСтроки.ЭтоВозвратнаяТара Тогда
			
			ЗаполнитьЗначенияСвойств(КлючСтроки, Выборка);
			
			ВидЗапасов = Неопределено;
			
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВидЗапасов) Тогда
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
				ВидЗапасов = Выборка.ВидЗапасов;
			Иначе
				
				Если ОбновлениеИнформационнойБазы.ЭтоВызовИзОбработчикаОбновления("Отложенно") Тогда
					ВызватьИсключение НСтр("ru = 'Создание новых видов запасов в режиме отложенного обновления запрещено.'");
				КонецЕсли;
				
				ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(Выборка.Организация,
																		Выборка.ХозяйственнаяОперация,
																		Выборка);
					
			КонецЕсли;
			
		КонецЕсли;
		
		Если ТабличнаяЧастьТовары <> Неопределено Тогда
			СтрокаТаблицы = ТабличнаяЧастьТовары.Найти(Выборка.НомерСтроки, "НомерСтроки");
			СтрокаТаблицы[ИмяПоля]= ВидЗапасов;
		Иначе
			ВидЗапасовДокумента = ВидЗапасов;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Заполняет виды запасов в табличной части "ВидыЗапасов" документа.
//
// Параметры:
//	ДокументОбъект					- ДокументОбъект			- документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц			- МенеджерВременныхТаблиц	- менеджер временных таблиц, содержащий таблицы, 
//																	необходимые для для заполнения видов запасов 
//																	документа.
//	Отказ							- Булево					- признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов	- Структура					- см. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//	ПроизводитсяОбновлениеИБ		- Булево					- признак того, что вызов произведен из метода 
//																	обновления объекта метаданных.
//	
Процедура ЗаполнитьВидыЗапасовПоТоварамОрганизаций(ДокументОбъект,
													МенеджерВременныхТаблиц,
													Отказ,
													ПараметрыЗаполненияВидовЗапасов,
													ПроизводитсяОбновлениеИБ = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ТаблицаОстатковУжеСформирована
		И ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков <> "ТоварыОрганизаций"
		И ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков <> "ПереданныеМеждуОрганизациямиТовары" Тогда
		
		ТекстИсключения = НСтр("ru = 'Процедуру ЗаполнитьВидыЗапасовПоТоварамОрганизаций можно вызывать только с таблицей остатков ТоварыОрганизаций или ПереданныеМеждуОрганизациямиТовары'");
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
		
	Если Не ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы Тогда
		ИмяТаблицыЗапасов = ?(ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов,
								"ТаблицаВидыЗапасовПоПериодам",
								"ТаблицаВидыЗапасов");
		
		СформироватьВТДоступныеВидыЗапасов(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											ИмяТаблицыЗапасов);
	КонецЕсли;
	
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	СохранитьИсходныеДвиженияТоваровИРезервов(ДокументОбъект.Ссылка, МенеджерВременныхТаблиц);
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц,
												Истина,
												ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов);
	
	Если Не ПроизводитсяОбновлениеИБ Тогда
		УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
	КонецЕсли;
	
	СформироватьВТТоварыОрганизацийИзменения(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	// Если не повторный запуск заполнения видов запасов
	Если Не ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций")
		И (// и не запуск из помощника исправления
			Не ДокументОбъект.ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов")
			Или Не ДокументОбъект.ДополнительныеСвойства.ПерезаполнитьВидыЗапасов) Тогда
		
		СформироватьВТСторноРезервов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	КонецЕсли;
	
	Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
		
		ЗаполнитьВидыЗапасовРазныхПериодов(ДокументОбъект,
											МенеджерВременныхТаблиц,
											Отказ,
											ПараметрыЗаполненияВидовЗапасов);
		
	Иначе
		
		СформироватьВТТаблицаОстатков(ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков,
										ДокументОбъект,
										МенеджерВременныхТаблиц,
										ПараметрыЗаполненияВидовЗапасов,
										Истина);
		
		ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы(ДокументОбъект,
																		МенеджерВременныхТаблиц,
																		Отказ,
																		ПараметрыЗаполненияВидовЗапасов);
		
	КонецЕсли;
	
	Если Отказ Тогда
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
		
		Возврат;
	КонецЕсли;
	
	ТаблицаРезервыТоваровОрганизаций = ТаблицаРезервыТоваровОрганизаций(ДокументОбъект,
																		МенеджерВременныхТаблиц,
																		ПараметрыЗаполненияВидовЗапасов,
																		Истина);
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ТаблицаРезервыТоваровОрганизаций", ТаблицаРезервыТоваровОрганизаций);
	ДокументОбъект.ДополнительныеСвойства.Вставить("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми",
													Не ПараметрыЗаполненияВидовЗапасов.ДокументДелаетИПриходИРасход);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Процедура заполняет виды запасов в табличной части "ВидыЗапасов" документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - требуется временные таблицы ТаблицаТоваров, ТаблицаВидыЗапасов.
//	Отказ - Булево - Признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//
Процедура ЗаполнитьВидыЗапасовПоКомиссионнымТоварамИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы Тогда
		СформироватьВТДоступныеВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, "ТаблицаВидыЗапасов");	
	КонецЕсли;
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, Ложь);
	
	УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
	
	СформироватьВТТаблицаОстатков("КомиссионныеТоварыИнтеркампани", ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	ЗаполнитьВидыЗапасовПоТаблицеОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов);
	
	Если Не Отказ Тогда
		ДозаполнитьВидыЗапасовВОтчетахПоКомиссииИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Отказ Тогда
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет виды запасов в табличной части "ВидыЗапасов" документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - временные таблицы ТаблицаТоваров, ТаблицаВидыЗапасов.
//	Отказ - Булево - Признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//
Процедура ЗаполнитьВидыЗапасовПоОстаткамКОформлению(ДокументОбъект,
													МенеджерВременныхТаблиц,
													Отказ,
													ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ПараметрыЗаполненияВидовЗапасов.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Неопределено Тогда
		ТекстИсключения = НСтр("ru = 'В вызывающем коде не задано значение параметра ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию.'");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков = "ТаблицаВидыЗапасов"
		И Не ПараметрыЗаполненияВидовЗапасов.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию Тогда
		
		ТекстИсключения = НСтр("ru = 'ТаблицаВидыЗапасов нужна для заполнения видов запасов по умолчанию, поэтому ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию должен быть выстален в ИСТИНА.'");
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	ИменаВременныхТаблиц = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы Тогда
		СформироватьВТДоступныеВидыЗапасов(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											"ТаблицаВидыЗапасов");
	КонецЕсли;
	
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, Ложь);
	
	УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
	
	СформироватьВТТаблицаОстатков(ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков,
									ДокументОбъект,
									МенеджерВременныхТаблиц,
									ПараметрыЗаполненияВидовЗапасов);
	
	ЗаполнитьВидыЗапасовПоТаблицеОстатков(ДокументОбъект,
											МенеджерВременныхТаблиц,
											Отказ,
											ПараметрыЗаполненияВидовЗапасов);
		
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц, ,ИменаВременныхТаблиц);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Отказ Тогда
		ДокументОбъект.ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
	КонецЕсли;
	
КонецПроцедуры

// При проведении документа определяется факт потребления "чужих" видов запасов и выполняется
// формирование движений по РН Резервы товаров организаций.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	Отказ - Булево - Признак необходимости прерывания проведения документа.
//	ПараметрыЗаполненияВидовЗапасов - Неопределено, Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//
Процедура СформироватьРезервыПоТоварамОрганизаций(ДокументОбъект, Отказ, ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	Если ОбновлениеИнформационнойБазы.ЭтоВызовИзОбработчикаОбновления() Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
	
	Если ДополнительныеСвойства.Свойство("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми")
		И ДополнительныеСвойства.ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми Тогда
		
		Возврат;
		
	КонецЕсли;
	
	МенеджерВременныхТаблиц = ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Если ДополнительныеСвойства.НужноКонтролироватьОстаткиТоваровОрганизаций
		Или ДополнительныеСвойства.НужноФормироватьСторноПоРезервамТоваровОрганизаций Тогда
		
		// Сторно резервов вызываем один раз
		Если ДополнительныеСвойства.НужноФормироватьСторноПоРезервамТоваровОрганизаций
			И Не ДокументОбъект.ДополнительныеСвойства.Свойство("СформированоВтСторно") Тогда
			
			СформироватьВТСторноРезервов(ДокументОбъект,
										МенеджерВременныхТаблиц,
										ПараметрыЗаполненияВидовЗапасов);
			
			ДокументОбъект.ДополнительныеСвойства.Вставить("СформированоВтСторно", Истина);
			
		КонецЕсли;
			
		Если ДополнительныеСвойства.НужноКонтролироватьОстаткиТоваровОрганизаций Тогда
			СформироватьРезервыПоОрганизациямДляКонтроля(ДокументОбъект,
														МенеджерВременныхТаблиц,
														Отказ,
														ПараметрыЗаполненияВидовЗапасов);
		КонецЕсли;
		
		Если Отказ Тогда
			ДополнительныеСвойства.Вставить("ОтказПриЗаполненииВидовЗапасов");
			
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ТаблицаРезервыТоваровОрганизаций = ТаблицаРезервыТоваровОрганизаций(ДокументОбъект,
																		МенеджерВременныхТаблиц,
																		ПараметрыЗаполненияВидовЗапасов,
																		Ложь);
	
	// Если документ делает и приход, и расход, то писать регистр нужно только тогда, когда по второй стороне
	// движений таблица уже сформирована.
	Если Не ПараметрыЗаполненияВидовЗапасов.ДокументДелаетИПриходИРасход
		Или ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") Тогда
		
		НаборРезервыТоваровОрганизаций = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей();
		НаборРезервыТоваровОрганизаций.Отбор.Регистратор.Установить(ДокументОбъект.Ссылка);
		
		ПроведениеСерверУТ.ЗаполнитьДополнительныеСвойстваНабораПоДокументу(ДокументОбъект,
																			НаборРезервыТоваровОрганизаций);
		
		НаборРезервыТоваровОрганизаций.Загрузить(ТаблицаРезервыТоваровОрганизаций);
		НаборРезервыТоваровОрганизаций.ДополнительныеСвойства.Вставить("РассчитыватьИзменения", Истина);
		НаборРезервыТоваровОрганизаций.Записать();
		
		Если ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") Тогда
			ДокументОбъект.ДополнительныеСвойства.ТаблицаРезервыТоваровОрганизаций.Очистить();
		КонецЕсли;
		
	Иначе
		ДокументОбъект.ДополнительныеСвойства.Вставить("ТаблицаРезервыТоваровОрганизаций", ТаблицаРезервыТоваровОрганизаций);
		ДокументОбъект.ДополнительныеСвойства.Вставить("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми", Ложь);
	КонецЕсли;
	
КонецПроцедуры

// При проведении документа формируется ВТ ДоступныеВидыЗапасов для использования в других механизмах контроля,
// также ставятся необходимые блокировки.
//
// Параметры:
//	ДокументОбъект		- ДокументОбъект			- Документ, в котором заполняются виды запасов.
//	РежимЗаписи			- РежимЗаписиДокумента		- Режим записи документа.
//	ПараметрыЗаполнения	- Неопределено, Структура	- См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//
Процедура ПодготовитьЗаписьТоваровОрганизаций(ДокументОбъект, РежимЗаписи, ПараметрыЗаполнения = Неопределено) Экспорт
	
	ДополнительныеСвойства	= ДокументОбъект.ДополнительныеСвойства;
	МенеджерВременныхТаблиц	= ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы.МенеджерВременныхТаблиц;
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ПараметрыЗаполненияВидовЗапасов();
		ПараметрыЗаполнения.ОтборыВидовЗапасов.Организация = ДокументОбъект[ПараметрыЗаполнения.ИмяПоляОрганизация];
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми")
		И ДополнительныеСвойства.ЗаписыватьРезервыТоваровОрганизацийВместеСоВсеми Тогда
		
		Возврат;
		
	КонецЕсли;
	
	СохранитьИсходныеДвиженияТоваровИРезервов(ДокументОбъект.Ссылка, МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыОрганизаций.Период,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ТоварыОрганизаций.Количество
	|		ИНАЧЕ -ТоварыОрганизаций.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ТоварыОрганизаций.КоличествоПоРНПТ
	|		ИНАЧЕ -ТоварыОрганизаций.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ТоварыОрганизаций
	|ИЗ
	|	&ТоварыОрганизаций КАК ТоварыОрганизаций";
	
	ТоварыОрганизаций = ?(РежимЗаписи = РежимЗаписиДокумента.Проведение,
							ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизаций,
							РегистрыНакопления.ТоварыОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки());
	
	Запрос.УстановитьПараметр("ТоварыОрганизаций", ТоварыОрганизаций);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Выполнить();
	
	СформироватьВТТоварыОрганизацийИзменения(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполнения);
	
	Если Не ПараметрыЗаполнения.ДоступныеВидыЗапасовУжеСформированы Тогда
		
		Организации = ОрганизацииДляКонтроляОстатков(МенеджерВременныхТаблиц);
		
		Если ЗначениеЗаполнено(ПараметрыЗаполнения.ОтборыВидовЗапасов.Организация) Тогда
			Организации.Добавить(ПараметрыЗаполнения.ОтборыВидовЗапасов.Организация);
			Организации = ОбщегоНазначенияКлиентСервер.СвернутьМассив(Организации);
		КонецЕсли;
		
		ПараметрыЗаполнения.ОтборыВидовЗапасов.Организация = Организации;
		
		СформироватьВТДоступныеВидыЗапасов(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполнения,
											"ДвиженияТоварыОрганизацийПередЗаписью");
		
	КонецЕсли;
	
	УстановитьДопСвойстваКонтролироватьОстаткиИФормироватьСторно(ДокументОбъект,
																ПараметрыЗаполнения,
																МенеджерВременныхТаблиц);
	
	Если ДополнительныеСвойства.НужноКонтролироватьОстаткиТоваровОрганизаций
		Или ДополнительныеСвойства.НужноФормироватьСторноПоРезервамТоваровОрганизаций Тогда
		
		СформироватьВтОтборыОстатковПоТаблицеИзменений(МенеджерВременныхТаблиц);
		УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
КонецПроцедуры

// Сохраняет в менеджере временных таблиц исходные движения по регистрам Товары организаций и Резервы товаров 
// организаций.
//
// Параметры:
//	ДокументСсылка - ДокументСсылка - ссылка на документ в ИБ.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, в который будут помещены таблицы.
//	СоздаватьПустыеТаблицы - Булево - признак необходимости создания пустых таблиц записей регистров.
//
Процедура СохранитьИсходныеДвиженияТоваровИРезервов(ДокументСсылка,
													МенеджерВременныхТаблиц,
													СоздаватьПустыеТаблицы = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	ТекстыЗапроса = Новый Массив;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ДвиженияТоварыОрганизацийПередЗаписью") = Неопределено Тогда
		
		Если СоздаватьПустыеТаблицы Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Товары.Период,
			|	Товары.Регистратор,
			|	Товары.НомерСтроки,
			|	Товары.Активность,
			|	Товары.ВидДвижения,
			|	Товары.АналитикаУчетаНоменклатуры,
			|	Товары.Организация,
			|	Товары.ВидЗапасов,
			|	Товары.НомерГТД,
			|	Товары.Количество,
			|	Товары.КоличествоПоРНПТ,
			|	Товары.ХозяйственнаяОперация,
			|	Товары.НалогообложениеНДС,
			|	Товары.КорАналитикаУчетаНоменклатуры,
			|	Товары.КорВидЗапасов,
			|	Товары.ОрганизацияОтгрузки,
			|	Товары.ДокументРеализации,
			|	Товары.СтатьяРасходов,
			|	Товары.АналитикаРасходов,
			|	Товары.АналитикаАктивовПассивов,
			|	Товары.Номенклатура,
			|	Товары.Характеристика,
			|	Товары.РасчетПартий,
			|	Товары.Первичное
			|ПОМЕСТИТЬ ДвиженияТоварыОрганизацийПередЗаписью
			|ИЗ
			|	&ТоварыОрганизаций КАК Товары";
			
			ТоварыОрганизаций = РегистрыНакопления.ТоварыОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
			
			Запрос.УстановитьПараметр("ТоварыОрганизаций", ТоварыОрганизаций);
			
		Иначе
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Товары.Период,
			|	Товары.Регистратор,
			|	Товары.НомерСтроки,
			|	Товары.Активность,
			|	Товары.ВидДвижения,
			|	Товары.АналитикаУчетаНоменклатуры,
			|	Товары.Организация,
			|	Товары.ВидЗапасов,
			|	Товары.НомерГТД,
			|	Товары.Количество,
			|	ВЫБОР
			|		КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
			|				И НАЧАЛОПЕРИОДА(Товары.Период, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
			|			ТОГДА Товары.КоличествоПоРНПТ
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПоРНПТ,
			|	Товары.ХозяйственнаяОперация,
			|	Товары.НалогообложениеНДС,
			|	Товары.КорАналитикаУчетаНоменклатуры,
			|	Товары.КорВидЗапасов,
			|	Товары.ОрганизацияОтгрузки,
			|	Товары.ДокументРеализации,
			|	Товары.СтатьяРасходов,
			|	Товары.АналитикаРасходов,
			|	Товары.АналитикаАктивовПассивов,
			|	Товары.Номенклатура,
			|	Товары.Характеристика,
			|	Товары.РасчетПартий,
			|	Товары.Первичное
			|ПОМЕСТИТЬ ДвиженияТоварыОрганизацийПередЗаписью
			|ИЗ
			|	РегистрНакопления.ТоварыОрганизаций КАК Товары
			|ГДЕ
			|	Товары.Регистратор = &Ссылка";
		КонецЕсли;
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ДвиженияРезервыТоварыОрганизацийПередЗаписью") = Неопределено Тогда
		
		Если СоздаватьПустыеТаблицы Тогда
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Резервы.Период,
			|	Резервы.Регистратор,
			|	Резервы.НомерСтроки,
			|	Резервы.Активность,
			|	Резервы.ВидДвижения,
			|	Резервы.АналитикаУчетаНоменклатуры,
			|	Резервы.Организация,
			|	Резервы.ВидЗапасов,
			|	Резервы.НомерГТД,
			|	Резервы.Количество,
			|	Резервы.КоличествоПоРНПТ,
			|	Резервы.КорОрганизация,
			|	Резервы.КорВидЗапасов
			|ПОМЕСТИТЬ ДвиженияРезервыТоварыОрганизацийПередЗаписью
			|ИЗ
			|	&РезервыТоваровОрганизаций КАК Резервы
			|ГДЕ
			|	Резервы.Регистратор = &Ссылка";
			
			РезервыТоваровОрганизаций = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
			
			Запрос.УстановитьПараметр("РезервыТоваровОрганизаций", РезервыТоваровОрганизаций);
			
		Иначе
			
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Резервы.Период,
			|	Резервы.Регистратор,
			|	Резервы.НомерСтроки,
			|	Резервы.Активность,
			|	Резервы.ВидДвижения,
			|	Резервы.АналитикаУчетаНоменклатуры,
			|	Резервы.Организация,
			|	Резервы.ВидЗапасов,
			|	Резервы.НомерГТД,
			|	Резервы.Количество,
			|	ВЫБОР
			|		КОГДА &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
			|				И НАЧАЛОПЕРИОДА(Резервы.Период, МЕСЯЦ) >= &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
			|			ТОГДА Резервы.КоличествоПоРНПТ
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК КоличествоПоРНПТ,
			|	Резервы.КорОрганизация,
			|	Резервы.КорВидЗапасов
			|ПОМЕСТИТЬ ДвиженияРезервыТоварыОрганизацийПередЗаписью
			|ИЗ
			|	РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
			|ГДЕ
			|	Резервы.Регистратор = &Ссылка";
			
		КонецЕсли;
		
		ТекстыЗапроса.Добавить(ТекстЗапроса);
		
	КонецЕсли;
	
	Если ТекстыЗапроса.Количество() > 0 Тогда
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Разделитель = "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
		Запрос.Текст = СтрСоединить(ТекстыЗапроса, Разделитель);
		Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
		
		УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
КонецПроцедуры

// Метод формирует на основании отборов ВТ ДоступныеВидыЗапасов. Используются при построении таблицы остатков.
// Экспортируется для документа ВозвратСырьяДавальцу.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором будут заполняться виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Необходима таблица ТаблицаТоваров,
//														ВТ ДоступныеВидыЗапасов будет помещена сюда же.
//	ПараметрыЗаполненияВидовЗапасов - Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//	ИмяВТИсточникаТекущихВидовЗапасов - Строка - Имя ВТ источника текущих видов запасов документа.
//
Процедура СформироватьВТДоступныеВидыЗапасов(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											ИмяВТИсточникаТекущихВидовЗапасов) Экспорт
	
	ПараметрыЗаполненияВидовЗапасов.ДоступныеВидыЗапасовУжеСформированы = Истина;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ДоступныеВидыЗапасов") <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОтборыВидовЗапасов = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВидыЗапасовДокумента") <> Неопределено Тогда
		ТекстЗапроса = 
		"УНИЧТОЖИТЬ ВидыЗапасовДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	Иначе
		ТекстЗапроса = "";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ ВидыЗапасовДокумента
	|ИЗ
	|	&ИмяВТИсточникаТекущихВидовЗапасов КАК ТаблицаВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Настройка.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА СпрУчетнаяПолитика.СистемаНалогообложения = ЗНАЧЕНИЕ(Перечисление.СистемыНалогообложения.Упрощенная)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяНДС)
	|	КОНЕЦ КАК НалогообложениеНДС
	|ПОМЕСТИТЬ УчетнаяПолитикаОрганизаций
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(&Дата, НЕ &ПоВсемНалогообложениямНДС) КАК Настройка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.УчетныеПолитикиОрганизаций КАК СпрУчетнаяПолитика
	|		ПО Настройка.УчетнаяПолитика = СпрУчетнаяПолитика.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	// Виды запасов собственной организации
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.Организация КАК ДляОрганизации,
	|	ВидыЗапасов.Ссылка КАК ВидЗапасов
	|ПОМЕСТИТЬ ДоступныеВидыЗапасов
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УстаревшиеВидыЗапасовСОстатками КАК УстаревшиеВидыЗапасовСОстатками
	|		ПО ВидыЗапасов.Ссылка = УстаревшиеВидыЗапасовСОстатками.ВидЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗапасовДокумента КАК ВидыЗапасовДокумента
	|		ПО ВидыЗапасов.Ссылка = ВидыЗапасовДокумента.ВидЗапасов
	|ГДЕ
	|	ВидыЗапасов.Организация В(&Организация)
	|	И (&ПоВсемТипамЗапасов
	|			ИЛИ ВидыЗапасов.ТипЗапасов В (&ТипЗапасов))
	|	И (&ПоВсемНалогообложениямНДС
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС В (&НалогообложениеНДС)
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПоФактическомуИспользованию)
	|			ИЛИ ВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)) // собственный товар можно продавать под любое налогообложение.
	|	И (&ПоВсемВладельцамТоваров
	|			ИЛИ ВидыЗапасов.ВладелецТовара В (&ВладелецТовара))
	|	И (&ПоВсемСоглашениям
	|			ИЛИ ВидыЗапасов.Соглашение В (&Соглашение))
	|	И (&ПоВсемВалютам
	|			ИЛИ ВидыЗапасов.Валюта В (&Валюта))
	|	И (&ПоВсемКонтрагентам
	|			ИЛИ ВидыЗапасов.Контрагент В (&Контрагент))
	|	И (&ПоВсемДоговорам
	|			ИЛИ ВидыЗапасов.Договор В (&Договор))
	|	И (&ПоВсемГруппамПродукции
	|			ИЛИ ВидыЗапасов.ГруппаПродукции В (&ГруппаПродукции))
	|	И (&ПоВсемВидамЦен
	|			ИЛИ ВидыЗапасов.ВидЦены В (&ВидЦены))
	|	И (НЕ ВидыЗапасов.Устаревший
	|				И НЕ ВидыЗапасов.ЭтоДубль
	|			ИЛИ НЕ УстаревшиеВидыЗапасовСОстатками.ВидЗапасов ЕСТЬ NULL
	|			ИЛИ НЕ ВидыЗапасовДокумента.ВидЗапасов ЕСТЬ NULL
	|			ИЛИ НЕ &ИсключатьУстаревшие)
	|
	|ОБЪЕДИНИТЬ
	|
	// Виды запасов по интеркампани
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВидыЗапасов.Организация,
	|	ВидыЗапасов.Ссылка
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО ВидыЗапасов.Организация = Настройка.ОрганизацияВладелец
	|			И ВидыЗапасов.ТипЗапасов = Настройка.ТипЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|		ПО (Настройка.ОрганизацияВладелец = УчетнаяПолитикаОрганизаций.Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УстаревшиеВидыЗапасовСОстатками КАК УстаревшиеВидыЗапасовСОстатками
	|		ПО ВидыЗапасов.Ссылка = УстаревшиеВидыЗапасовСОстатками.ВидЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВидыЗапасовДокумента КАК ВидыЗапасовДокумента
	|		ПО ВидыЗапасов.Ссылка = ВидыЗапасовДокумента.ВидЗапасов
	|ГДЕ
	|	&ПодбиратьВидыЗапасовПоИнтеркампани
	|	И НЕ ВидыЗапасов.Организация В (&ИнтеркампаниКроме)
	|	И Настройка.СпособПередачиТоваров <> ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)
	|	И Настройка.ОрганизацияПродавец В(&Организация)
	|	И (&ПоВсемТипамЗапасов
	|			ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|				И ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар) В (&ТипЗапасов)
	|			ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|				И ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар) В (&ТипЗапасов))
	|	И (&ПоВсемНалогообложениямНДС
	|			ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	// При комиссии контролируем налогообложение организации-владельца.
	|			ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|				И Настройка.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|				И УчетнаяПолитикаОрганизаций.НалогообложениеНДС В (&НалогообложениеНДС)
	// При субкомиссии контролируем налогообложение комитента.
	|			ИЛИ Настройка.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|				И Настройка.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|				И ВидыЗапасов.НалогообложениеНДС В (&НалогообложениеНДС))
	|	И НЕ ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И (НЕ ВидыЗапасов.Устаревший
	|				И НЕ ВидыЗапасов.ЭтоДубль
	|			ИЛИ НЕ УстаревшиеВидыЗапасовСОстатками.ВидЗапасов ЕСТЬ NULL
	|			ИЛИ НЕ ВидыЗапасовДокумента.ВидЗапасов ЕСТЬ NULL
	|			ИЛИ НЕ &ИсключатьУстаревшие)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УчетнаяПолитикаОрганизаций";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ПустаяСтрока(ИмяВТИсточникаТекущихВидовЗапасов) Тогда
		ПустаяТаблицаВидовЗапасов = Новый ТаблицаЗначений;
		ПустаяТаблицаВидовЗапасов.Колонки.Добавить("ВидЗапасов", Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
		
		Запрос.УстановитьПараметр("ИмяВТИсточникаТекущихВидовЗапасов", ПустаяТаблицаВидовЗапасов);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяВТИсточникаТекущихВидовЗапасов", ИмяВТИсточникаТекущихВидовЗапасов);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Дата", ДокументОбъект.Дата);
	
	Если ЗначениеЗаполнено(ОтборыВидовЗапасов.Организация) Тогда
		Запрос.УстановитьПараметр("Организация", ОтборыВидовЗапасов.Организация);
	Иначе
		Запрос.УстановитьПараметр("Организация", ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
	КонецЕсли;
	
	ПодбиратьВидыЗапасовПоИнтеркампани	= ПолучитьФункциональнуюОпцию("ИспользоватьПередачиТоваровМеждуОрганизациями")
											И ПараметрыЗаполненияВидовЗапасов.ПодбиратьВидыЗапасовПоИнтеркампани;
	ИнтеркампаниКроме					= ?(ПодбиратьВидыЗапасовПоИнтеркампани,
											ПараметрыЗаполненияВидовЗапасов.ПриПодбореПоИнтеркампаниИсключатьОрганизации,
											Новый Массив);
	
	Запрос.УстановитьПараметр("ПодбиратьВидыЗапасовПоИнтеркампани", ПодбиратьВидыЗапасовПоИнтеркампани);
	Запрос.УстановитьПараметр("ИнтеркампаниКроме", ИнтеркампаниКроме);
	
	Запрос.УстановитьПараметр("ТипЗапасов", ОтборыВидовЗапасов.ТипЗапасов);
	Запрос.УстановитьПараметр("ПоВсемТипамЗапасов", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ТипЗапасов));
	
	Если КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов) Тогда
		Запрос.УстановитьПараметр("НалогообложениеНДС", Перечисления.ТипыНалогообложенияНДС.СНдсБезНдс(ОтборыВидовЗапасов.НалогообложениеНДС));
		Запрос.УстановитьПараметр("ПоВсемНалогообложениямНДС", Ложь);
	Иначе
		Запрос.УстановитьПараметр("НалогообложениеНДС", Перечисления.ТипыНалогообложенияНДС.ПустаяСсылка());
		Запрос.УстановитьПараметр("ПоВсемНалогообложениямНДС", Истина);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВладелецТовара", ОтборыВидовЗапасов.ВладелецТовара);
	Запрос.УстановитьПараметр("ПоВсемВладельцамТоваров", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ВладелецТовара));
	
	Запрос.УстановитьПараметр("Соглашение", ОтборыВидовЗапасов.Соглашение);
	Запрос.УстановитьПараметр("ПоВсемСоглашениям", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Соглашение));
	
	Запрос.УстановитьПараметр("Валюта", ОтборыВидовЗапасов.Валюта);
	Запрос.УстановитьПараметр("ПоВсемВалютам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Валюта));
	
	Запрос.УстановитьПараметр("Контрагент", ОтборыВидовЗапасов.Контрагент);
	Запрос.УстановитьПараметр("ПоВсемКонтрагентам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Контрагент));
	
	Запрос.УстановитьПараметр("Договор", ОтборыВидовЗапасов.Договор);
	Запрос.УстановитьПараметр("ПоВсемДоговорам", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.Договор));
	
	Запрос.УстановитьПараметр("ГруппаПродукции", ОтборыВидовЗапасов.ГруппаПродукции);
	Запрос.УстановитьПараметр("ПоВсемГруппамПродукции", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ГруппаПродукции));
	
	Запрос.УстановитьПараметр("ВидЦены", ОтборыВидовЗапасов.ВидЦены);
	Запрос.УстановитьПараметр("ПоВсемВидамЦен", Не ЗначениеЗаполнено(ОтборыВидовЗапасов.ВидЦены));
	
	Запрос.УстановитьПараметр("ИсключатьУстаревшие", ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков = "ТоварыОрганизаций");
	
	Запрос.Выполнить();
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыРегламентныхЗаданий

// Процедуры обновления информации о доступности товаров.
//
Процедура ОбновитьИнформациюОДоступностиТоваровДляВнешнихПользователей() Экспорт

	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.ОбновлениеДанныхОДоступностиТоваровДляВнешнихПользователей);
	
	УстановитьПривилегированныйРежим(Истина);

	НаборЗаписей = РегистрыСведений.ДоступностьТоваровДляВнешнихПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Записать(Истина);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоДня",   НачалоДня(ТекущаяДатаСеанса()));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Т.Номенклатура           КАК Номенклатура,
	|	Т.Характеристика         КАК Характеристика,
	|	Т.Склад                  КАК Склад,
	|	Т.ВНаличииОстаток
	|		- Т.ВРезервеСоСкладаОстаток
	|		- Т.ВРезервеПодЗаказОстаток КАК Количество
	|
	|ПОМЕСТИТЬ ВтОстаткиСклада
	|ИЗ
	|	РегистрНакопления.СвободныеОстатки.Остатки(,) КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Характеристика, Склад
	|;
	|
	|//////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.ДатаДоступности         КАК Период,
	|
	|	Т.Номенклатура            КАК Номенклатура,
	|	Т.Характеристика          КАК Характеристика,
	|	Т.Склад                   КАК Склад,
	|
	|	Т.Количество + ЕСТЬNULL(ОстаткиСклада.Количество, 0) КАК Доступно
	|
	|ИЗ
	|	РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК Т
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстаткиСклада КАК ОстаткиСклада
	|		ПО Т.Склад          = ОстаткиСклада.Склад
	|		 И Т.Номенклатура   = ОстаткиСклада.Номенклатура
	|		 И Т.Характеристика = ОстаткиСклада.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
	|		ПО Т.Склад          = НастройкаХарактеристика.Склад
	|		 И Т.Номенклатура   = НастройкаХарактеристика.Номенклатура
	|		 И Т.Характеристика = НастройкаХарактеристика.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
	|		ПО Т.Склад        = НастройкаНоменклатура.Склад
	|		 И Т.Номенклатура = НастройкаНоменклатура.Номенклатура
	|		 И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
	|		ПО Т.Склад = НастройкаСклад.Склад
	|		 И НастройкаСклад.Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
	|		 И НастройкаНоменклатура.Склад ЕСТЬ NULL
	|
	|ГДЕ
	|	ЕСТЬNULL(НастройкаХарактеристика.Контролировать, ЕСТЬNULL(НастройкаНоменклатура.Контролировать, НастройкаСклад.Контролировать))
	|	И Т.ДатаДоступности > &НачалоДня
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	&НачалоДня               КАК Период,
	|
	|	Т.Номенклатура           КАК Номенклатура,
	|	Т.Характеристика         КАК Характеристика,
	|	Т.Склад                  КАК Склад,
	|
	|	Т.Количество + ЕСТЬNULL(ОстаткиИзЗаказов.Количество, 0) КАК Доступно
	|
	|ИЗ
	|	ВтОстаткиСклада КАК Т
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеОстаткиПланируемыхПоступлений КАК ОстаткиИзЗаказов
	|		ПО Т.Склад          = ОстаткиИзЗаказов.Склад
	|		 И Т.Номенклатура   = ОстаткиИзЗаказов.Номенклатура
	|		 И Т.Характеристика = ОстаткиИзЗаказов.Характеристика
	|		 И ОстаткиИзЗаказов.ДатаДоступности = ДАТАВРЕМЯ(1, 1, 1)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаХарактеристика
	|		ПО Т.Склад          = НастройкаХарактеристика.Склад
	|		 И Т.Номенклатура   = НастройкаХарактеристика.Номенклатура
	|		 И Т.Характеристика = НастройкаХарактеристика.Характеристика
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаНоменклатура
	|		ПО Т.Склад        = НастройкаНоменклатура.Склад
	|		 И Т.Номенклатура = НастройкаНоменклатура.Номенклатура
	|		 И НастройкаНоменклатура.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаКонтроляОбеспечения КАК НастройкаСклад
	|		ПО Т.Склад = НастройкаСклад.Склад
	|		 И НастройкаСклад.Номенклатура   = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|		 И НастройкаСклад.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		 И НастройкаХарактеристика.Склад ЕСТЬ NULL
	|		 И НастройкаНоменклатура.Склад ЕСТЬ NULL
	|
	|ГДЕ
	|	ЕСТЬNULL(НастройкаХарактеристика.Контролировать, ЕСТЬNULL(НастройкаНоменклатура.Контролировать, НастройкаСклад.Контролировать))";
	
	НаборЗаписей = РегистрыСведений.ДоступностьТоваровДляВнешнихПользователей.СоздатьНаборЗаписей();
	НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	Если НаборЗаписей.Модифицированность() Тогда
		НаборЗаписей.Записать(Ложь);
	КонецЕсли;

КонецПроцедуры

// Выполняет запуск свертки сторно-записей регистра "Резервы товаров организаций".
// В результате удаляются лишние записи регистра.
Процедура ВыполнитьСверткуРезервовТоваровОрганизаций() Экспорт
	
	ОбщегоНазначения.ПриНачалеВыполненияРегламентногоЗадания(Метаданные.РегламентныеЗадания.СверткаРезервовТоваровОрганизаций);
	РегистрыНакопления.РезервыТоваровОрганизаций.ВыполнитьСверткуРегистраРезервыТоваровОрганизаций();
	
КонецПроцедуры

#КонецОбласти

#Область ПользовательскийИнтерфейс

// Устанавливаем условное оформление для подразделения, если используются виды запасов по подразделениям.
//
// Параметры:
// 		Форма - Форма - Содержит данную форму 
// 		ИмяПоляВводаПодразделения - Строка - Наименование элемента формы, содержащего подразделение,
//											   если оно отличается от "Подразделение"
// 		ПутьКПолюОтбора - Строка - Полный путь к реквизиту "Подразделение",
//									если он отличается от "Объект.Подразделение".
// 
Процедура УстановитьУсловноеОформлениеПодразделенияДляВидовЗапасов(Форма,
																	ИмяПоляВводаПодразделения = "Подразделение",
																	ПутьКПолюОтбора = "Объект.Подразделение") Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоПодразделениямМенеджерам") Тогда
		Возврат;
	КонецЕсли;
	
	УсловноеОформление = Форма.УсловноеОформление;
	ЭлементыФормы = Форма.Элементы;
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаПодразделения].Имя);
	
	ЭлементыФормы[ИмяПоляВводаПодразделения].АвтоОтметкаНезаполненного = Истина;
	
	ОтборЭлемента = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПутьКПолюОтбора);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Истина);
	
КонецПроцедуры

Функция ПараметрыРедактированияВидовЗапасов() Экспорт
	
	Результат = Новый Структура();
	Результат.Вставить("ИмяТЧТовары",                   "Товары");
	Результат.Вставить("ИмяТЧВидыЗапасов",              "ВидыЗапасов");
	Результат.Вставить("АдресТоваровВХранилище",        "");
	Результат.Вставить("АдресВидовЗапасовВХранилище",   "");
	Результат.Вставить("ТоварВШапке",                   Ложь);
	Результат.Вставить("ИмяКолонкиНоменклатура",        "Номенклатура");
	Результат.Вставить("ИмяКолонкиХарактеристика",      "Характеристика");
	Результат.Вставить("РедактироватьВидыЗапасов",      Истина);
	Результат.Вставить("ОтображатьДокументыРеализации", Ложь);
	Результат.Вставить("Склад",                         Справочники.Склады.ПустаяСсылка());
	Результат.Вставить("Организация",                   Неопределено);
	Результат.Вставить("ЦенаВключаетНДС",               Ложь);
	Результат.Вставить("ДокументМодифицирован",         Неопределено);
	Результат.Вставить("ВидыЗапасовУказаныВручную",     Неопределено);
	Результат.Вставить("ДатаДокумента",                 Неопределено);
	
	Возврат Результат;
	
КонецФункции

// Процедура помещает табличные части "Товары" и "Виды запасов" во временное хранилище.
//
// Параметры:
//  Форма								 - ФормаКлиентскогоПриложения - форма документа
//  ПараметрыРедактированияВидовЗапасов	 - Структура - см. ЗапасыСервер.ПараметрыРедактированияВидовЗапасов 
// 
// Возвращаемое значение:
//  Структура - см. ЗапасыСервер.ПараметрыРедактированияВидовЗапасов 
//
Функция ПоместитьТоварыИВидыЗапасовВХранилище(Форма, ПараметрыРедактированияВидовЗапасов = Неопределено) Экспорт
	
	Если ПараметрыРедактированияВидовЗапасов = Неопределено Тогда
		ПараметрыРедактированияВидовЗапасов = ПараметрыРедактированияВидовЗапасов();
	КонецЕсли;
	
	Товары                  = Форма.Объект[ПараметрыРедактированияВидовЗапасов.ИмяТЧТовары];
	ВидыЗапасов             = Форма.Объект[ПараметрыРедактированияВидовЗапасов.ИмяТЧВидыЗапасов];
	УникальныйИдентификатор = Форма.УникальныйИдентификатор;
		
	Если ПараметрыРедактированияВидовЗапасов.ТоварВШапке Тогда
		
		ТаблицаТоваров = Новый ТаблицаЗначений;
		ТаблицаТоваров.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
		ТаблицаТоваров.Колонки.Добавить("АналитикаУчетаНоменклатуры", Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаТоваров.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаТоваров.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
		
		НоваяСтрока = ТаблицаТоваров.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Форма.Объект);
		НоваяСтрока.НомерСтроки = 1;
		
	Иначе
		
		ТаблицаТоваров = Товары.Выгрузить();
		
		Если ПараметрыРедактированияВидовЗапасов.ИмяКолонкиНоменклатура <> "Номенклатура" Тогда
			Если ТаблицаТоваров.Колонки.Найти("Номенклатура") <> Неопределено Тогда
				ТаблицаТоваров.Колонки.Удалить("Номенклатура");
			КонецЕсли;
			
			ТаблицаТоваров.Колонки[ПараметрыРедактированияВидовЗапасов.ИмяКолонкиНоменклатура].Имя = "Номенклатура";
		КонецЕсли;
		
		Если ПараметрыРедактированияВидовЗапасов.ИмяКолонкиХарактеристика <> "Характеристика" Тогда
			Если ТаблицаТоваров.Колонки.Найти("Характеристика") <> Неопределено Тогда
				ТаблицаТоваров.Колонки.Удалить("Характеристика");
			КонецЕсли;
			
			ТаблицаТоваров.Колонки[ПараметрыРедактированияВидовЗапасов.ИмяКолонкиХарактеристика].Имя = "Характеристика";
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыРедактированияВидовЗапасов.АдресТоваровВХранилище = ПоместитьВоВременноеХранилище(
		ТаблицаТоваров,
		УникальныйИдентификатор);
	
	ТаблицаВидовЗапасов = ВидыЗапасов.Выгрузить();
	
	ПараметрыРедактированияВидовЗапасов.АдресВидовЗапасовВХранилище = ПоместитьВоВременноеХранилище(
		ТаблицаВидовЗапасов,
		УникальныйИдентификатор);
		
	Если Не ЗначениеЗаполнено(ПараметрыРедактированияВидовЗапасов.Организация) Тогда
		ПараметрыРедактированияВидовЗапасов.Организация = Форма.Объект.Организация;
	КонецЕсли;
	
	ПараметрыРедактированияВидовЗапасов.ВидыЗапасовУказаныВручную = Форма.Объект.ВидыЗапасовУказаныВручную;
	
	Если Форма.Объект.Свойство("ЦенаВключаетНДС") Тогда
		ПараметрыРедактированияВидовЗапасов.ЦенаВключаетНДС = Форма.Объект.ЦенаВключаетНДС;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПараметрыРедактированияВидовЗапасов.Склад)
		И Форма.Объект.Свойство("Склад") Тогда
		ПараметрыРедактированияВидовЗапасов.Склад = Форма.Объект.Склад;
	КонецЕсли;
	
	ПараметрыРедактированияВидовЗапасов.ДокументМодифицирован = Форма.Модифицированность;
	
	ПараметрыРедактированияВидовЗапасов.РедактироватьВидыЗапасов =
		ПараметрыРедактированияВидовЗапасов.РедактироватьВидыЗапасов
		И Не Форма.ТолькоПросмотр
		И Форма.Доступность
		И ПраваПользователяПовтИсп.РедактированиеВидовЗапасовДокументов();
		
	Если Форма.Объект.Свойство("Дата") Тогда
		ПараметрыРедактированияВидовЗапасов.ДатаДокумента = Форма.Объект.Дата;
	КонецЕсли;
	
	Возврат ПараметрыРедактированияВидовЗапасов;
	
КонецФункции

// Процедура обрабатывает ввод видов запасов и помещает указанные виды запасов в табличную часть объекта.
//
// Параметры:
//  ВыбранноеЗначение	 - Структура - см. ЗапасыСервер.ПараметрыРедактированияВидовЗапасов - значение возвращаемое
//								формой редактирования видов запасов
//  Форма				 - ФормаКлиентскогоПриложения	 - форма объекта, у которого есть табличная часть ВидыЗапасов
//
Процедура ОбработатьВводВидовЗапасовВручную(ВыбранноеЗначение, Форма) Экспорт
	
	ИмяДобавляемогоРеквизита = ИмяРеквизитаФормыВидыЗапасовБылиИзменены();
	ДобавитьРеквизит = Истина;
	РеквизитыФормы = Форма.ПолучитьРеквизиты();
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если РеквизитФормы.Имя = ИмяДобавляемогоРеквизита Тогда
			ДобавитьРеквизит = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ДобавитьРеквизит Тогда
		РеквизитВидыЗапасовБылиИзмененыВручную = Новый РеквизитФормы(ИмяДобавляемогоРеквизита, Новый ОписаниеТипов("Булево"));
		МассивДобавляемыхРеквизитов = Новый Массив;
		МассивДобавляемыхРеквизитов.Добавить(РеквизитВидыЗапасовБылиИзмененыВручную);
		Форма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);
	КонецЕсли;
	
	Форма[ИмяДобавляемогоРеквизита]        = Истина;
	Форма.Объект.ВидыЗапасовУказаныВручную = ВыбранноеЗначение.ВидыЗапасовУказаныВручную;
	Форма.Объект[ВыбранноеЗначение.ИмяТЧВидыЗапасов].Загрузить(ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресВидовЗапасовВХранилище));
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

// Вызывается в событии ПередЗаписьюНаСервере. Анализируется, что пользователь менял виды запасов вручную и если это делалось,
// то принудительно перезаполняются виды запасов.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения 
//  ДокументОбъект	 - ДокументОбъект 
//
Процедура УстановитьПараметрПерезаполнитьВидыЗапасовПриРучномИзмененииВидовЗапасов(Форма, ДокументОбъект) Экспорт
	
	ИмяДобавляемогоРеквизита = ИмяРеквизитаФормыВидыЗапасовБылиИзменены();
	РеквизитыФормы = Форма.ПолучитьРеквизиты();
	Для Каждого РеквизитФормы Из РеквизитыФормы Цикл
		Если РеквизитФормы.Имя = ИмяДобавляемогоРеквизита
			И Форма[ИмяДобавляемогоРеквизита] Тогда
			ДокументОбъект.ДополнительныеСвойства.Вставить("ПерезаполнитьВидыЗапасов", Истина);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПроверкаЗаполненияРеквизитов

// Проверяет заполнение подразделения в табличной части.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект.ЗаказПоставщику, ДокументОбъект.ПоступлениеТоваровИУслуг - Проверяемый документ
//	Товары - ДанныеФормыКоллекция - Табличная часть товаров
//	ТипыНоменклатуры - Массив - Массив проверяемых типов номенклатуры
//	ТекстОшибки - Строка - Текст ошибки с параметром "%1" для номера строки
//	Отказ - Булево - Признак наличия ошибок.
//
Процедура ПроверитьЗаполнениеПодразделенияВТабличнойЧасти(ДокументОбъект, Товары, ТипыНоменклатуры, ТекстОшибки, Отказ) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьПодразделения") Тогда
		Возврат;
	КонецЕсли;  
	
	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.Подразделение КАК Подразделение,
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ВЫРАЗИТЬ(ТаблицаТовары.Номенклатура КАК Справочник.Номенклатура).ТипНоменклатуры В (&ТипыНоменклатуры)
	|	И ТаблицаТовары.Подразделение = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("ТаблицаТовары",     Товары.Выгрузить(, "Номенклатура, Подразделение, НомерСтроки"));
	Запрос.УстановитьПараметр("ТипыНоменклатуры",  ТипыНоменклатуры);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, Выборка.НомерСтроки);
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				ТекстСообщения,
				ДокументОбъект,
				ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Выборка.НомерСтроки, "Подразделение"),
				,
				Отказ);
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура проверяет указание номеров ГТД в табличной части "Товары".
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Товары - ДанныеФормыКоллекция - Табличная часть товаров
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ПроверитьЗаполнениеНомеровГТД(ДокументОбъект, Отказ, ИмяТЧ = "Товары") Экспорт
	
	//++ Локализация
	ПараметрыДокумента = Новый Структура("Дата");
	ЗаполнитьЗначенияСвойств(ПараметрыДокумента, ДокументОбъект);
	ПараметрыДокумента.Дата = ?(ЗначениеЗаполнено(ПараметрыДокумента.Дата),
		ПараметрыДокумента.Дата,
		ТекущаяДатаСеанса());
	ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров = УчетПрослеживаемыхТоваровЛокализация.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров();
	//-- Локализация
	
	МетаданныеОбъекта = ДокументОбъект.Метаданные();
	ПредставлениеТЧ = МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Синоним;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки КАК НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура КАК Номенклатура,
	|	ИсходнаяТаблица.НомерГТД КАК НомерГТД
	|
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ИсходнаяТаблица
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ТаблицаТовары.Номенклатура.ВестиУчетПоГТД
	//++ Локализация
	|	И НЕ (
	|		ЕСТЬNULL(ТаблицаТовары.Номенклатура.КодТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|		И &ДокументРаньшеДатыНачалаПрослеживаемости
	|	)
	//-- Локализация
	|");
	ТаблицаТовары = ДокументОбъект[ИмяТЧ].Выгрузить(, "НомерСтроки, Номенклатура, НомерГТД");
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
	//++ Локализация
	Запрос.УстановитьПараметр("ДокументРаньшеДатыНачалаПрослеживаемости",
		ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров > ПараметрыДокумента.Дата);
	//-- Локализация
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не заполнена колонка ""Номер ГТД"" в строке %1 списка ""%2""'"),
			Выборка.НомерСтроки,
			ПредставлениеТЧ);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ДокументОбъект,
			ИмяТЧ + "[" + (Выборка.НомерСтроки - 1) + "].НомерГТД",
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура проверяет наличие в производимых изделиях номенклатуры, для которой включен учет номеров ГТД.
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от проведения документа.
//	ИмяТЧ - Строка - Имя проверяемой табличной части.
//
Процедура ПроверитьНаличиеИзделийВТЧСУчетомПоГТД(ДокументОбъект, Отказ, ИмяТЧ = "ВыходныеИзделия") Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД") Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонСообщения = НСтр("ru = 'В строке %1 списка ""%2"" выбрана номенклатура, для которой ведется учет по ГТД.
				|При включенной опции ""Запретить оформление операций с импортными товарами без номеров ГТД"" выбор такой номенклатуры запрещен.'");
	
	МетаданныеОбъекта = ДокументОбъект.Метаданные();
	ПредставлениеТЧ = МетаданныеОбъекта.ТабличныеЧасти[ИмяТЧ].Синоним;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ИсходнаяТаблица.НомерСтроки КАК НомерСтроки,
	|	ИсходнаяТаблица.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ИсходнаяТаблица
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Номенклатура.ВестиУчетПоГТД
	|	И ТаблицаТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|");
	
	ТаблицаТовары = ДокументОбъект[ИмяТЧ].Выгрузить(, "НомерСтроки, Номенклатура");
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонСообщения,
			Выборка.НомерСтроки,
			ПредставлениеТЧ);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(ИмяТЧ, Выборка.НомерСтроки, "Номенклатура");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			Текст,
			ДокументОбъект,
			Поле,
			,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура проверяет наличие производимой номенклатуры, для которой включен учет номеров ГТД.
//
// Параметры:
//	ДокументОбъект - Текущий документ
//	Отказ - Булево - Признак отказа от проведения документа.
//
Процедура ПроверитьНаличиеИзделийВШапкеСУчетомПоГТД(ДокументОбъект, Отказ) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД") Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыИзделия = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОбъект.Номенклатура, "ВестиУчетПоГТД, ТипНоменклатуры");
	
	Если РеквизитыИзделия.ВестиУчетПоГТД = Истина
		И (РеквизитыИзделия.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Товар
			ИЛИ РеквизитыИзделия.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.МногооборотнаяТара) Тогда
		
		ШаблонСообщения = НСтр("ru = 'В документе выбрана номенклатура, для которой ведется учет по ГТД.
							|При включенной опции ""Запретить оформление операций с импортными товарами без номеров ГТД"" выбор такой номенклатуры запрещен.'");
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			ШаблонСообщения,
			ДокументОбъект,
			"Номенклатура",
			,
			Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ИсправлениеОтрицательныхОстатковТоваровКПередаче

// Выполняет исправление отрицательных остатков по РН Товары организаций к передаче в фоновом задании.
//
// Параметры:
//	ПараметрыЗадания - Структура - Параметры расчета в фоне.
//
// Возвращаемое значение:
//	Булево - Признак успешного запуска задания.
Функция ИсправитьОстаткиПоТоварамКПередачеВФоновомЗадании(ПараметрыЗадания) Экспорт
	
	НаименованиеЗадания = НСтр("ru = 'Исправление отрицательных остатков по товарам к передаче'");
	
	ПараметрыЭкспортнойПроцедуры = Новый Массив();
	ПараметрыЭкспортнойПроцедуры.Добавить(ПараметрыЗадания);
	
	ПараметрыЗадания = Новый Массив();
	ПараметрыЗадания.Добавить("ЗапасыСервер.ИсправитьОстаткиПоТоварамКПередаче");
	ПараметрыЗадания.Добавить(ПараметрыЭкспортнойПроцедуры);
	
	ФоновоеЗадание = ФоновыеЗадания.Выполнить("ОбщегоНазначения.ВыполнитьМетодКонфигурации", ПараметрыЗадания, , НаименованиеЗадания);
	
	Возврат ФоновоеЗадание.УникальныйИдентификатор;
	
КонецФункции

// Исправляет отрицательные остатки по РН Товары организаций к передаче.
// Вызывается из Обработки.ЖурналДокументовИнтеркампани.РабочееМестоПередачиТоваров21.
//
// ПараметрыВызова - Структура:
//	 * НачалоПериода - Период - Дата начала выборки движений к исправлению.
//	 * КонецПериода - Период - Дата окончания выборки движений к исправлению.
//	 * Организации - Массив - Перечень организаций по которым необходимо исправить остатки.
//
Процедура ИсправитьОстаткиПоТоварамКПередаче(ПараметрыВызова) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ИсходноеПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций;
	ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Истина;
	
	КонецПериода = ПараметрыВызова.КонецПериода;
	Организации = ПараметрыВызова.Организации;
	СтатусыПроведенияДокументов = Новый Соответствие;
	КэшДокументов = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаКонецПериода", Новый Граница(КонецПериода, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(КонецПериода));
	Запрос.УстановитьПараметр("МассивОрганизаций", Организации);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", Не ЗначениеЗаполнено(Организации));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОстаткиНаКонецПериода.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОстаткиНаКонецПериода.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиНаКонецПериода.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ОстаткиНаКонецПериода.НомерГТД КАК НомерГТД,
	|	-ОстаткиНаКонецПериода.КоличествоОстаток КАК Количество,
	|	ИСТИНА КАК ПоТоварамКОформлению,
	|	ЛОЖЬ КАК ЭтоВозврат
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|			&НаКонецПериода,
	|			ОрганизацияВладелец В (&МассивОрганизаций)
	|				ИЛИ &ПоВсемОрганизациям) КАК ОстаткиНаКонецПериода
	|ГДЕ
	|	ОстаткиНаКонецПериода.КоличествоОстаток < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиНаКонецПериода.ОрганизацияВладелец КАК ОрганизацияВладелец,
	|	ОстаткиНаКонецПериода.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиНаКонецПериода.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|	ОстаткиНаКонецПериода.НомерГТД КАК НомерГТД,
	|	-ОстаткиНаКонецПериода.ВозвращеноОстаток КАК Количество,
	|	ИСТИНА КАК ПоТоварамКОформлению,
	|	ИСТИНА КАК ЭтоВозврат
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|			&НаКонецПериода,
	|			ОрганизацияВладелец В (&МассивОрганизаций)
	|				ИЛИ &ПоВсемОрганизациям) КАК ОстаткиНаКонецПериода
	|ГДЕ
	|	ОстаткиНаКонецПериода.ВозвращеноОстаток < 0
	|";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		КоличествоОтрицательное = Выборка.Количество;
		КоличествоВКорректировках = 0;
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.Период КАК Период,
		|	Товары.Регистратор КАК Ссылка,
		|	СУММА(Товары.Количество) КАК Количество,
		|	Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров КАК ЭтоКорректировкаРегистров,
		|	Товары.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями КАК ЭтоПередачаТоваровМеждуОрганизациями,
		|	ЛОЖЬ КАК ЭтоВозвратТоваровМеждуОрганизациями,
		|	ВЫБОР
		|		КОГДА Товары.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
		|			ТОГДА ВЫРАЗИТЬ(Товары.Регистратор КАК Документ.ПередачаТоваровМеждуОрганизациями).УказыватьНомераГТД
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК УказыватьНомераГТД
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче КАК Товары
		|ГДЕ
		|	Товары.ОрганизацияВладелец = &ОрганизацияВладелец
		|	И Товары.АналитикаУчетаНоменклатуры = &АналитикаУчетаНоменклатуры
		|	И Товары.ВидЗапасовПродавца = &ВидЗапасовПродавца
		|	И Товары.НомерГТД = &НомерГТД
		|	И (Товары.Регистратор ССЫЛКА Документ.ПередачаТоваровМеждуОрганизациями
		|			ИЛИ Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров)
		|	И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Товары.Период <= &КонецПериода
		|	И Товары.Активность
		|	И НЕ &ЭтоВозврат
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Регистратор,
		|	Товары.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Товары.Период,
		|	Товары.Регистратор,
		|	СУММА(Товары.Возвращено),
		|	Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров,
		|	ЛОЖЬ КАК ЭтоПередачаТоваровМеждуОрганизациями,
		|	Товары.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями КАК ЭтоВозвратТоваровМеждуОрганизациями,
		|	ЛОЖЬ
		|ИЗ
		|	РегистрНакопления.ТоварыОрганизацийКПередаче КАК Товары
		|ГДЕ
		|	Товары.ОрганизацияВладелец = &ОрганизацияВладелец
		|	И Товары.АналитикаУчетаНоменклатуры = &АналитикаУчетаНоменклатуры
		|	И Товары.ВидЗапасовПродавца = &ВидЗапасовПродавца
		|	И Товары.НомерГТД = &НомерГТД
		|	И (Товары.Регистратор ССЫЛКА Документ.ВозвратТоваровМеждуОрганизациями
		|			ИЛИ Товары.Регистратор ССЫЛКА Документ.КорректировкаРегистров)
		|	И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И Товары.Период <= &КонецПериода
		|	И Товары.Активность
		|	И &ЭтоВозврат
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Регистратор,
		|	Товары.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Товары.Период УБЫВ");

	
		Запрос.УстановитьПараметр("ОрганизацияВладелец", Выборка.ОрганизацияВладелец);
		Запрос.УстановитьПараметр("АналитикаУчетаНоменклатуры", Выборка.АналитикаУчетаНоменклатуры);
		Запрос.УстановитьПараметр("ВидЗапасовПродавца", Выборка.ВидЗапасовПродавца);
		Запрос.УстановитьПараметр("НомерГТД", Выборка.НомерГТД);
		Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
		Запрос.УстановитьПараметр("ЭтоВозврат", Выборка.ЭтоВозврат);
	
		ДокументыККорректировке = Запрос.Выполнить().Выбрать();
		Пока ДокументыККорректировке.Следующий() И КоличествоОтрицательное > 0 Цикл
			
			Если ДокументыККорректировке.ЭтоКорректировкаРегистров Тогда
				КоличествоВКорректировках = КоличествоВКорректировках + ДокументыККорректировке.Количество;
				Продолжить;
			КонецЕсли;
			
			ДанныеДокумента = КэшДокументов.Получить(ДокументыККорректировке.Ссылка);
			Если ДанныеДокумента = Неопределено Тогда
				ДанныеДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументыККорректировке.Ссылка, "Товары, ВидыЗапасов");
				ДанныеДокумента.Товары = ДанныеДокумента.Товары.Выгрузить();
				ДанныеДокумента.ВидыЗапасов = ДанныеДокумента.ВидыЗапасов.Выгрузить();
			КонецЕсли;
			Если ДокументыККорректировке.УказыватьНомераГТД Тогда
				ПараметрыПоиска = Новый Структура("АналитикаУчетаНоменклатуры, НомерГТД, ПоТоварамКОформлению");
			Иначе
				ПараметрыПоиска = Новый Структура("АналитикаУчетаНоменклатуры, ПоТоварамКОформлению");
			КонецЕсли;
		
			ЗаполнитьЗначенияСвойств(ПараметрыПоиска, Выборка);
		
			СписатьПоДокументу = Мин(КоличествоОтрицательное, ДокументыККорректировке.Количество); // в документе исправляем только количество по этому виду запасов.
			КоличествоОтрицательное = КоличествоОтрицательное - СписатьПоДокументу;
			
			КСписанию = СписатьПоДокументу;
			ТабличнаяЧасть = ДанныеДокумента.Товары;
			СтрокиТоваровККорректировке = ТабличнаяЧасть.НайтиСтроки(ПараметрыПоиска);
			Для Каждого СтрокаТоваров Из СтрокиТоваровККорректировке Цикл
				
				Если КСписанию = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если СтрокаТоваров.Количество < КСписанию Тогда
					КСписанию = КСписанию - СтрокаТоваров.Количество;
				ИначеЕсли СтрокаТоваров.Количество > КСписанию Тогда
					СтрокаПоТоварамКОформлению = ТабличнаяЧасть.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаПоТоварамКОформлению, СтрокаТоваров);
				
					НовоеКоличество = СтрокаТоваров.Количество - КСписанию;
					
					СтрокаПоТоварамКОформлению.Количество = НовоеКоличество;
					СтрокаПоТоварамКОформлению.КоличествоУпаковок = Окр(СтрокаТоваров.КоличествоУпаковок * НовоеКоличество / СтрокаТоваров.Количество, 3, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.Цена = Окр(СтрокаТоваров.Цена * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.Сумма = Окр(СтрокаТоваров.Сумма * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаНДС = Окр(СтрокаТоваров.СуммаНДС * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаСНДС = Окр(СтрокаТоваров.СуммаСНДС * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаВзаиморасчетов = Окр(СтрокаТоваров.СуммаВзаиморасчетов * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаПоТоварамКОформлению.СуммаНДСВзаиморасчетов = Окр(СтрокаТоваров.СуммаНДСВзаиморасчетов * НовоеКоличество / СтрокаТоваров.Количество, 2, РежимОкругления.Окр15как20);
					
					СтрокаТоваров.Количество = КСписанию;
					СтрокаТоваров.КоличествоУпаковок = СтрокаТоваров.КоличествоУпаковок - СтрокаПоТоварамКОформлению.КоличествоУпаковок;
					СтрокаТоваров.Цена = СтрокаТоваров.Цена - СтрокаПоТоварамКОформлению.Цена;
					СтрокаТоваров.Сумма = СтрокаТоваров.Сумма - СтрокаПоТоварамКОформлению.Сумма;
					СтрокаТоваров.СуммаНДС = СтрокаТоваров.СуммаНДС - СтрокаПоТоварамКОформлению.СуммаНДС;
					СтрокаТоваров.СуммаСНДС = СтрокаТоваров.СуммаСНДС - СтрокаПоТоварамКОформлению.СуммаСНДС;
					СтрокаТоваров.СуммаВзаиморасчетов = СтрокаТоваров.СуммаВзаиморасчетов - СтрокаПоТоварамКОформлению.СуммаВзаиморасчетов;
					СтрокаТоваров.СуммаНДСВзаиморасчетов = СтрокаТоваров.СуммаНДСВзаиморасчетов - СтрокаПоТоварамКОформлению.СуммаНДСВзаиморасчетов;
					
					КСписанию = 0;
				
				Иначе // СтрокаТоваров.Количество = КСписанию - просто снимаем признак ПоТоварамКОформлению
					КСписанию = 0;
				КонецЕсли;
				СтрокаТоваров.ПоТоварамКОформлению = Ложь;
				Если ДокументыККорректировке.ЭтоПередачаТоваровМеждуОрганизациями Тогда
					СтрокаТоваров.ВидЗапасов = Неопределено;
				КонецЕсли;
				
			КонецЦикла;
			
			// Распределяем строки видов запасов, чтобы заполнение видов запасов отработало только по строкам не "ПоОформлению".
			КСписанию = СписатьПоДокументу;
			ТабличнаяЧасть = ДанныеДокумента.ВидыЗапасов;
			Если ДокументыККорректировке.УказыватьНомераГТД Тогда
				ПараметрыПоиска = Новый Структура("АналитикаУчетаНоменклатуры, НомерГТД, ПоТоварамКОформлению");
			Иначе
				ПараметрыПоиска = Новый Структура("АналитикаУчетаНоменклатуры, ПоТоварамКОформлению");
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(ПараметрыПоиска, Выборка);
			СтрокиВидыЗапасовККорректировке = ТабличнаяЧасть.НайтиСтроки(ПараметрыПоиска);
			Для Каждого СтрокаВидыЗапасов Из СтрокиВидыЗапасовККорректировке Цикл
				
				Если КСписанию = 0 Тогда
					Прервать;
				КонецЕсли;
				
				Если СтрокаВидыЗапасов.Количество < КСписанию Тогда
					КСписанию = КСписанию - СтрокаВидыЗапасов.Количество;
				ИначеЕсли СтрокаВидыЗапасов.Количество > КСписанию Тогда
					СтрокаВидыЗапасовКОформлению = ТабличнаяЧасть.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаВидыЗапасовКОформлению, СтрокаВидыЗапасов);
				
					НовоеКоличество = СтрокаВидыЗапасов.Количество - КСписанию;
					
					СтрокаВидыЗапасовКОформлению.Количество = НовоеКоличество;
					СтрокаВидыЗапасовКОформлению.КоличествоУпаковок = Окр(СтрокаВидыЗапасов.КоличествоУпаковок * НовоеКоличество / СтрокаВидыЗапасов.Количество, 3, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаНДС = Окр(СтрокаВидыЗапасов.СуммаНДС * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаСНДС = Окр(СтрокаВидыЗапасов.СуммаСНДС * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаВзаиморасчетов = Окр(СтрокаВидыЗапасов.СуммаВзаиморасчетов * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					СтрокаВидыЗапасовКОформлению.СуммаНДСВзаиморасчетов = Окр(СтрокаВидыЗапасов.СуммаНДСВзаиморасчетов * НовоеКоличество / СтрокаВидыЗапасов.Количество, 2, РежимОкругления.Окр15как20);
					
					СтрокаВидыЗапасов.Количество = КСписанию;
					СтрокаВидыЗапасов.КоличествоУпаковок = СтрокаВидыЗапасов.КоличествоУпаковок - СтрокаВидыЗапасовКОформлению.КоличествоУпаковок;
					СтрокаВидыЗапасов.СуммаНДС = СтрокаВидыЗапасов.СуммаНДС - СтрокаВидыЗапасовКОформлению.СуммаНДС;
					СтрокаВидыЗапасов.СуммаСНДС = СтрокаВидыЗапасов.СуммаСНДС - СтрокаВидыЗапасовКОформлению.СуммаСНДС;
					СтрокаВидыЗапасов.СуммаВзаиморасчетов = СтрокаВидыЗапасов.СуммаВзаиморасчетов - СтрокаВидыЗапасовКОформлению.СуммаВзаиморасчетов;
					СтрокаВидыЗапасов.СуммаНДСВзаиморасчетов = СтрокаВидыЗапасов.СуммаНДСВзаиморасчетов - СтрокаВидыЗапасовКОформлению.СуммаНДСВзаиморасчетов;
					
					КСписанию = 0;
				
				Иначе // СтрокаТоваров.Количество = КСписанию - просто снимаем признак ПоТоварамКОформлению
					КСписанию = 0;
				КонецЕсли;
				ТабличнаяЧасть.Удалить(СтрокаВидыЗапасов);
				
			КонецЦикла;
			
			КэшДокументов.Вставить(ДокументыККорректировке.Ссылка, ДанныеДокумента); // документы в ИБ пишем только один раз, в самом конце.
		КонецЦикла;
	
		Если КоличествоОтрицательное <> 0 Тогда
			Если КоличествоОтрицательное > КоличествоВКорректировках Тогда
				ТекстСообщения = НСтр("ru = 'Ошибка в алгоритме исправления остатков по товарам к передаче.
				|Обратитесь к разработчикам программы.'");
				ВызватьИсключение ТекстСообщения;
			Иначе
				ТекстСообщения = НСтр("ru = 'Ошибка исправления остатков по товарам к передаче: 
				|есть избыточные расходные движения в корректировках регистров по измерениям 
				|%Организация% - %АналитикаУчетаНоменклатуры% - %ВидЗапасов% - %НомерГТД%,
				|лишний расход %КоличествоОтрицательное%. Необходимо скорректировать движения документов и провести вручную.'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Строка(Выборка.ОрганизацияВладелец));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%АналитикаУчетаНоменклатуры%", Строка(Выборка.АналитикаУчетаНоменклатуры));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидЗапасов%", Строка(Выборка.ВидЗапасовПродавца));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерГТД%", Строка(Выборка.НомерГТД));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КоличествоОтрицательное%", Строка(КоличествоОтрицательное));
				ЗаписьЖурналаРегистрации(
					НСтр("ru = 'ИсправлениеОтрицательныхОстатков.Ошибка исправления остатков'",
						ОбщегоНазначения.КодОсновногоЯзыка()),
					УровеньЖурналаРегистрации.Ошибка,
					,
					,
					ТекстСообщения);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			КонецЕсли;
		КонецЕсли;
				
	КонецЦикла;
	
	МассивДокументов = Новый Массив;
	Для Каждого ЭлементКэша Из КэшДокументов Цикл
		МассивДокументов.Добавить(ЭлементКэша.Ключ);
	КонецЦикла;
	
	МаксимальныйИндекс = МассивДокументов.ВГраница();
	Для i = 0 По МаксимальныйИндекс Цикл
		
		ТекДокумент = МассивДокументов[МаксимальныйИндекс - i];
		
		ДокументОбъект = ТекДокумент.ПолучитьОбъект();
		ДокументОбъект.Товары.Загрузить(КэшДокументов[ТекДокумент].Товары);
		ДокументОбъект.ВидыЗапасов.Загрузить(КэшДокументов[ТекДокумент].ВидыЗапасов);
		Попытка
			ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			РезультатПроведения = Нстр("ru = 'перепроведен успешно.'");
		Исключение
			ИнформацияОбОшибке = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			РезультатПроведения = Нстр("ru = 'Ошибка при проведении. Необходимо отменить проведение и провести вручную.'");
			
			ЗаписьЖурналаРегистрации(
				НСтр("ru = 'ИсправлениеОтрицательныхОстатков.Ошибка перепроведения документа'",
					ОбщегоНазначения.КодОсновногоЯзыка()),
				УровеньЖурналаРегистрации.Ошибка,
				ДокументОбъект.Метаданные(),
				,
				ИнформацияОбОшибке);
		КонецПопытки;
		СтатусыПроведенияДокументов.Вставить(ТекДокумент, РезультатПроведения);
	КонецЦикла;
	
	Если ПараметрыВызова.Свойство("АдресХранилища") Тогда
		ПоместитьВоВременноеХранилище(СтатусыПроведенияДокументов, ПараметрыВызова.АдресХранилища);
	КонецЕсли;
	
	ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = ИсходноеПроводитьБезКонтроляОстатковТоваровОрганизаций;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Выполняет установку параметров сеанса. Вызывается из модуля сеанса.
//
// Параметры:
//   ИмяПараметра           - строка с именем параметра сеанса.
//   УстановленныеПараметры - массив всех установленных параметров сеанса.
//
Процедура УстановитьПараметрыСеанса(ИмяПараметра, УстановленныеПараметры) Экспорт
	
	ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Ложь;
	
	Если ИмяПараметра = "ПроводитьБезКонтроляОстатковТоваровОрганизаций" Тогда
		ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций = Ложь;
		УстановленныеПараметры.Добавить(ИмяПараметра);
	КонецЕсли;

КонецПроцедуры

Функция ИмяСобытияВыключенКонтрольОстатков() Экспорт
	КодОсновногоЯзыка = ОбщегоНазначения.КодОсновногоЯзыка();
	Возврат НСтр("ru = 'Контроль остатков товаров организаций'", КодОсновногоЯзыка);
КонецФункции

// Процедура заполняет номера ГТД в строках табличной части документа.
//
Процедура ЗаполнитьНомераГТДвТабличнойЧасти(Товары, НомерГТД, МассивСтрок, ЗаполненыНомераГТД) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеСправочника.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК ДанныеСправочника
	|ГДЕ
	|	ДанныеСправочника.Ссылка В (&МассивНоменклатуры)
	|	И ДанныеСправочника.ТипНоменклатуры В
	|		(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	И ДанныеСправочника.ВестиУчетПоГТД
	|");
	Запрос.УстановитьПараметр("МассивНоменклатуры", Товары.Выгрузить(, "Номенклатура").ВыгрузитьКолонку("Номенклатура"));
	МассивВедетсяУчетПоГТД = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	ЗаполненыНомераГТД = Ложь;
	Для Каждого ИдентификаторСтроки Из МассивСтрок Цикл
		СтрокаТаблицы = Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если МассивВедетсяУчетПоГТД.Найти(СтрокаТаблицы.Номенклатура) <> Неопределено Тогда
			СтрокаТаблицы.НомерГТД = НомерГТД;
			ЗаполненыНомераГТД = Истина;
			
			ДанныеГТД = Новый Структура("НомерГТД, СтранаПроисхождения", НомерГТД, Неопределено);
			НоменклатураВызовСервера.ЗаполнитьСтрануПроисхожденияДляНомераГТД(ДанныеГТД);
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ДанныеГТД, "СтранаПроисхождения");
			
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Функция ИмяДопСвойстваДляПерезаполненияВидовЗапасов() Экспорт
	
	Возврат "ПерезаполнитьВидыЗапасов";
	
КонецФункции

Функция ИмяРеквизитаФормыВидыЗапасовБылиИзменены()
	
	Возврат "ВидыЗапасовБылиИзменены";
	
КонецФункции

//++ НЕ УТ

// Процедура формирует таблицу остатков материалов в подразделении.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер, в который помещается результирующая таблица.
//	СтруктураПараметров - Структура - Параметры построения: Организация, Подразделение, ДокументВозврата, Номенклатура, Характеристика.
//
Процедура ТаблицаОстатковМатериаловВПодразделении(МенеджерВременныхТаблиц, СтруктураПараметров) Экспорт
	
	Перем Подразделение, Назначение, Номенклатура, Характеристика;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МатериалыИРаботыВПроизводстве.Подразделение КАК Подразделение,
	|	МатериалыИРаботыВПроизводстве.Номенклатура КАК Номенклатура,
	|	МатериалыИРаботыВПроизводстве.Характеристика КАК Характеристика,
	|	МатериалыИРаботыВПроизводстве.Серия КАК Серия,
	|	МатериалыИРаботыВПроизводстве.Назначение КАК Назначение,
	|	МатериалыИРаботыВПроизводстве.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ втОстатки
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве.Остатки(
	|			,
	|			Организация = &Организация
	|				И (Подразделение В (&Подразделение) ИЛИ &ПоВсемПодразделениям)
	|				И (Назначение = &Назначение ИЛИ &ПоВсемНазначениям)
	|				И (Номенклатура = &Номенклатура
	|						И Характеристика = &Характеристика ИЛИ &ПоВсейНоменклатуре)) КАК МатериалыИРаботыВПроизводстве
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Движения.Подразделение,
	|	Движения.Номенклатура,
	|	Движения.Характеристика,
	|	Движения.Серия,
	|	Движения.Назначение,
	|	Движения.Количество
	|ИЗ
	|	РегистрНакопления.МатериалыИРаботыВПроизводстве КАК Движения
	|ГДЕ
	|	Движения.Регистратор = &ДокументИсключение
	|				И (Движения.Подразделение В (&Подразделение) ИЛИ &ПоВсемПодразделениям)
	|				И (Движения.Назначение = &Назначение ИЛИ &ПоВсемНазначениям)
	|				И (Движения.Номенклатура = &Номенклатура
	|						И Движения.Характеристика = &Характеристика ИЛИ &ПоВсейНоменклатуре) 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Подразделение КАК Подразделение,
	|	ТаблицаОстатков.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатков.Характеристика КАК Характеристика,
	|	ТаблицаОстатков.Серия КАК Серия,
	|	СУММА(ТаблицаОстатков.Количество) КАК Количество,
	|	ТаблицаОстатков.Назначение КАК Назначение
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	втОстатки КАК ТаблицаОстатков
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаОстатков.Подразделение,
	|	ТаблицаОстатков.Номенклатура,
	|	ТаблицаОстатков.Характеристика,
	|	ТаблицаОстатков.Серия,
	|	ТаблицаОстатков.Назначение";
	
	СтруктураПараметров.Свойство("Номенклатура",      Номенклатура);
	СтруктураПараметров.Свойство("Характеристика",    Характеристика);
	СтруктураПараметров.Свойство("Подразделение",     Подразделение);
	СтруктураПараметров.Свойство("Назначение",        Назначение);
	
	Запрос.УстановитьПараметр("Организация",          СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("ДокументИсключение",   СтруктураПараметров.ДокументВозврата);
	
	Запрос.УстановитьПараметр("Назначение",           Назначение);
	Запрос.УстановитьПараметр("ПоВсемНазначениям",    Не ЗначениеЗаполнено(Назначение));
	
	Запрос.УстановитьПараметр("Номенклатура",         Номенклатура);
	Запрос.УстановитьПараметр("ПоВсейНоменклатуре",   Не ЗначениеЗаполнено(Номенклатура));
	
	Запрос.УстановитьПараметр("Характеристика",       Характеристика);
	
	Если ТипЗнч(Подразделение) = Тип("СправочникСсылка.СтруктураПредприятия") И ЗначениеЗаполнено(Подразделение) Тогда
		Запрос.УстановитьПараметр("Подразделение",        ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Подразделение));
		Запрос.УстановитьПараметр("ПоВсемПодразделениям", Ложь);
	ИначеЕсли ТипЗнч(Подразделение) = Тип("Массив") И Подразделение.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("Подразделение",        Подразделение);
		Запрос.УстановитьПараметр("ПоВсемПодразделениям", Ложь);
	Иначе
		Запрос.УстановитьПараметр("Подразделение",        Неопределено);
		Запрос.УстановитьПараметр("ПоВсемПодразделениям", Истина);
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

//-- НЕ УТ

// Метод подготавливает данные для отчета "Остатки товаров организаций".
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, для которого вызывается формирование отчета.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Содержит временную таблицу ТаблицаТоваров, 
//														подготовленные данные помещаются в менеджер.
//	ПараметрыЗаполненияВидовЗапасов - Структура - Параметры заполнения, см. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//
Процедура ПодготовитьДанныеДляОтчета(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов) Экспорт
	
	СформироватьВТДоступныеВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, "");
	СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц, Ложь);
	СохранитьИсходныеДвиженияТоваровИРезервов(ДокументОбъект.Ссылка, МенеджерВременныхТаблиц);
	
КонецПроцедуры

// Возвращает дату хранения актуальных остатков
// 
// Возвращаемое значение:
// 	Дата - дата хранения актуальных остатков
//
Функция ДатаАктуальныхОстатков() Экспорт
	
	Возврат '30000101';
	
КонецФункции

#КонецОбласти

#Область КонтрольПроведенияПоТоварамОрганизаций

// Процедура выполняет контроль результатов проведения.
// Вызывается из общего модуля ПроведениеСерверУТ.ВыполнитьКонтрольРезультатовПроведения().
//
// Параметры:
//	Объект - ДокументОбъект - документ для контроля.
//	ПакетЗапросов - Запрос - Запрос контроля корректности проведения.
//	ТекстЗапроса - Текст - Текст запроса контроля корректности проведения.
//	МассивКонтролей - Массив - Массив имен контрольных таблиц.
//	ДанныеТаблиц - Структура - Инициализируется в ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения().
//
Процедура ДобавитьКонтрольПоТоварамОрганизаций(Объект, ПакетЗапросов, ТекстЗапроса , МассивКонтролей, ДанныеТаблиц) Экспорт
	
	Если Объект.ДополнительныеСвойства.Свойство("ОтказПриЗаполненииВидовЗапасов") Тогда
		Возврат;
	КонецЕсли;
	
	ТекстыЗапросовКонтроля = Новый Массив;
	
	Если ПроведениеСерверУТ.ЕстьИзмененияВТаблице(ДанныеТаблиц, "ДвиженияТоварыОрганизацийИзменение") Тогда
		МинимальныйПериод = ДанныеТаблиц.ДвиженияТоварыОрганизацийИзменение.МинимальныйПериод;
		ЕстьТаблицаОстатков = Истина;
	Иначе
		МинимальныйПериод = ДатаАктуальныхОстатков();
		ЕстьТаблицаОстатков = Ложь;
	КонецЕсли;
		
	Если ПроведениеСерверУТ.ЕстьИзмененияВТаблице(ДанныеТаблиц, "ДвиженияРезервыТоваровОрганизацийИзменение") Тогда
		ЕстьТаблицаРезервов = Истина;
	Иначе
		ЕстьТаблицаРезервов = Ложь;
	КонецЕсли;
	
	ТекстЗапросаВТОтборыКонтроля = "";
	
	Если ЕстьТаблицаОстатков
		И ЕстьТаблицаРезервов Тогда
		
		ТекстЗапросаВТОтборыКонтроля =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВложенныйЗапрос.Организация КАК Организация,
		|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
		|	ВложенныйЗапрос.НомерГТД КАК НомерГТД
		|ПОМЕСТИТЬ ВТОтборыКонтроляКорректностиДвижений
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТаблицаИзменений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|		ТаблицаИзменений.Организация КАК Организация,
		|		ТаблицаИзменений.ВидЗапасов КАК ВидЗапасов,
		|		ТаблицаИзменений.НомерГТД КАК НомерГТД
		|	ИЗ
		|		ДвиженияТоварыОрганизацийИзменение КАК ТаблицаИзменений
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|			ПО ТаблицаИзменений.ВидЗапасов = ВидыЗапасов.Ссылка
		|	ГДЕ
		|		НЕ ВидыЗапасов.ТипЗапасов В (&НеконтролируемыеТипыЗапасов)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТаблицаИзменений.АналитикаУчетаНоменклатуры,
		|		ТаблицаИзменений.Организация,
		|		ТаблицаИзменений.ВидЗапасов,
		|		ТаблицаИзменений.НомерГТД
		|	ИЗ
		|		ДвиженияРезервыТоваровОрганизацийИзменение КАК ТаблицаИзменений
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|			ПО ТаблицаИзменений.ВидЗапасов = ВидыЗапасов.Ссылка
		|	ГДЕ
		|		НЕ ВидыЗапасов.ТипЗапасов В (&НеконтролируемыеТипыЗапасов)) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
		|	ВложенныйЗапрос.ВидЗапасов,
		|	ВложенныйЗапрос.Организация,
		|	ВложенныйЗапрос.НомерГТД
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВложенныйЗапрос.ВидЗапасов,
		|	ВложенныйЗапрос.НомерГТД,
		|	ВложенныйЗапрос.Организация,
		|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры";
		
	ИначеЕсли ЕстьТаблицаОстатков Тогда
		
		ТекстЗапросаВТОтборыКонтроля =
		"ВЫБРАТЬ
		|	ТаблицаИзменений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаИзменений.Организация КАК Организация,
		|	ТаблицаИзменений.ВидЗапасов КАК ВидЗапасов,
		|	ТаблицаИзменений.НомерГТД КАК НомерГТД
		|ПОМЕСТИТЬ ВТОтборыКонтроляКорректностиДвижений
		|ИЗ
		|	ДвиженияТоварыОрганизацийИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ТаблицаИзменений.ВидЗапасов = ВидыЗапасов.Ссылка
		|ГДЕ
		|	НЕ ВидыЗапасов.ТипЗапасов В (&НеконтролируемыеТипыЗапасов)";
		
	ИначеЕсли ЕстьТаблицаРезервов Тогда
		
		ТекстЗапросаВТОтборыКонтроля =
		"ВЫБРАТЬ
		|	ТаблицаИзменений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ТаблицаИзменений.Организация КАК Организация,
		|	ТаблицаИзменений.ВидЗапасов КАК ВидЗапасов,
		|	ТаблицаИзменений.НомерГТД КАК НомерГТД
		|ПОМЕСТИТЬ ВТОтборыКонтроляКорректностиДвижений
		|ИЗ
		|	ДвиженияРезервыТоваровОрганизацийИзменение КАК ТаблицаИзменений
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
		|		ПО ТаблицаИзменений.ВидЗапасов = ВидыЗапасов.Ссылка
		|ГДЕ
		|	НЕ ВидыЗапасов.ТипЗапасов В (&НеконтролируемыеТипыЗапасов)";
		
	Иначе
		
		Возврат;
		
	КонецЕсли;
	
	ТекстыЗапросовКонтроля.Добавить(ТекстЗапросаВТОтборыКонтроля);
	
	ШаблонЗапросаОстаткаМесяца =
	"ВЫБРАТЬ
	|	&ПериодДата КАК Период,
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийОстатки.Организация КАК Организация,
	|	ТоварыОрганизацийОстатки.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизацийОстатки.НомерГТД КАК НомерГТД,
	|	0 КАК РезервОстаток,
	|	ТоварыОрганизацийОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ТоварыОрганизацийОстатки.КОформлениюСписанияОстаток КАК КОформлениюСписанияОстаток
	|ПОМЕСТИТЬ ВТОстаткиТоваровОрганизацийПоМесяцам
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			&ПериодГраница,
	|			(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД) В
	|				(ВЫБРАТЬ
	|					Отбор.АналитикаУчетаНоменклатуры,
	|					Отбор.Организация,
	|					Отбор.ВидЗапасов,
	|					Отбор.НомерГТД
	|				ИЗ
	|					ВТОтборыКонтроляКорректностиДвижений КАК Отбор)) КАК ТоварыОрганизацийОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ПериодДата,
	|	РезервыТоваровОрганизацийОстатки.АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизацийОстатки.Организация,
	|	РезервыТоваровОрганизацийОстатки.ВидЗапасов,
	|	РезервыТоваровОрганизацийОстатки.НомерГТД,
	|	РезервыТоваровОрганизацийОстатки.КоличествоОстаток,
	|	0,
	|	0
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
	|			&ПериодГраница,
	|			(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД) В
	|				(ВЫБРАТЬ
	|					Отбор.АналитикаУчетаНоменклатуры,
	|					Отбор.Организация,
	|					Отбор.ВидЗапасов,
	|					Отбор.НомерГТД
	|				ИЗ
	|					ВТОтборыКонтроляКорректностиДвижений КАК Отбор)) КАК РезервыТоваровОрганизацийОстатки";
	
	МинимальныйПериод = КонецМесяца(Мин(МинимальныйПериод, ДатаПервогоРезерва(МинимальныйПериод)));
	КонецТекущегоМесяца = КонецМесяца(ТекущаяДатаСеанса());
	
	// Больше трех лет не контролируем, чтобы не превысить количество таблиц в запросе.
	ТриГодаНазад = КонецМесяца(ДобавитьМесяц(КонецТекущегоМесяца, -36)); 
	Если МинимальныйПериод < ТриГодаНазад Тогда
		МинимальныйПериод = ТриГодаНазад;
	ИначеЕсли МинимальныйПериод > КонецТекущегоМесяца Тогда
		МинимальныйПериод = КонецТекущегоМесяца;
	КонецЕсли;
	
	ОбрабатываемыйМесяц = КонецМесяца(ДобавитьМесяц(ДатаПоследнегоДвижения(), -1));
	
	ТекстыЗапросовОстатковПоМесяцам = Новый Массив;
	
	Счетчик = 0;
		
	Пока ОбрабатываемыйМесяц >= МинимальныйПериод Цикл
		
		ТекстЗапросаОстаткаМесяца = СтрЗаменить(ШаблонЗапросаОстаткаМесяца, "&ПериодДата", "&ПериодДата" + Строка(Счетчик));
		ТекстЗапросаОстаткаМесяца = СтрЗаменить(ТекстЗапросаОстаткаМесяца, "&ПериодГраница", "&ПериодГраница" + Строка(Счетчик));
		Если Счетчик > 0 Тогда
			ТекстЗапросаОстаткаМесяца = СтрЗаменить(ТекстЗапросаОстаткаМесяца, "ПОМЕСТИТЬ ВТОстаткиТоваровОрганизацийПоМесяцам", "");
		КонецЕсли;
		ТекстыЗапросовОстатковПоМесяцам.Добавить(ТекстЗапросаОстаткаМесяца);
		
		ПакетЗапросов.УстановитьПараметр("ПериодДата" + Строка(Счетчик), ОбрабатываемыйМесяц);
		ПакетЗапросов.УстановитьПараметр("ПериодГраница" + Строка(Счетчик), Новый Граница(ОбрабатываемыйМесяц, ВидГраницы.Включая));
		
		Счетчик = Счетчик + 1;
		ОбрабатываемыйМесяц = КонецМесяца(ДобавитьМесяц(ОбрабатываемыйМесяц, -1));
		
	КонецЦикла;	
	
	ТекстЗапросаОстаткаМесяца = СтрЗаменить(ШаблонЗапросаОстаткаМесяца, "&ПериодДата", "&ПериодДата" + Строка(Счетчик));
	ТекстЗапросаОстаткаМесяца = СтрЗаменить(ТекстЗапросаОстаткаМесяца, "&ПериодГраница", "");
	Если Счетчик > 0 Тогда
		ТекстЗапросаОстаткаМесяца = СтрЗаменить(ТекстЗапросаОстаткаМесяца, "ПОМЕСТИТЬ ВТОстаткиТоваровОрганизацийПоМесяцам", "");
	КонецЕсли;
	ТекстыЗапросовОстатковПоМесяцам.Добавить(ТекстЗапросаОстаткаМесяца);
	
	ТекстыЗапросовКонтроля.Добавить(СтрСоединить(ТекстыЗапросовОстатковПоМесяцам, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()));
	
	ТекстыЗапросовКонтроля.Добавить(
	"ВЫБРАТЬ
	|	ОстаткиПоМесяцам.Период КАК Период,
	|	ОстаткиПоМесяцам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.МестоХранения КАК МестоХранения,
	|	ОстаткиПоМесяцам.Организация КАК Организация,
	|	ОстаткиПоМесяцам.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиПоМесяцам.НомерГТД КАК НомерГТД,
	|	СУММА(ОстаткиПоМесяцам.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(ОстаткиПоМесяцам.РезервОстаток) КАК РезервОстаток,
	|	СУММА(ОстаткиПоМесяцам.КОформлениюСписанияОстаток) КАК КОформлениюСписанияОстаток
	|ИЗ
	|	ВТОстаткиТоваровОрганизацийПоМесяцам КАК ОстаткиПоМесяцам
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ОстаткиПоМесяцам.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПоМесяцам.АналитикаУчетаНоменклатуры,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.МестоХранения,
	|	ОстаткиПоМесяцам.Организация,
	|	ОстаткиПоМесяцам.ВидЗапасов,
	|	ОстаткиПоМесяцам.НомерГТД,
	|	ОстаткиПоМесяцам.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|ИТОГИ ПО
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД");
	
	ПакетЗапросов.УстановитьПараметр("ПериодДата" + Строка(Счетчик), ДатаАктуальныхОстатков());
	ПакетЗапросов.УстановитьПараметр("НеконтролируемыеТипыЗапасов", НеконтролируемыеТипыЗапасов());
	
	ТекстЗапросаКонтроля = СтрСоединить(ТекстыЗапросовКонтроля, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
	МассивКонтролей.Добавить(ИмяКонтроляВТОтборыКонтроляКорректностиДвижений());
	МассивКонтролей.Добавить(ИмяКонтроляВТОстаткиТоваровОрганизацийПоМесяцам());
	МассивКонтролей.Добавить(ИмяКонтроляТоварыОрганизацийРезервыСводно());
	
	ТекстЗапроса = ТекстЗапроса + ТекстЗапросаКонтроля;
	
КонецПроцедуры

// Метод проверяет принадлежит ли переданное имя к списку контролей.
//
// Параметры:
//	ИмяКонтроля - Строка - Проверяемое имя.
//
// ВозвращаемоеЗначение:
//	Булево - Истина, если принадлежит и Ложь в противном случае.
//
Функция ЭтоИмяКонтроляПоТоварамОрганизацийИРезервам(ИмяКонтроля) Экспорт
	
	Возврат ИмяКонтроля = ИмяКонтроляВТОтборыКонтроляКорректностиДвижений()
		Или ИмяКонтроля = ИмяКонтроляТоварыОрганизацийРезервыСводно()
		Или ИмяКонтроля = ИмяКонтроляВТОстаткиТоваровОрганизацийПоМесяцам();
	
КонецФункции

// Метод выводит информационные сообщения пользователю об ошибках заполнения видов запасов.
//
// Параметры:
//	ИмяКонтроля - Строка - Имя контроля регистра.
//	Объект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	Отказ - Булево - Взводится в Истина, для прекращения проведения документа.
//	РезультатЗапроса - РезультатЗапроса - Результат запроса, содержащий информацию об ошибках.
//
Процедура СообщитьОбОшибкахПроведенияПоТоварамОрганизацийИРезервам(ИмяКонтроля, Объект, Отказ, РезультатЗапроса) Экспорт
	
	Если ИмяКонтроля <> ИмяКонтроляТоварыОрганизацийРезервыСводно() Тогда
		Возврат;
	КонецЕсли;
	
	КонтролироватьОтрицательныеОстатки = Не ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций 
		И Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить();
	
	ВыборкаОрганизация = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОрганизация.Следующий() Цикл
	
		ВыборкаАналитикаУчетаНоменклатуры = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаАналитикаУчетаНоменклатуры.Следующий() Цикл
			
			ВыборкаВидЗапасов = ВыборкаАналитикаУчетаНоменклатуры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаВидЗапасов.Следующий() Цикл
	
				ВыборкаНомерГТД = ВыборкаВидЗапасов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаНомерГТД.Следующий() Цикл
					
					ОтрицательныйОстаток = 0;
					ПокрывающийРезерв = 0;
					
					ТекущиеИтоги = ВыборкаНомерГТД.Выбрать();
					Пока ТекущиеИтоги.Следующий() Цикл
						
						Если Не Объект.ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов")
							Или Не Объект.ДополнительныеСвойства.ПерезаполнитьВидыЗапасов Тогда
							ОтрицательныйОстаток = Мин(ТекущиеИтоги.КоличествоОстаток, ОтрицательныйОстаток);
							ПокрывающийРезерв = Макс(ТекущиеИтоги.РезервОстаток, ПокрывающийРезерв);
						КонецЕсли;
						
						// Проверка на отрицательный остаток.
						Если КонтролироватьОтрицательныеОстатки
							И ТекущиеИтоги.КоличествоОстаток + ТекущиеИтоги.РезервОстаток < 0 Тогда
								
							ТекстСообщения = НСтр("ru = 'По организации %Организация% на %Месяц% обнаружен отрицательный остаток %Количество% %ЕдиницаИзмерения% товара %Товар% в месте хранения %МестоХранения%'");
							
							Если ТекущиеИтоги.Период = ДатаАктуальныхОстатков() Тогда
								ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Месяц%", НСтр("ru = 'дату актуальности остатков'"));
							КонецЕсли;
							
							ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОрганизацийИРезервам(
								ТекстСообщения, Объект.Ссылка, ТекущиеИтоги);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", ТекущиеИтоги.КоличествоОстаток + ТекущиеИтоги.РезервОстаток);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", ТекущиеИтоги.ЕдиницаИзмерения);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Товар%", ТекущиеИтоги.Номенклатура);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%МестоХранения%", ТекущиеИтоги.МестоХранения);
							
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
							
						КонецЕсли;
						
						Если КонтролироватьОтрицательныеОстатки 
							И ТекущиеИтоги.КОформлениюСписанияОстаток < 0 Тогда
								
							ТекстСообщения = НСтр("ru = 'По организации %Организация% на %Месяц% обнаружен отрицательный остаток к оформлению списания %Количество% %ЕдиницаИзмерения% товара %Товар% в месте хранения %МестоХранения%'");
							
							Если ТекущиеИтоги.Период = ДатаАктуальныхОстатков() Тогда
								ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Месяц%", НСтр("ru = 'дату актуальности остатков'"));
							КонецЕсли;
							
							ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОрганизацийИРезервам(
								ТекстСообщения, Объект.Ссылка, ТекущиеИтоги);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", ТекущиеИтоги.КОформлениюСписанияОстаток);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", ТекущиеИтоги.ЕдиницаИзмерения);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Товар%", ТекущиеИтоги.Номенклатура);
							ТекстСообщения = СтрЗаменить(ТекстСообщения, "%МестоХранения%", ТекущиеИтоги.МестоХранения);
							
							ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
							
						КонецЕсли;
						
					КонецЦикла;
					
					// Общая проверка лишнего резерва по всем периодам.
					Если ОтрицательныйОстаток + ПокрывающийРезерв > 0 Тогда
						ТекстСообщения = НСтр("ru = 'При записи %Регистратор% в регистры ТоварыОрганизаций и РезервыТоваровОрганизаций
						|обнаружен лишний резерв по измерениям: %Организация% - %АналитикаНоменклатуры% - %ВидЗапасов% - %НомерГТД%, лишний резерв %Дельта%.'");
						ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОрганизацийИРезервам(ТекстСообщения, Объект.Ссылка, ВыборкаНомерГТД);
						ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Дельта%", ОтрицательныйОстаток + ПокрывающийРезерв);
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
					КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Заполняет в тексте сообщения информационные поля.
//
// Параметры:
//	ТекстСообщения - Строка - Шаблон текста сообщения.
//	Регистратор - ДокументСсылка - Ссылка на документ.
//	Выборка - ВыборкаИзРезультатаЗапроса - Источник данных для заполнения.
//
Процедура ЗаполнитьОбщиеПараметрыТекстеСообщенияОбОшибкахПроведенияПоТоварамОрганизацийИРезервам(ТекстСообщения, Регистратор, Выборка) Экспорт
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Регистратор%", Регистратор);
	
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", Выборка.Организация);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%АналитикаНоменклатуры%", Выборка.АналитикаУчетаНоменклатуры);
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ВидЗапасов%", Выборка.ВидЗапасов);
	Если ЗначениеЗаполнено(Выборка.НомерГТД) Тогда
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерГТД%", СокрЛП(Выборка.НомерГТД));
	Иначе
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерГТД%", НСтр("ru = '<без номера ГТД>'"));
	КонецЕсли;
	ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Месяц%", Формат(Выборка.Период, "Л=ru; ДФ='MMMM гггг'"));
КонецПроцедуры

#КонецОбласти

#Область ОбновлениеИнформационнойБазы

// Регистрирует данные для установки использования регламентного задания свертки резервов.
//
// Параметры:
//  Параметры	 - Структура - см. ОбновлениеИнформационнойБазы.ОсновныеПараметрыОтметкиКОбработке.
//
Процедура ЗарегистрироватьДанныеДляУстановкиИспользованияРегламентногоЗаданияСверткиРезервов(Параметры) Экспорт
	
	// Регистрация данных не требуется, потому что регламентные задания не используются как
	// данные, по которым нужно регистрировать изменения.
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СлужебныйПрограммныйИнтерфейс

#Область ПроцедурыЗаписиДвиженийВРегистр

Процедура ОтразитьТоварыПереданныеПереработчику(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыПереданныеПереработчику;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ТоварыПереданныеПереработчику.Записывать = Истина;
	Движения.ТоварыПереданныеПереработчику.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыПолученныеОтПереработчика(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыПолученныеОтПереработчика;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ТоварыПолученныеОтПереработчика.Записывать = Истина;
	Движения.ТоварыПолученныеОтПереработчика.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыНаСкладах(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыНаСкладах;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.ТоварыНаСкладах.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьДатыПоступленияТоваровОрганизаций(ДополнительныеСвойства, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДатыПоступленияТоваровОрганизаций;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		МенеджерЗаписи = РегистрыСведений.ДатыПоступленияТоваровОрганизаций.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТаблицы);
		МенеджерЗаписи.Записать(Истина);	
	КонецЦикла;

КонецПроцедуры // ОтразитьДатыПоступленияТоваровОрганизаций()

Процедура ОтразитьТоварыОрганизаций(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизаций;
	
	Если Отказ
		Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.ТоварыОрганизаций.Записывать = Истина;
	Движения.ТоварыОрганизаций.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьРезервыТоваровОрганизаций(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = Новый ТаблицаЗначений;
	ЕстьДвижения = ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций", Таблица);
	
	Если Отказ ИЛИ НЕ ЕстьДвижения ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения.РезервыТоваровОрганизаций.Записывать = Истина;
	Движения.РезервыТоваровОрганизаций.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыОрганизацийКПередаче(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыОрганизацийКПередаче;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыОрганизацийКПередаче.Записывать = Истина;
	Движения.ТоварыОрганизацийКПередаче.Загрузить(Таблица);
	
КонецПроцедуры 

Процедура ОтразитьТоварыКОформлениюТаможенныхДеклараций(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюТаможенныхДеклараций;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыКОформлениюТаможенныхДеклараций.Записывать = Истина;
	Движения.ТоварыКОформлениюТаможенныхДеклараций.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьТоварыПереданныеНаКомиссию(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыПереданныеНаКомиссию;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыПереданныеНаКомиссию.Записывать = Истина;
	Движения.ТоварыПереданныеНаКомиссию.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьДатыПередачиТоваровНаКомиссию(ДополнительныеСвойства, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаДатыПередачиТоваровНаКомиссию;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		МенеджерЗаписи = РегистрыСведений.ДатыПередачиТоваровНаКомиссию.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТаблицы);
		МенеджерЗаписи.Записать(Истина);	
	КонецЦикла;

КонецПроцедуры 

Процедура ОтразитьТоварыКОформлениюОтчетовКомитента(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюОтчетовКомитенту;
	
	Если Отказ ИЛИ Таблица .Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыКОформлениюОтчетовКомитенту.Записывать = Истина;
	Движения.ТоварыКОформлениюОтчетовКомитенту.Загрузить(Таблица);
	
КонецПроцедуры 

Процедура ОтразитьУслугиКОформлениюОтчетовПринципалу(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаУслугиКОформлениюОтчетовПринципалу;
	
	Если Отказ ИЛИ Таблица .Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.УслугиКОформлениюОтчетовПринципалу.Записывать = Истина;
	Движения.УслугиКОформлениюОтчетовПринципалу.Загрузить(Таблица);
	
КонецПроцедуры

Процедура ОтразитьСвободныеОстатки(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаСвободныеОстатки;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.СвободныеОстатки.Записывать = Истина;
	Движения.СвободныеОстатки.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьТоварыКОформлениюИзлишковНедостач(ДополнительныеСвойства, Движения, Отказ) Экспорт

	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаТоварыКОформлениюИзлишковНедостач;

	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ТоварыКОформлениюИзлишковНедостач.Записывать = Истина;
	Движения.ТоварыКОформлениюИзлишковНедостач.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьОбеспечениеЗаказов(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица= ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОбеспечениеЗаказов;
	
	Если Отказ ИЛИ Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ОбеспечениеЗаказов.Записывать = Истина;
	Движения.ОбеспечениеЗаказов.Загрузить(Таблица);

КонецПроцедуры

Процедура ОтразитьОбеспечениеЗаказовРаботами(ДополнительныеСвойства, Движения, Отказ) Экспорт
	
	Таблица = ДополнительныеСвойства.ТаблицыДляДвижений.ТаблицаОбеспечениеЗаказовРаботами;
	
	Если Отказ Или Таблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Движения.ОбеспечениеЗаказовРаботами.Записывать = Истина;
	Движения.ОбеспечениеЗаказовРаботами.Загрузить(Таблица);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ЗаполнениеВидовЗапасов

Функция ПустаяТаблицаРеквизитовВидовЗапасовПоУмолчанию()
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("НомерСтроки",
						Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("АналитикаУчетаНоменклатуры",
						Новый ОписаниеТипов("СправочникСсылка.КлючиАналитикиУчетаНоменклатуры"));
	Результат.Колонки.Добавить("Организация",
						Новый ОписаниеТипов("СправочникСсылка.Организации"));
	Результат.Колонки.Добавить("ВидЗапасов",
						Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	Результат.Колонки.Добавить("НомерГТД",
						Новый ОписаниеТипов("СправочникСсылка.НомераГТД"));
	Результат.Колонки.Добавить("ВладелецТовара",
						Метаданные.Справочники.ВидыЗапасов.Реквизиты.ВладелецТовара.Тип);
	Результат.Колонки.Добавить("ТипЗапасов",
						Новый ОписаниеТипов("ПеречислениеСсылка.ТипыЗапасов"));
	Результат.Колонки.Добавить("ТипЗапасовРезервы",
						Новый ОписаниеТипов("ПеречислениеСсылка.ТипыЗапасов"));
	Результат.Колонки.Добавить("Контрагент",
						Метаданные.Справочники.ВидыЗапасов.Реквизиты.Контрагент.Тип);
	Результат.Колонки.Добавить("Договор",
						Метаданные.Справочники.ВидыЗапасов.Реквизиты.Договор.Тип);
	
	Возврат Результат;
	                                              
КонецФункции

Функция НеконтролируемыеТипыЗапасов()
	
	ТипыЗапасов = Новый Массив;
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска);
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварВПути);
	ТипыЗапасов.Добавить(Перечисления.ТипыЗапасов.СобственныйТоварПоНеотфактурованнойПоставке);
	
	Возврат ТипыЗапасов;
	
КонецФункции

Функция ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(ПараметрыЗаполненияВидовЗапасов)
	
	Если ПараметрыЗаполненияВидовЗапасов.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = Неопределено Тогда
		Возврат Не ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизаций");
	Иначе
		Возврат ПараметрыЗаполненияВидовЗапасов.ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию;
	КонецЕсли;
	
КонецФункции

Функция ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов)
	
	Если ЗначениеЗаполнено(ПараметрыЗаполненияВидовЗапасов.ИмяПоляОрганизация) Тогда
		Возврат ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяПоляОрганизация];
	ИначеЕсли ЗначениеЗаполнено(ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация) Тогда
		Возврат ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация;
	Иначе
		ТекстИсключения = НСтр("ru = 'Ошибка в программе: невозможно определить организацию документа.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецФункции

Функция ОрганизацииДляКонтроляОстатков(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТТоварыОрганизацийИзменения.Организация КАК Организация
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляКонтроляОстатков";
	
	Результат = Запрос.Выполнить();
	Организации = Результат.Выгрузить().ВыгрузитьКолонку("Организация");
	
	Возврат Организации;
	
КонецФункции

Процедура СформироватьВТТоварыОрганизацийИзменения(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, "ТоварыОрганизаций");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыОрганизацийИзменения.Период КАК Период,
	|	ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийИзменения.Организация КАК Организация,
	|	ТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	СУММА(ТоварыОрганизацийИзменения.Количество) КАК Количество,
	|	СУММА(ТоварыОрганизацийИзменения.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	СУММА(ТоварыОрганизацийИзменения.Количество) > 0 КАК ДляСторноРезерва,
	|	СУММА(ТоварыОрганизацийИзменения.Количество) < 0 КАК ДляКонтроляОстатков
	|ПОМЕСТИТЬ ВТТоварыОрганизацийИзменения
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) КАК Период,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.Организация КАК Организация,
	|		ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ТоварыОрганизаций.Количество
	|			ИНАЧЕ -ТоварыОрганизаций.Количество
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ТоварыОрганизаций.КоличествоПоРНПТ
	|			ИНАЧЕ -ТоварыОрганизаций.КоличествоПоРНПТ
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		ДвиженияТоварыОрганизацийПередЗаписью КАК ТоварыОрганизаций
	|	ГДЕ
	|		ВЫРАЗИТЬ(ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ),
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.Организация,
	|		ТоварыОрганизаций.ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД,
	|		ТоварыОрганизаций.Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ТоварыОрганизаций.КоличествоПоРНПТ
	|		КОНЕЦ
	|	ИЗ
	|		ТоварыОрганизаций КАК ТоварыОрганизаций
	|	ГДЕ
	|		ВЫРАЗИТЬ(ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))) КАК ТоварыОрганизацийИзменения
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийИзменения.Период,
	|	ТоварыОрганизацийИзменения.Организация,
	|	ТоварыОрганизацийИзменения.ВидЗапасов,
	|	ТоварыОрганизацийИзменения.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыОрганизацийИзменения.Количество) <> 0";
	
	Запрос.УстановитьПараметр("Регистратор", ДокументОбъект.Ссылка);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение(ПараметрыЗаполненияВидовЗапасов, ВыборкаТоваров)
	
	Если ВРег(ПараметрыЗаполненияВидовЗапасов.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("Всегда")
		Или ВРег(ПараметрыЗаполненияВидовЗапасов.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("Никогда")
		Или ВРег(ПараметрыЗаполненияВидовЗапасов.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("ПоНастройкамДоговора") Тогда
		
		Возврат ПараметрыЗаполненияВидовЗапасов.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение;
		
	ИначеЕсли ВРег(ПараметрыЗаполненияВидовЗапасов.ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("ПоХозяйственнойОперации") Тогда
		
		ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение =
			ПараметрыЗаполненияВидовЗапасов.ДействияПодбораТоваровПринятыхНаОтветственноеХранениеПоХозяйственнойОперации[ВыборкаТоваров.ХозяйственнаяОперация];
			
		Если ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) <> ВРег("Всегда")
			И ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) <> ВРег("Никогда")
			И ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) <> ВРег("ПоНастройкамДоговора") Тогда
			ТекстИсключения = НСтр("ru = 'В параметрах заполнения видов запасов не определено подставлять или нет в табличную часть товары, принятые на ответственное хранение для хозяйственной операции %ХозяйственнаяОперация%.'");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ХозяйственнаяОперация%", ВыборкаТоваров.ХозяйственнаяОперация);
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		Возврат ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение;
	Иначе
		ТекстИсключения = НСтр("ru = 'В параметрах заполнения видов запасов не определено подставлять или нет в табличную часть товары, принятые на ответственное хранение.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
		
КонецФункции

Процедура ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов)
	
	ТаблицаОшибок			= ТаблицаОшибокЗаполненияВидовЗапасов();
	ДополнительныеСвойства	= ДокументОбъект.ДополнительныеСвойства;
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов <> Неопределено Тогда
		ТаблицаВидыЗапасов = ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов;
	Иначе
		ТаблицаВидыЗапасов = ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].ВыгрузитьКолонки();
	КонецЕсли;
	
	КонтролироватьИзменениеНомеровГТД = ДополнительныеСвойства.Свойство("КонтролироватьИзменениеНомеровГТД");
	
	Если КонтролироватьИзменениеНомеровГТД Тогда
		ТаблицаНомеровГТД = ТаблицаВидыЗапасов.Скопировать(, "АналитикаУчетаНоменклатуры, НомерГТД, Количество");
	КонецЕсли;
	
	ВидЗапасовПоУмолчанию	= Неопределено;
	ТаблицаНовыеРезервы		= РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию =
		ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(ПараметрыЗаполненияВидовЗапасов);
	
	СтруктураДанныхСтроки = Новый Структура("
		|Склад,
		|Количество,
		|КоличествоПоРНПТ,
		|СуммаСНДС,
		|СтавкаНДС,
		|СуммаНДС,
		|СуммаВознаграждения,
		|СуммаНДСВознаграждения,
		|АналитикаУчетаНоменклатурыОтгрузки,
		|ВидЗапасовОтгрузки,
		|ДокументПередачи,
		|ЗаказКлиента,
		|НедостаточноОстатковТоваровОрганизаций");
	
	СтруктураВидаЗапасовПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|ВладелецТовара,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалогообложениеНДС,
		|НалогообложениеОрганизации,
		|ТипЗапасов,
		|ВидЦены");
	
	Запрос = ЗапросРаспределенияСУчетомПриоритетовТаблицыТоваровНаТаблицуОстатков(МенеджерВременныхТаблиц,
																					ДополнительныеСвойства);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	ВыборкаДанныеДокумента	= МассивРезультатов[1].Выбрать();
	ВыборкаТаблицаТоваров	= МассивРезультатов[2].Выбрать();
	ВыборкаОстаткиПоСтрокам	= МассивРезультатов[5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаДанныеДокумента.Следующий();
	ЗаполнитьЗначенияСвойств(СтруктураВидаЗапасовПоУмолчанию, ВыборкаДанныеДокумента);
	ПередачаПодДеятельность = ВыборкаДанныеДокумента.НалогообложениеНДС;
	Организация = ВыборкаДанныеДокумента.Организация;
	ХозяйственнаяОперация = ВыборкаДанныеДокумента.ХозяйственнаяОперация;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиента
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратТоваровОтКлиентаПрошлыхПериодов Тогда
		ТекстИсключения = НСтр("ru = 'Функция ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы не предназначена для вызова с хозяйственной операцией %ХозяйственнаяОперация%'");	
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%ХозяйственнаяОперация%", ХозяйственнаяОперация);
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ВидыЗапасовПоУмолчанию = Новый ТаблицаЗначений;
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("ВидЗапасов",
											Новый ОписаниеТипов("СправочникСсылка.ВидыЗапасов"));
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("ВидЦены",
											Новый ОписаниеТипов("СправочникСсылка.ВидыЦенПоставщиков"));
	ВидыЗапасовПоУмолчанию.Колонки.Добавить("ГруппаФинансовогоУчета",
											Новый ОписаниеТипов("СправочникСсылка.ГруппыФинансовогоУчетаНоменклатуры"));
	
	ПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций
														Или Не Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить();
	
	Пока ВыборкаОстаткиПоСтрокам.Следующий() Цикл
		
		КоличествоТовара				= ВыборкаОстаткиПоСтрокам.Количество;
		КоличествоТовараПоРНПТ			= ВыборкаОстаткиПоСтрокам.КоличествоПоРНПТ;
		СуммаТовараСНДС					= ВыборкаОстаткиПоСтрокам.СуммаСНДС;
		СуммаНДСТовара					= ВыборкаОстаткиПоСтрокам.СуммаНДС;
		СуммаВознагражденияВсего		= ВыборкаОстаткиПоСтрокам.СуммаВознаграждения;
		СуммаНДСВознагражденияВсего		= ВыборкаОстаткиПоСтрокам.СуммаНДСВознаграждения;
		
		// Детальные записи
		Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ЗаполнитьСтруктуруПоСтрокеТоваров(СтруктураВидаЗапасовПоУмолчанию, Выборка, ВыборкаДанныеДокумента);
			
			ПродажаНаЭкспортКомиссионногоТовара = Ложь;
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
				
				ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение = ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение(
																		ПараметрыЗаполненияВидовЗапасов,
																		Выборка);
				
				Если Выборка.ОрганизацияОстатка = Организация
					И (Выборка.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи
							И (ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("ПоНастройкамДоговора")
								//++ НЕ УТ
									И Выборка.ПорядокОформленияСписанияНедостачПринятыхНаХранениеТоваров = Перечисления.ПорядокОформленияСписанияНедостачПринятыхНаХранениеТоваров.ОформлятьСписаниеПринятыхНаХранениеТоваров
								//-- НЕ УТ
								Или ВРег(ПодбиратьВТЧТоварыПринятыеНаОтветственноеХранение) = ВРег("Всегда"))
						Или Выборка.ТипЗапасов <> Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи) Тогда
					
					ВидЗапасов = Выборка.ВидЗапасов;
					
				ИначеЕсли Выборка.НастройкаПередачи = Перечисления.СпособыПередачиТоваров.ПередачаНаКомиссию
					И ПередачаПодДеятельность <> Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт 
					И ПередачаПодДеятельность <> Перечисления.ТипыНалогообложенияНДС.ЭкспортНесырьевыхТоваров
					И ПередачаПодДеятельность <> Перечисления.ТипыНалогообложенияНДС.ЭкспортСырьевыхТоваровУслуг Тогда
					
					// Должен быть сгенерирован комиссионный товар,
					// остатки по которому позже будут закрыты документом передачи на комиссию.
					Если Выборка.НовыйВидЗапасовЭтоСубкомиссия Тогда
						// сохраняется исходное налогообложение, под которое был принят товар на комиссию
						НалогообложениеКомиссионногоВидаЗапасов = Выборка.НовыйВидЗапасовНалогообложениеКомитента;
					Иначе
						
						// налогообложение определяется по организации-комитенту.
						ПараметрыУчетаПоОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(
														Выборка.НовыйВидЗапасовВладелецТовара,
														ДокументОбъект.Дата);
						
						НалогообложениеКомиссионногоВидаЗапасов = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
						
					КонецЕсли;
					
					СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС = НалогообложениеКомиссионногоВидаЗапасов;
					
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
									Организация,
									Перечисления.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию,
									СтруктураВидаЗапасовПоУмолчанию);
					
				ИначеЕсли Выборка.НастройкаПередачи = Перечисления.СпособыПередачиТоваров.Продажа Тогда
					
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
									Организация,
									Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию,
									СтруктураВидаЗапасовПоУмолчанию);
					
				ИначеЕсли Выборка.ОрганизацияОстатка = Организация
					И ЗначениеЗаполнено(Выборка.ВладелецТовара) Тогда
					
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДокумента(Организация,
												Перечисления.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию,
												СтруктураВидаЗапасовПоУмолчанию);
					
				Иначе // при настройках интеркампани - передача на комиссию, нельзя продавать на экспорт.
					ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
					ПродажаНаЭкспортКомиссионногоТовара = Истина;
				КонецЕсли;
				
			Иначе
				ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
			КонецЕсли;
			
			КоличествоОстаток				= Выборка.КоличествоОстаток;
			КоличествоОстатокВсего			= Выборка.КоличествоОстатокВсего;
			КоличествоПоРНПТОстатокВсего	= Выборка.КоличествоПоРНПТОстатокВсего;
			СуммаОстаток					= Выборка.СуммаОстаток;
			НеУказанНомерГТД				= Ложь;
			
			Если (ЗначениеЗаполнено(ВидЗапасов)
					И Выборка.ВидЗапасов <> ВидЗапасов
					И СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов = Перечисления.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
				// По ТоварНаХраненииСПравомПродажи не может быть прихода резерва
				Или Выборка.НеУказанНомерГТД
				Или ПродажаНаЭкспортКомиссионногоТовара Тогда
				
				КоличествоОстаток				= 0;
				КоличествоОстатокВсего			= 0;
				КоличествоПоРНПТОстатокВсего	= 0;
				СуммаОстаток					= 0;
				НеУказанНомерГТД				= Выборка.НеУказанНомерГТД;
				
			ИначеЕсли (КоличествоТовара > 0 И КоличествоОстаток > 0)
				Или (КоличествоТовара < 0 И КоличествоОстаток < 0) Тогда
				
				НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
				Если ЗначениеЗаполнено(ВидЗапасов) Тогда
					НоваяСтрока.ВидЗапасов = ВидЗапасов;
				Иначе
					ТекстИсключения = НСтр("ru = 'Ненулевое количество при пустом виде запасов.'");
					
					ВызватьИсключение ТекстИсключения;
				КонецЕсли;
				
				Если КоличествоТовара > 0 Тогда
					
					Количество = Мин(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток	= Макс(СуммаОстаток, 0);
						СуммаСНДС		= ?(КоличествоОстаток = Количество,
											СуммаОстаток,
											Мин(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0,
										Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1),
										0);
					КонецЕсли;
					
				Иначе
					
					Количество = Макс(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток = Мин(СуммаОстаток, 0);
						СуммаСНДС = ?(КоличествоОстаток = Количество,
										СуммаОстаток,
										Макс(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0,
										Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1),
										0);
					КонецЕсли;
					
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(СтруктураДанныхСтроки, Выборка);
				
				СтруктураДанныхСтроки.Количество				= Количество;
				СтруктураДанныхСтроки.КоличествоПоРНПТ			= ?(КоличествоОстатокВсего <> 0,
																	?(КоличествоОстатокВсего - Количество = 0,
																		КоличествоПоРНПТОстатокВсего,
																		Количество * КоличествоПоРНПТОстатокВсего / КоличествоОстатокВсего),
																	0);
				СтруктураДанныхСтроки.СуммаСНДС					= СуммаСНДС;
				СтруктураДанныхСтроки.СуммаНДС					= ?(СуммаТовараСНДС <> 0,
																	Окр(СуммаСНДС * СуммаНДСТовара / СуммаТовараСНДС, 2, 1),
																	0);
				СтруктураДанныхСтроки.СуммаВознаграждения		= ?(КоличествоТовара <> 0,
																	Окр(Количество * СуммаВознагражденияВсего / КоличествоТовара, 2, 1),
																	0);
				СтруктураДанныхСтроки.СуммаНДСВознаграждения	= ?(КоличествоТовара <> 0,
																	Окр(Количество * СуммаНДСВознагражденияВсего / КоличествоТовара, 2, 1),
																	0);
				СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций = Ложь;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
				
				// Для товаров, выкупаемых по интеркампани, формируются движения по Резервам.
				Если Выборка.ВидЗапасов <> ВидЗапасов Тогда
					
					ДвижениеРезерваПродавца = ТаблицаНовыеРезервы.Добавить();
					ЗаполнитьЗначенияСвойств(ДвижениеРезерваПродавца, НоваяСтрока);
					
					ДвижениеРезерваПродавца.ВидДвижения		= ВидДвиженияНакопления.Приход;
					ДвижениеРезерваПродавца.Период			= КонецМесяца(ВыборкаДанныеДокумента.Период);
					ДвижениеРезерваПродавца.Организация		= Организация;
					ДвижениеРезерваПродавца.КорОрганизация	= Выборка.ОрганизацияОстатка;
					ДвижениеРезерваПродавца.КорВидЗапасов	= Выборка.ВидЗапасов;
					
					РегистрыНакопления.РезервыТоваровОрганизаций.ДобавитьВНаборРезерваКорЗапись(ТаблицаНовыеРезервы,
																								ДвижениеРезерваПродавца);
					
				КонецЕсли;
				
				КоличествоТовара			= КоличествоТовара				- СтруктураДанныхСтроки.Количество;
				КоличествоТовараПоРНПТ		= КоличествоТовараПоРНПТ		- СтруктураДанныхСтроки.КоличествоПоРНПТ;
				СуммаТовараСНДС				= СуммаТовараСНДС				- СтруктураДанныхСтроки.СуммаСНДС;
				СуммаНДСТовара				= СуммаНДСТовара				- СтруктураДанныхСтроки.СуммаНДС;
				СуммаВознагражденияВсего	= СуммаВознагражденияВсего		- СтруктураДанныхСтроки.СуммаВознаграждения;
				СуммаНДСВознагражденияВсего	= СуммаНДСВознагражденияВсего	- СтруктураДанныхСтроки.СуммаНДСВознаграждения;
				СуммаОстаток				= СуммаОстаток					- СтруктураДанныхСтроки.СуммаСНДС;
				
			КонецЕсли;
			
		КонецЦикла; // Выборка по остаткам
		
		Если КоличествоТовара <> 0
			ИЛИ СуммаТовараСНДС <> 0 Тогда
			
			Если ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию
				ИЛИ ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
				
				Если Не ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке
					И ПараметрыЗаполненияВидовЗапасов.ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Количество() = 0 Тогда
					
					ТекстИсключения = НСтр("ru = 'Установлен флаг получения владельца товаров из таблицы
												|реквизитов видов запасов по умолчанию, но таблица не передана.'");
					
					ВызватьИсключение ТекстИсключения;
					
				КонецЕсли;
				
				ВыборкаТаблицаТоваров.Сбросить();
				ВидыЗапасовПоУмолчанию.Очистить();
				
				ОтборСтрок = Новый Структура("НомерСтроки", ВыборкаОстаткиПоСтрокам.НомерСтроки);
				
				Если ВыборкаТаблицаТоваров.НайтиСледующий(ОтборСтрок) Тогда
					
					ВидЦены = ВыборкаТаблицаТоваров.ВидЦены;
					ГруппаФинансовогоУчета = ВыборкаТаблицаТоваров.ГруппаФинансовогоУчета;
					
					Если ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке Тогда
						
						Отбор = Новый Структура("ВидЦены, ГруппаФинансовогоУчета", ВидЦены, ГруппаФинансовогоУчета);
						СтрокиВидовЗапасовПоУмолчанию = ВидыЗапасовПоУмолчанию.НайтиСтроки(Отбор);
						
						Если СтрокиВидовЗапасовПоУмолчанию.Количество() = 0 Тогда
							ЗаполнитьЗначенияСвойств(СтруктураВидаЗапасовПоУмолчанию, Отбор);
							
							ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
														Организация,
														ХозяйственнаяОперация,
														СтруктураВидаЗапасовПоУмолчанию);
							
							НоваяСтрока = ВидыЗапасовПоУмолчанию.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, Отбор);
							НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
						КонецЕсли;
						
					Иначе
						
						СтруктураВидаЗапасовПоУмолчанию.ВидЦены					= ВидЦены;
						СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета	= ГруппаФинансовогоУчета;
						СтруктураВидаЗапасовПоУмолчанию.ВладелецТовара			= ВыборкаТаблицаТоваров.ВладелецТовара;
						СтруктураВидаЗапасовПоУмолчанию.Контрагент				= ВыборкаТаблицаТоваров.Контрагент;
						СтруктураВидаЗапасовПоУмолчанию.Договор					= ВыборкаТаблицаТоваров.Договор;
						СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов				= ВыборкаТаблицаТоваров.ТипЗапасов;
						
						ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
													Организация,
													ХозяйственнаяОперация,
													СтруктураВидаЗапасовПоУмолчанию);
						
					КонецЕсли;
					
					НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТаблицаТоваров);
					НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
					
					ЗаполнитьЗначенияСвойств(СтруктураДанныхСтроки, ВыборкаТаблицаТоваров);
					
					СтруктураДанныхСтроки.Количество				= КоличествоТовара;
					СтруктураДанныхСтроки.КоличествоПоРНПТ			= КоличествоТовараПоРНПТ;
					СтруктураДанныхСтроки.СуммаСНДС					= СуммаТовараСНДС;
					СтруктураДанныхСтроки.СуммаНДС					= СуммаНДСТовара;
					СтруктураДанныхСтроки.СуммаВознаграждения		= 0;
					СтруктураДанныхСтроки.СуммаНДСВознаграждения	= 0;
					СтруктураДанныхСтроки.ЗаказКлиента				= Неопределено;
					СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций = Истина;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
					
					Если Не ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке Тогда
						
						СтруктураВидаЗапасовПоУмолчаниюРезервы = Новый Структура;
						
						Для Каждого ТекКлюч Из СтруктураВидаЗапасовПоУмолчанию Цикл
							СтруктураВидаЗапасовПоУмолчаниюРезервы.Вставить(ТекКлюч.Ключ, ТекКлюч.Значение);
						КонецЦикла;
						
						СтруктураВидаЗапасовПоУмолчаниюРезервы.ТипЗапасов = ВыборкаТаблицаТоваров.ТипЗапасовРезервы;
						
						// Добавляем резервы для неотрицательности остатка продукции по товарам организации
						ВидЗапасовПоУмолчаниюРезерв = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
														Организация,
														ХозяйственнаяОперация,
														СтруктураВидаЗапасовПоУмолчаниюРезервы);
						
						ДвижениеРезерваСобственного = ТаблицаНовыеРезервы.Добавить();
						ЗаполнитьЗначенияСвойств(ДвижениеРезерваСобственного, НоваяСтрока);
						ДвижениеРезерваСобственного.ВидДвижения		= ВидДвиженияНакопления.Приход;
						ДвижениеРезерваСобственного.Период			= ВыборкаДанныеДокумента.Период;
						ДвижениеРезерваСобственного.Организация		= Организация;
						ДвижениеРезерваСобственного.КорОрганизация	= Организация;
						ДвижениеРезерваСобственного.КорВидЗапасов	= ВидЗапасовПоУмолчаниюРезерв;
						
						// Добавляем резервы для отражения отрицательного неконтролируемого остатка
						РегистрыНакопления.РезервыТоваровОрганизаций.ДобавитьВНаборРезерваКорЗапись(
							ТаблицаНовыеРезервы,
							ДвижениеРезерваСобственного);
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию Тогда
				
				Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения Тогда
					Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
					Выборка.Следующий();
					
					НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, ВыборкаТаблицаТоваров);
					
					НоваяСтрокаОшибок.Количество		= КоличествоТовара;
					НоваяСтрокаОшибок.ЕдиницаИзмерения	= Выборка.ЕдиницаИзмерения;
					НоваяСтрокаОшибок.НеУказанНомерГТД	= НеУказанНомерГТД;
					НоваяСтрокаОшибок.Номенклатура		= Выборка.Номенклатура;
					НоваяСтрокаОшибок.Характеристика	= Выборка.Характеристика;
					НоваяСтрокаОшибок.Серия				= Выборка.Серия;
					НоваяСтрокаОшибок.Склад				= Выборка.Склад;
					НоваяСтрокаОшибок.Назначение		= Выборка.Назначение;
				КонецЕсли;
				
				Если Не ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
					Отказ = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; // Выборка по строкам документа
	
	Если ТаблицаОшибок.Количество() > 0
		И ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
		
		ТекстСообщения = НСтр( "ru = 'Документ %Ссылка% проведен с выключенным контролем остатков товаров организаций.'", Метаданные.ОсновнойЯзык.КодЯзыка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ДокументОбъект.Ссылка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытияВыключенКонтрольОстатков(),
									УровеньЖурналаРегистрации.Предупреждение,
									,
									ДокументОбъект.Ссылка,
									ТекстСообщения);
		
	КонецЕсли;
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов = Неопределено
		И Не Отказ Тогда
		
		ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].Загрузить(ТаблицаВидыЗапасов);
		
	КонецЕсли;
	
	Если КонтролироватьИзменениеНомеровГТД Тогда
		
		ТаблицаНомеровГТД.Колонки.Добавить("НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаВидыЗапасов Цикл
			
			НоваяСтрока = ТаблицаНомеровГТД.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			НоваяСтрока.Количество = 0;
			НоваяСтрока.НовоеКоличество = СтрокаТаблицы.Количество;
			
		КонецЦикла;
		
		ТаблицаНомеровГТД.Свернуть("АналитикаУчетаНоменклатуры, НомерГТД", "Количество, НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаНомеровГТД Цикл
			Если СтрокаТаблицы.Количество <> СтрокаТаблицы.НовоеКоличество Тогда
				ДополнительныеСвойства.Вставить("ИзменилисьНомераГТД", Истина);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	СообщитьОбОшибкахКонтроляТоваровОрганизаций(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов);
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы <> Неопределено Тогда
		// Условие выполняется только в этапе производства. В этом документе распределение резервов по периодам при заполнении
		// видов запасов не делается - оно происходит при формировании резервов в обработке проведения.
		ПараметрыЗаполненияВидовЗапасов.Вставить("ТаблицаНовыеРезервы", ТаблицаНовыеРезервы);
	Иначе
		
		ТаблицаНовыеРезервы = РаспределитьРезервыТоваровОрганизацийПоПериодам(
								ПараметрыЗаполненияВидовЗапасов.КоличествоПериодовПриФормированииРезервовОрганизаций,
								ТаблицаНовыеРезервы,
								МенеджерВременныхТаблиц);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НовыеРезервы.ВидДвижения,
		|	НовыеРезервы.Период,
		|	НовыеРезервы.АналитикаУчетаНоменклатуры,
		|	НовыеРезервы.Организация,
		|	НовыеРезервы.ВидЗапасов,
		|	НовыеРезервы.НомерГТД,
		|	НовыеРезервы.Количество,
		|	НовыеРезервы.КоличествоПоРНПТ,
		|	НовыеРезервы.КорОрганизация,
		|	НовыеРезервы.КорВидЗапасов
		|ПОМЕСТИТЬ ВТНовыеРезервы
		|ИЗ
		|	&ТаблицаНовыеРезервы КАК НовыеРезервы";
		
		Запрос.УстановитьПараметр("ТаблицаНовыеРезервы", ТаблицаНовыеРезервы);
		
		Запрос.Выполнить();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЗапросРаспределенияРезервовПоТаблицеОстатков(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ЗапросРаспределенияРезервов = Новый Запрос;
	ЗапросРаспределенияРезервов.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросРаспределенияРезервов.Текст =
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.Организация КАК Организация,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	0 - Остатки.КоличествоОстаток КАК Количество,
	|	ВЫБОР
	|		КОГДА Остатки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|					И ТИПЗНАЧЕНИЯ(Остатки.ВидЗапасов.ВладелецТовара) = ЗНАЧЕНИЕ(Справочник.Партнеры)
	|				ИЛИ Остатки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПокрываетсяРезервом,
	|	Остатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Остатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	Остатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	Остатки.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	Остатки.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|ГДЕ
	|	Остатки.КоличествоОстаток < 0
	|	И Остатки.Организация = &Организация
	|	И НЕ Остатки.ВидЗапасов.ТипЗапасов В(&НеконтролируемыеТипыЗапасов)
	|	И (Остатки.АналитикаУчетаНоменклатуры, Остатки.Организация, Остатки.ВидЗапасов) В
	|			(ВЫБРАТЬ
	|				ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|				ВТТоварыОрганизацийИзменения.Организация КАК Организация,
	|				ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов
	|			ИЗ
	|				ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения)
	|	И (Остатки.НомерГТД В
	|				(ВЫБРАТЬ
	|					ВТТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД
	|				ИЗ
	|					ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения)
	|			ИЛИ &БезОтбораПоНомерамГТД)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.Организация КАК Организация,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	СУММА(Остатки.Количество) КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(Остатки.КоличествоПоРНПТ)
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	Остатки.Номенклатура КАК Номенклатура,
	|	Остатки.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Остатки.Характеристика КАК Характеристика,
	|	Остатки.Серия КАК Серия,
	|	Остатки.Назначение КАК Назначение,
	|	Остатки.Склад КАК Склад,
	|	ЕСТЬNULL(ДатыПоступленияТоваровОрганизаций.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПоступления
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Остатки.Организация КАК Организация,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК Количество,
	|		Остатки.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТ,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|		Остатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|		Остатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|		Остатки.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|		Остатки.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|	ГДЕ
	|		Остатки.КоличествоОстаток > 0
	|		И Остатки.Организация <> &Организация
	|		И Остатки.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.Организация,
	|		Остатки.ВидЗапасов,
	|		Остатки.НомерГТД,
	|		Остатки.КоличествоОстаток,
	|		Остатки.КоличествоПоРНПТОстаток,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|		Остатки.АналитикаУчетаНоменклатуры.Характеристика,
	|		Остатки.АналитикаУчетаНоменклатуры.Серия,
	|		Остатки.АналитикаУчетаНоменклатуры.Назначение,
	|		Остатки.АналитикаУчетаНоменклатуры.МестоХранения
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройки
	|			ПО (Настройки.ОрганизацияВладелец = Остатки.Организация)
	|				И (Настройки.ОрганизацияПродавец = &Организация)
	|				И (Настройки.ТипЗапасов = Остатки.ВидЗапасов.ТипЗапасов)
	|				И (Настройки.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|					ИЛИ Настройки.Валюта = Остатки.ВидЗапасов.Валюта
	|						И Настройки.СпособПередачиТоваров = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию))
	|	ГДЕ
	|		Остатки.КоличествоОстаток > 0
	|		И Остатки.Организация <> &Организация
	|		И Остатки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры,
	|		СторноПриходаРезерва.КорОрганизация,
	|		СторноПриходаРезерва.КорВидЗапасов,
	|		СторноПриходаРезерва.НомерГТД,
	|		-СторноПриходаРезерва.Количество,
	|		-СторноПриходаРезерва.КоличествоПоРНПТ,
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.Номенклатура,
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.Характеристика,
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.Серия,
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.Назначение,
	|		СторноПриходаРезерва.АналитикаУчетаНоменклатуры.МестоХранения
	|	ИЗ
	|		ВТСторноРезервов КАК СторноПриходаРезерва
	|	ГДЕ
	|		СторноПриходаРезерва.Количество < 0
	|		И СторноПриходаРезерва.Организация = &Организация
	|		И СторноПриходаРезерва.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.Организация,
	|		Остатки.ВидЗапасов,
	|		Остатки.НомерГТД,
	|		Остатки.КоличествоОстаток,
	|		Остатки.КоличествоПоРНПТОстаток,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|		Остатки.АналитикаУчетаНоменклатуры.Характеристика,
	|		Остатки.АналитикаУчетаНоменклатуры.Серия,
	|		Остатки.АналитикаУчетаНоменклатуры.Назначение,
	|		Остатки.АналитикаУчетаНоменклатуры.МестоХранения
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|	ГДЕ
	|		Остатки.КоличествоОстаток > 0
	|		И Остатки.Организация = &Организация
	|		И Остатки.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.Организация,
	|		СпрВидыЗапасов.Ссылка,
	|		Остатки.НомерГТД,
	|		-Остатки.КоличествоОстаток,
	|		-Остатки.КоличествоПоРНПТОстаток,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура,
	|		Остатки.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|		Остатки.АналитикаУчетаНоменклатуры.Характеристика,
	|		Остатки.АналитикаУчетаНоменклатуры.Серия,
	|		Остатки.АналитикаУчетаНоменклатуры.Назначение,
	|		Остатки.АналитикаУчетаНоменклатуры.МестоХранения
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК СпрВидыЗапасов
	|		ПО (&ПриНехваткеТоваровОрганизацииФормироватьРезервПоТоварамТребующимПодтвержденияВыпуска)
	|		И (НЕ СпрВидыЗапасов.ЭтоДубль)
	|		И (НЕ СпрВидыЗапасов.Устаревший)
	|		И (СпрВидыЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска))
	|		И Остатки.Организация = СпрВидыЗапасов.Организация
	|		И Остатки.ВидЗапасов.ГруппаФинансовогоУчета = СпрВидыЗапасов.ГруппаФинансовогоУчета
	|		И (Остатки.ВидЗапасов.ВладелецТовара = СпрВидыЗапасов.ВладелецТовара
	|			ИЛИ Остатки.ВидЗапасов.ВладелецТовара = НЕОПРЕДЕЛЕНО
	|			И СпрВидыЗапасов.ВладелецТовара = Остатки.Организация) 
	|		И Остатки.ВидЗапасов.Контрагент = СпрВидыЗапасов.Контрагент
	|		И Остатки.ВидЗапасов.Договор = СпрВидыЗапасов.Договор
	|	ГДЕ
	|		&ПриНехваткеТоваровОрганизацииФормироватьРезервПоТоварамТребующимПодтвержденияВыпуска
	|		И Остатки.КоличествоОстаток < 0) КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО Остатки.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|			И Остатки.Номенклатура = ДатыПоступленияТоваровОрганизаций.Номенклатура
	|			И Остатки.Характеристика = ДатыПоступленияТоваровОрганизаций.Характеристика
	|			И Остатки.Серия = ДатыПоступленияТоваровОрганизаций.Серия
	|			И Остатки.Назначение = ДатыПоступленияТоваровОрганизаций.Назначение
	|			И Остатки.НомерГТД = ДатыПоступленияТоваровОрганизаций.НомерГТД
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.Серия,
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	Остатки.ЕдиницаИзмерения,
	|	Остатки.ВидЗапасов,
	|	Остатки.Характеристика,
	|	ЕСТЬNULL(ДатыПоступленияТоваровОрганизаций.ДатаПоступления, ДАТАВРЕМЯ(1, 1, 1)),
	|	Остатки.Назначение,
	|	Остатки.Склад,
	|	Остатки.Организация,
	|	Остатки.НомерГТД
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстатков";
	
	ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, "ВТСторноРезервов");
	
	ЗапросРаспределенияРезервов.УстановитьПараметр("НеконтролируемыеТипыЗапасов", НеконтролируемыеТипыЗапасов());
	ЗапросРаспределенияРезервов.УстановитьПараметр("БезОтбораПоНомерамГТД",
													ПараметрыЗаполненияВидовЗапасов.БезОтбораПоНомерамГТД);
	ЗапросРаспределенияРезервов.УстановитьПараметр("ПриНехваткеТоваровОрганизацииФормироватьРезервПоТоварамТребующимПодтвержденияВыпуска",
		ПараметрыЗаполненияВидовЗапасов.ПриНехваткеТоваровОрганизацииФормироватьРезервПоТоварамТребующимПодтвержденияВыпуска);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(
		ЗапросРаспределенияРезервов);
	
	Возврат ЗапросРаспределенияРезервов;
	
КонецФункции

Процедура РаспределитьНовыеРезервыПоТаблицеОстатков(Знач ЗапросРаспределенияРезервов,
													Знач Организация,
													Знач ПараметрыЗаполненияВидовЗапасов,
													ТаблицаНовыеРезервыИсходная,
													ТаблицаОшибок)
	
	КолонкиПоискаОстатковКРаспределению = "АналитикаУчетаНоменклатуры, НомерГТД";
	
	ЗапросРаспределенияРезервов.УстановитьПараметр("Организация", Организация);
	
	Результаты				= ЗапросРаспределенияРезервов.ВыполнитьПакет();
	ТаблицаРаспределения	= Результаты[0].Выгрузить();
	ОстаткиКРаспределению	= Результаты[1].Выгрузить();
	ОстаткиКРаспределению.Индексы.Добавить(КолонкиПоискаОстатковКРаспределению);
	
	СтруктураПоиска = Новый Структура(КолонкиПоискаОстатковКРаспределению);
	
	ТаблицаНовыеРезервы		= ТаблицаНовыеРезервыИсходная.СкопироватьКолонки();
	ИсходнаяТаблицаПустая	= ТаблицаНовыеРезервыИсходная.Количество() = 0;
	
	Для Каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл
		
		Если Не СтрокаРаспределения.ПокрываетсяРезервом Тогда
			ЗаписьОшибки = ТаблицаОшибок.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьОшибки, СтрокаРаспределения);
			ЗаписьОшибки.НеУказанНомерГТД = Ложь;
			
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаРаспределения);
		СтрокиОстатка = ОстаткиКРаспределению.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаОстатка Из СтрокиОстатка Цикл
			
			Если СтрокаОстатка.Количество <= 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Количество = Мин(СтрокаРаспределения.Количество, СтрокаОстатка.Количество);
			
			РезервПродавца = ТаблицаНовыеРезервы.Добавить();
			ЗаполнитьЗначенияСвойств(РезервПродавца, СтрокаРаспределения);
			РезервПродавца.ВидДвижения		= ВидДвиженияНакопления.Приход;
			РезервПродавца.Количество		= Количество;
			РезервПродавца.КоличествоПоРНПТ	= ?(СтрокаОстатка.Количество - Количество = 0,
												СтрокаОстатка.КоличествоПоРНПТ,
												Количество * СтрокаОстатка.КоличествоПоРНПТ / СтрокаОстатка.Количество);
			РезервПродавца.КорОрганизация	= СтрокаОстатка.Организация;
			РезервПродавца.КорВидЗапасов	= СтрокаОстатка.ВидЗапасов;
			РезервПродавца.ЭтоСторно		= Ложь;
			
			СтрокаОстатка.Количество		= СтрокаОстатка.Количество - Количество;
			СтрокаОстатка.КоличествоПоРНПТ	= СтрокаОстатка.КоличествоПоРНПТ - РезервПродавца.КоличествоПоРНПТ;
			СтрокаРаспределения.Количество	= СтрокаРаспределения.Количество - Количество;
			
			РегистрыНакопления.РезервыТоваровОрганизаций.ДобавитьВНаборРезерваКорЗапись(ТаблицаНовыеРезервы,
																						РезервПродавца);
			
		КонецЦикла;
		
		Если СтрокаРаспределения.Количество <> 0 Тогда
			ЗаписьОшибки = ТаблицаОшибок.Добавить();
			ЗаполнитьЗначенияСвойств(ЗаписьОшибки, СтрокаРаспределения);
			ЗаписьОшибки.НеУказанНомерГТД = Ложь;
		КонецЕсли;
		
	КонецЦикла;

	ТаблицаНовыеРезервы = РаспределитьРезервыТоваровОрганизацийПоПериодам(
							ПараметрыЗаполненияВидовЗапасов.КоличествоПериодовПриФормированииРезервовОрганизаций,
							ТаблицаНовыеРезервы,
							ЗапросРаспределенияРезервов.МенеджерВременныхТаблиц);
	
	Если ИсходнаяТаблицаПустая Тогда
		ТаблицаНовыеРезервыИсходная = ТаблицаНовыеРезервы;
	Иначе
		ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(ТаблицаНовыеРезервыИсходная, ТаблицаНовыеРезервы);
	КонецЕсли;
	
КонецПроцедуры

Функция КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов)
	НалогообложениеНДС            = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС;
	
	Если Не ЗначениеЗаполнено(НалогообложениеНДС) Тогда
		КонтролироватьНалогообложение = Ложь;
	Иначе
		КонтролироватьНалогообложение = Истина;
	КонецЕсли;
	
	Возврат КонтролироватьНалогообложение;
КонецФункции

Процедура СформироватьВТСторноРезервов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, "ВТСторноРезервовПредыдущихПериодов");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	НЕ ВТТоварыОрганизацийИзменения.ДляСторноРезерва
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВидыЗапасов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыЗапасов КАК ВидыЗапасов
	|ГДЕ
	|	(&ПоВсемТипамЗапасов
	|			ИЛИ ВидыЗапасов.ТипЗапасов В (&ТипЗапасов))
	|	И (&ПоВсемНалогообложениямНДС
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС В (&НалогообложениеНДС)
	|			ИЛИ ВидыЗапасов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка))
	|	И (&ПоВсемВладельцамТоваров
	|			ИЛИ ВидыЗапасов.ВладелецТовара В (&ВладелецТовара))
	|	И (&ПоВсемСоглашениям
	|			ИЛИ ВидыЗапасов.Соглашение В (&Соглашение))
	|	И (&ПоВсемВалютам
	|			ИЛИ ВидыЗапасов.Валюта В (&Валюта))
	|	И (&ПоВсемКонтрагентам
	|			ИЛИ ВидыЗапасов.Контрагент В (&Контрагент))
	|	И (&ПоВсемДоговорам
	|			ИЛИ ВидыЗапасов.Договор В (&Договор))
	|	И (&ПоВсемГруппамПродукции
	|			ИЛИ ВидыЗапасов.ГруппаПродукции В (&ГруппаПродукции))
	|	И (&ПоВсемВидамЦен
	|			ИЛИ ВидыЗапасов.ВидЦены В (&ВидЦены))
	|	И (&ПоВсемОрганизациям
	|			ИЛИ ВидыЗапасов.Организация В (&Организация))
	|	И НЕ ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|	И НЕ ВидыЗапасов.ЭтоДубль";
	
	ОтборыВидовЗапасов = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов;
	
	Запрос.УстановитьПараметр("ТипЗапасов", ОтборыВидовЗапасов.ТипЗапасов);
	Запрос.УстановитьПараметр("ПоВсемТипамЗапасов", ОтборыВидовЗапасов.ТипЗапасов = Неопределено);
	
	Запрос.УстановитьПараметр("НалогообложениеНДС", ОтборыВидовЗапасов.НалогообложениеНДС);
	Запрос.УстановитьПараметр("ПоВсемНалогообложениямНДС", ОтборыВидовЗапасов.НалогообложениеНДС = Неопределено);
	
	Запрос.УстановитьПараметр("ВладелецТовара", ОтборыВидовЗапасов.ВладелецТовара);
	Запрос.УстановитьПараметр("ПоВсемВладельцамТоваров", ЗначениеЗаполнено(ОтборыВидовЗапасов.ВладелецТовара));
	
	Запрос.УстановитьПараметр("Соглашение", ОтборыВидовЗапасов.Соглашение);
	Запрос.УстановитьПараметр("ПоВсемСоглашениям", ОтборыВидовЗапасов.Соглашение = Неопределено);
	
	Запрос.УстановитьПараметр("Валюта", ОтборыВидовЗапасов.Валюта);
	Запрос.УстановитьПараметр("ПоВсемВалютам", ОтборыВидовЗапасов.Валюта = Неопределено);
	
	Запрос.УстановитьПараметр("Контрагент", ОтборыВидовЗапасов.Контрагент);
	Запрос.УстановитьПараметр("ПоВсемКонтрагентам", ЗначениеЗаполнено(ОтборыВидовЗапасов.Контрагент));
	
	Запрос.УстановитьПараметр("Договор", ОтборыВидовЗапасов.Договор);
	Запрос.УстановитьПараметр("ПоВсемДоговорам", ЗначениеЗаполнено(ОтборыВидовЗапасов.Договор));
	
	Запрос.УстановитьПараметр("ГруппаПродукции", ОтборыВидовЗапасов.ГруппаПродукции);
	Запрос.УстановитьПараметр("ПоВсемГруппамПродукции", ОтборыВидовЗапасов.ГруппаПродукции = Неопределено);
	
	Запрос.УстановитьПараметр("ВидЦены", ОтборыВидовЗапасов.ВидЦены);
	Запрос.УстановитьПараметр("ПоВсемВидамЦен", ОтборыВидовЗапасов.ВидЦены = Неопределено);
	
	Запрос.УстановитьПараметр("Организация", ОтборыВидовЗапасов.Организация);
	Запрос.УстановитьПараметр("ПоВсемОрганизациям", ОтборыВидовЗапасов.Организация = Неопределено);

	Результаты = Запрос.ВыполнитьПакет();
	
	Запрос.УстановитьПараметр("КорВидыЗапасовДляСторно", Результаты[0].Выгрузить().ВыгрузитьКолонку("ВидЗапасов"));
	Запрос.УстановитьПараметр("ВидыЗапасовПолучателя", Результаты[1].Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СформированныеРезервы.Период КАК Период,
	|	СформированныеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СформированныеРезервы.Организация КАК Организация,
	|	СформированныеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	СформированныеРезервы.НомерГТД КАК НомерГТД,
	|	СформированныеРезервы.КорОрганизация КАК КорОрганизация,
	|	СформированныеРезервы.КорВидЗапасов КАК КорВидЗапасов,
	|	СформированныеРезервы.Количество КАК Количество,
	|	СформированныеРезервы.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	СформированныеРезервы.ВидДвижения КАК ВидДвижения
	|ПОМЕСТИТЬ ВТСформированныеРезервы
	|ИЗ
	|	&СформированныеРезервы КАК СформированныеРезервы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТТоварыОрганизацийИзменения.Организация КАК Организация,
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов,
	|	ВТТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	ВТТоварыОрганизацийИзменения.Период КАК Период
	|ПОМЕСТИТЬ ВТОтборыРезервовДляСторно
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляСторноРезерва
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, МЕСЯЦ) КАК Период,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.КорВидЗапасов В (&КорВидыЗапасовДляСторно)
	|			ТОГДА 0
	|		КОГДА ВложенныйЗапрос.КорВидЗапасов В (&ВидыЗапасовПолучателя)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК Приоритет
	|ИЗ
	|	(ВЫБРАТЬ
	|		РезервыТоваровОрганизаций.Период КАК Период,
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация КАК Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|		РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|		РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|		РезервыТоваровОрганизаций.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ РезервыТоваровОрганизаций.КоличествоПоРНПТ
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|			ПО РезервыТоваровОрганизаций.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	ГДЕ
	|		(РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры, РезервыТоваровОрганизаций.Организация, РезервыТоваровОрганизаций.ВидЗапасов, РезервыТоваровОрганизаций.НомерГТД) В
	|				(ВЫБРАТЬ
	|					ВТОтборыРезервовДляСторно.АналитикаУчетаНоменклатуры,
	|					ВТОтборыРезервовДляСторно.Организация,
	|					ВТОтборыРезервовДляСторно.ВидЗапасов,
	|					ВТОтборыРезервовДляСторно.НомерГТД
	|				ИЗ
	|					ВТОтборыРезервовДляСторно КАК ВТОтборыРезервовДляСторно)
	|		И РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СторноРезервов.Период,
	|		СторноРезервов.АналитикаУчетаНоменклатуры,
	|		СторноРезервов.Организация,
	|		СторноРезервов.ВидЗапасов,
	|		СторноРезервов.НомерГТД,
	|		СторноРезервов.КорОрганизация,
	|		СторноРезервов.КорВидЗапасов,
	|		СторноРезервов.Количество,
	|		СторноРезервов.КоличествоПоРНПТ
	|	ИЗ
	|		ВТСторноРезервовПредыдущихПериодов КАК СторноРезервов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|			ПО СторноРезервов.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	ГДЕ
	|		(СторноРезервов.АналитикаУчетаНоменклатуры, СторноРезервов.Организация, СторноРезервов.ВидЗапасов, СторноРезервов.НомерГТД) В
	|				(ВЫБРАТЬ
	|					ВТОтборыРезервовДляСторно.АналитикаУчетаНоменклатуры,
	|					ВТОтборыРезервовДляСторно.Организация,
	|					ВТОтборыРезервовДляСторно.ВидЗапасов,
	|					ВТОтборыРезервовДляСторно.НомерГТД
	|				ИЗ
	|					ВТОтборыРезервовДляСторно КАК ВТОтборыРезервовДляСторно)
	|		И СторноРезервов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СформированныеРезервы.Период,
	|		СформированныеРезервы.АналитикаУчетаНоменклатуры,
	|		СформированныеРезервы.Организация,
	|		СформированныеРезервы.ВидЗапасов,
	|		СформированныеРезервы.НомерГТД,
	|		СформированныеРезервы.КорОрганизация,
	|		СформированныеРезервы.КорВидЗапасов,
	|		СформированныеРезервы.Количество,
	|		СформированныеРезервы.КоличествоПоРНПТ
	|	ИЗ
	|		ВТСформированныеРезервы КАК СформированныеРезервы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК КорВидыЗапасов
	|			ПО СформированныеРезервы.КорВидЗапасов = КорВидыЗапасов.Ссылка
	|	ГДЕ
	|		(СформированныеРезервы.АналитикаУчетаНоменклатуры, СформированныеРезервы.Организация, СформированныеРезервы.ВидЗапасов, СформированныеРезервы.НомерГТД) В
	|				(ВЫБРАТЬ
	|					ВТОтборыРезервовДляСторно.АналитикаУчетаНоменклатуры,
	|					ВТОтборыРезервовДляСторно.Организация,
	|					ВТОтборыРезервовДляСторно.ВидЗапасов,
	|					ВТОтборыРезервовДляСторно.НомерГТД
	|				ИЗ
	|					ВТОтборыРезервовДляСторно КАК ВТОтборыРезервовДляСторно)
	|		И СформированныеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВложенныйЗапрос.Период, МЕСЯЦ),
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВТТоварыОрганизацийИзменения.Период, МЕСЯЦ) КАК Период,
	|	ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТТоварыОрганизацийИзменения.Организация КАК Организация,
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов КАК ВидЗапасов,
	|	ВТТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	СУММА(ВТТоварыОрганизацийИзменения.Количество) КАК Количество
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляСторноРезерва
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВТТоварыОрганизацийИзменения.Период, МЕСЯЦ),
	|	ВТТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры,
	|	ВТТоварыОрганизацийИзменения.Организация,
	|	ВТТоварыОрганизацийИзменения.ВидЗапасов,
	|	ВТТоварыОрганизацийИзменения.НомерГТД
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") Тогда
		СформированныеРезервы = ДокументОбъект.ДополнительныеСвойства.ТаблицаРезервыТоваровОрганизаций.Скопировать();
	Иначе
		СформированныеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СформированныеРезервы", СформированныеРезервы);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Результаты = Запрос.ВыполнитьПакет();
	РезервыДляСторно = Результаты[Результаты.ВГраница() - 1].Выгрузить();
	РезервыДляСторно.Индексы.Добавить("АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД");
	
	ТоварыОрганизацийДляСторно	= Результаты[Результаты.ВГраница()].Выгрузить();
	ТаблицаСторноДвижений		= РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД");
	
	Для Каждого СтрокаТоварыОрганизацийДляСторно Из ТоварыОрганизацийДляСторно Цикл
		
		МожноОтсторнировать = СтрокаТоварыОрганизацийДляСторно.Количество;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТоварыОрганизацийДляСторно);
		СтрокиРезервыДляСторно = РезервыДляСторно.НайтиСтроки(СтруктураПоиска);
		
		Для Каждого СтрокаРезервыДляСторно Из СтрокиРезервыДляСторно Цикл
			
			Если СтрокаРезервыДляСторно.Период < СтрокаТоварыОрганизацийДляСторно.Период Тогда
				Продолжить;
			КонецЕсли;
			
			Если МожноОтсторнировать = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоКСторнированию	= Мин(МожноОтсторнировать, СтрокаРезервыДляСторно.Количество);
			
			НоваяСтрока = ТаблицаСторноДвижений.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезервыДляСторно);
			НоваяСтрока.Период				= КонецМесяца(СтрокаРезервыДляСторно.Период);
			НоваяСтрока.ВидДвижения			= ВидДвиженияНакопления.Приход;
			НоваяСтрока.Количество			= -КоличествоКСторнированию;
			НоваяСтрока.КоличествоПоРНПТ	= -?(СтрокаРезервыДляСторно.Количество <> 0,
												?(СтрокаРезервыДляСторно.Количество - КоличествоКСторнированию = 0,
													СтрокаРезервыДляСторно.КоличествоПоРНПТ,
													КоличествоКСторнированию * СтрокаРезервыДляСторно.КоличествоПоРНПТ / СтрокаРезервыДляСторно.Количество),
												0);
			НоваяСтрока.ЭтоСторно			= Истина;
			
			РегистрыНакопления.РезервыТоваровОрганизаций.ДобавитьВНаборРезерваКорЗапись(ТаблицаСторноДвижений,
																						НоваяСтрока);
			
			СтрокаРезервыДляСторно.Количество		= СтрокаРезервыДляСторно.Количество - КоличествоКСторнированию;
			СтрокаРезервыДляСторно.КоличествоПоРНПТ	= СтрокаРезервыДляСторно.КоличествоПоРНПТ - НоваяСтрока.КоличествоПоРНПТ;
			
			МожноОтсторнировать = МожноОтсторнировать - КоличествоКСторнированию;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ВТОтборыРезервовДляСторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСформированныеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСторноРезервовПредыдущихПериодов";
	
	Запрос.Выполнить();
	
	Если ТаблицаСторноДвижений.Количество() > 0 Тогда
		ГлубинаРекурсии = 0;
		
		ДобавитьВТаблицуСторноРезервовСторноПоРасходу(ДокументОбъект,
														ТаблицаСторноДвижений,
														ТаблицаСторноДвижений,
														ГлубинаРекурсии);
	КонецЕсли;
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаСторноДвижений <> Неопределено Тогда
		ПараметрыЗаполненияВидовЗапасов.Вставить("ТаблицаСторноДвижений", ТаблицаСторноДвижений);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВТСторноРезервов.ВидДвижения КАК ВидДвижения,
		|	ВТСторноРезервов.Период КАК Период,
		|	ВТСторноРезервов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВТСторноРезервов.Организация КАК Организация,
		|	ВТСторноРезервов.ВидЗапасов КАК ВидЗапасов,
		|	ВТСторноРезервов.НомерГТД КАК НомерГТД,
		|	ВТСторноРезервов.Количество КАК Количество,
		|	ВТСторноРезервов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		|	ВТСторноРезервов.КорОрганизация КАК КорОрганизация,
		|	ВТСторноРезервов.КорВидЗапасов КАК КорВидЗапасов
		|ПОМЕСТИТЬ ВТСторноРезервов
		|ИЗ
		|	&ТаблицаСторноДвижений КАК ВТСторноРезервов";
		
		Запрос.УстановитьПараметр("ТаблицаСторноДвижений", ТаблицаСторноДвижений);
		
		Запрос.Выполнить();
	КонецЕсли;
		
КонецПроцедуры

Процедура ДобавитьВТаблицуСторноРезервовСторноПоРасходу(ДокументОбъект,
														ИсходнаяТаблицаСторноДвижений,
														РезультирующаяТаблицаСторноДвижений,
														ГлубинаРекурсии)
	
	Если ИсходнаяТаблицаСторноДвижений.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ГлубинаРекурсии = ГлубинаРекурсии + 1;
	
	Если ГлубинаРекурсии > 100 Тогда
		ТекстИсключения = НСтр("ru = 'Превышена максимальная глубина рекурсии при формировании сторно резервов по расходу. Сохраните текущее состояние информационной базы и передайте ее разработчикам программы.'");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ЗапасыСервер.ТекстЗапросаВстречныхРезервов("ВТАналитикиВстречныхРезервов", "ВТОтборыРезервов");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СформированныеРезервы.ВидДвижения КАК ВидДвижения,
	|	КОНЕЦПЕРИОДА(СформированныеРезервы.Период, МЕСЯЦ) КАК Период,
	|	СформированныеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СформированныеРезервы.Организация КАК Организация,
	|	СформированныеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	СформированныеРезервы.НомерГТД КАК НомерГТД,
	|	СформированныеРезервы.Количество КАК Количество,
	|	СформированныеРезервы.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	СформированныеРезервы.КорОрганизация КАК КорОрганизация,
	|	СформированныеРезервы.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ СформированныеРезервы
	|ИЗ
	|	&СформированныеРезервы КАК СформированныеРезервы
	|ГДЕ
	|	СформированныеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(РезультирующаяТаблицаСторноДвижений.Период, МЕСЯЦ) КАК Период,
	|	РезультирующаяТаблицаСторноДвижений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезультирующаяТаблицаСторноДвижений.Организация КАК Организация,
	|	РезультирующаяТаблицаСторноДвижений.ВидЗапасов КАК ВидЗапасов,
	|	РезультирующаяТаблицаСторноДвижений.НомерГТД КАК НомерГТД,
	|	РезультирующаяТаблицаСторноДвижений.Количество КАК Количество,
	|	РезультирующаяТаблицаСторноДвижений.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	РезультирующаяТаблицаСторноДвижений.КорОрганизация КАК КорОрганизация,
	|	РезультирующаяТаблицаСторноДвижений.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ РезультирующаяТаблицаСторноДвижений
	|ИЗ
	|	&РезультирующаяТаблицаСторноДвижений КАК РезультирующаяТаблицаСторноДвижений
	|ГДЕ
	|	РезультирующаяТаблицаСторноДвижений.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РезультирующаяТаблицаСторноДвижений.ЭтоСторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ВТИсходнаяТаблицаСторноДвижений.Период, МЕСЯЦ) КАК Период,
	|	ВТИсходнаяТаблицаСторноДвижений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТИсходнаяТаблицаСторноДвижений.Организация КАК Организация,
	|	ВТИсходнаяТаблицаСторноДвижений.ВидЗапасов КАК ВидЗапасов,
	|	ВТИсходнаяТаблицаСторноДвижений.НомерГТД КАК НомерГТД,
	|	ВТИсходнаяТаблицаСторноДвижений.Количество КАК Количество,
	|	ВТИсходнаяТаблицаСторноДвижений.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ВТИсходнаяТаблицаСторноДвижений.КорОрганизация КАК КорОрганизация,
	|	ВТИсходнаяТаблицаСторноДвижений.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ ВТИсходнаяТаблицаСторноДвижений
	|ИЗ
	|	&ИсходнаяТаблицаСторноДвижений КАК ВТИсходнаяТаблицаСторноДвижений
	|ГДЕ
	|	ВТИсходнаяТаблицаСторноДвижений.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ВТИсходнаяТаблицаСторноДвижений.ЭтоСторно
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСторноРезервовДляЗапроса.Период КАК Период,
	|	ВТСторноРезервовДляЗапроса.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТСторноРезервовДляЗапроса.Организация КАК Организация,
	|	ВТСторноРезервовДляЗапроса.ВидЗапасов КАК ВидЗапасов,
	|	ВТСторноРезервовДляЗапроса.НомерГТД КАК НомерГТД,
	|	СУММА(ВТСторноРезервовДляЗапроса.Количество) КАК Количество,
	|	СУММА(ВТСторноРезервовДляЗапроса.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	ВТСторноРезервовДляЗапроса.КорОрганизация КАК КорОрганизация,
	|	ВТСторноРезервовДляЗапроса.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ ВТСторноРезервовДляЗапроса
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТИсходнаяТаблицаСторноДвижений.Период КАК Период,
	|		ВТИсходнаяТаблицаСторноДвижений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ВТИсходнаяТаблицаСторноДвижений.Организация КАК Организация,
	|		ВТИсходнаяТаблицаСторноДвижений.ВидЗапасов КАК ВидЗапасов,
	|		ВТИсходнаяТаблицаСторноДвижений.НомерГТД КАК НомерГТД,
	|		ВТИсходнаяТаблицаСторноДвижений.Количество КАК Количество,
	|		ВТИсходнаяТаблицаСторноДвижений.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|		ВТИсходнаяТаблицаСторноДвижений.КорОрганизация КАК КорОрганизация,
	|		ВТИсходнаяТаблицаСторноДвижений.КорВидЗапасов КАК КорВидЗапасов
	|	ИЗ
	|		ВТИсходнаяТаблицаСторноДвижений КАК ВТИсходнаяТаблицаСторноДвижений
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СформированныеРезервы.Период,
	|		СформированныеРезервы.АналитикаУчетаНоменклатуры,
	|		СформированныеРезервы.Организация,
	|		СформированныеРезервы.ВидЗапасов,
	|		СформированныеРезервы.НомерГТД,
	|		СформированныеРезервы.Количество,
	|		СформированныеРезервы.КоличествоПоРНПТ,
	|		СформированныеРезервы.КорОрганизация,
	|		СформированныеРезервы.КорВидЗапасов
	|	ИЗ
	|		СформированныеРезервы КАК СформированныеРезервы) КАК ВТСторноРезервовДляЗапроса
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСторноРезервовДляЗапроса.Организация,
	|	ВТСторноРезервовДляЗапроса.ВидЗапасов,
	|	ВТСторноРезервовДляЗапроса.НомерГТД,
	|	ВТСторноРезервовДляЗапроса.АналитикаУчетаНоменклатуры,
	|	ВТСторноРезервовДляЗапроса.Период,
	|	ВТСторноРезервовДляЗапроса.КорВидЗапасов,
	|	ВТСторноРезервовДляЗапроса.КорОрганизация
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТСторноРезервовДляЗапроса.Количество) < 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСторноРезервовДляЗапроса.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВТСторноРезервовДляЗапроса.НомерГТД КАК НомерГТД,
	|	ВТСторноРезервовДляЗапроса.Количество КАК Количество,
	|	ВТСторноРезервовДляЗапроса.КорОрганизация КАК КорОрганизация,
	|	ВТСторноРезервовДляЗапроса.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ ВТОтборыРезервов
	|ИЗ
	|	ВТСторноРезервовДляЗапроса КАК ВТСторноРезервовДляЗапроса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ) КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВТПриходыРезервовДляСторнирования
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период,
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация КАК Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|		РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|		РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|		РезервыТоваровОрганизаций.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ РезервыТоваровОрганизаций.КоличествоПоРНПТ
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборыРезервов КАК ВТОтборыРезервов
	|			ПО РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры = ВТОтборыРезервов.АналитикаУчетаНоменклатуры
	|				И РезервыТоваровОрганизаций.НомерГТД = ВТОтборыРезервов.НомерГТД
	|				И РезервыТоваровОрганизаций.Организация = ВТОтборыРезервов.КорОрганизация
	|				И РезервыТоваровОрганизаций.ВидЗапасов = ВТОтборыРезервов.КорВидЗапасов
	|				И (РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ),
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД,
	|		РезервыТоваровОрганизаций.КорОрганизация,
	|		РезервыТоваровОрганизаций.КорВидЗапасов,
	|		-РезервыТоваровОрганизаций.Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ -РезервыТоваровОрганизаций.КоличествоПоРНПТ
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборыРезервов КАК ВТОтборыРезервов
	|			ПО РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры = ВТОтборыРезервов.АналитикаУчетаНоменклатуры
	|				И РезервыТоваровОрганизаций.НомерГТД = ВТОтборыРезервов.НомерГТД
	|				И РезервыТоваровОрганизаций.Организация = ВТОтборыРезервов.КорОрганизация
	|				И РезервыТоваровОрганизаций.ВидЗапасов = ВТОтборыРезервов.КорВидЗапасов
	|				И (РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(СформированныеРезервы.Период, МЕСЯЦ),
	|		СформированныеРезервы.АналитикаУчетаНоменклатуры,
	|		СформированныеРезервы.Организация,
	|		СформированныеРезервы.ВидЗапасов,
	|		СформированныеРезервы.НомерГТД,
	|		СформированныеРезервы.КорОрганизация,
	|		СформированныеРезервы.КорВидЗапасов,
	|		СформированныеРезервы.Количество,
	|		СформированныеРезервы.КоличествоПоРНПТ
	|	ИЗ
	|		СформированныеРезервы КАК СформированныеРезервы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтборыРезервов КАК ВТОтборыРезервов
	|			ПО СформированныеРезервы.АналитикаУчетаНоменклатуры = ВТОтборыРезервов.АналитикаУчетаНоменклатуры
	|				И СформированныеРезервы.НомерГТД = ВТОтборыРезервов.НомерГТД
	|				И СформированныеРезервы.Организация = ВТОтборыРезервов.КорОрганизация
	|				И СформированныеРезервы.ВидЗапасов = ВТОтборыРезервов.КорВидЗапасов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РезультирующаяТаблицаСторноДвижений.Период,
	|		РезультирующаяТаблицаСторноДвижений.АналитикаУчетаНоменклатуры,
	|		РезультирующаяТаблицаСторноДвижений.Организация,
	|		РезультирующаяТаблицаСторноДвижений.ВидЗапасов,
	|		РезультирующаяТаблицаСторноДвижений.НомерГТД,
	|		РезультирующаяТаблицаСторноДвижений.КорОрганизация,
	|		РезультирующаяТаблицаСторноДвижений.КорВидЗапасов,
	|		РезультирующаяТаблицаСторноДвижений.Количество,
	|		РезультирующаяТаблицаСторноДвижений.КоличествоПоРНПТ
	|	ИЗ
	|		РезультирующаяТаблицаСторноДвижений КАК РезультирующаяТаблицаСторноДвижений) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.КорОрганизация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.КорВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РезервыТоваровОрганизаций.Период КАК Период,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.Организация КАК Организация,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|	РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|	РезервыТоваровОрганизаций.Количество КАК Количество,
	|	РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ВТСторноРезервовДляЗапроса.Период КАК ПериодСторноРезерва,
	|	-ВТСторноРезервовДляЗапроса.Количество КАК КоличествоКРаспределению,
	|	-ВТСторноРезервовДляЗапроса.КоличествоПоРНПТ КАК КоличествоПоРНПТКРаспределению
	|ИЗ
	|	ВТПриходыРезервовДляСторнирования КАК РезервыТоваровОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСторноРезервовДляЗапроса КАК ВТСторноРезервовДляЗапроса
	|		ПО РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры = ВТСторноРезервовДляЗапроса.АналитикаУчетаНоменклатуры
	|			И РезервыТоваровОрганизаций.НомерГТД = ВТСторноРезервовДляЗапроса.НомерГТД
	|			И РезервыТоваровОрганизаций.Организация = ВТСторноРезервовДляЗапроса.КорОрганизация
	|			И РезервыТоваровОрганизаций.ВидЗапасов = ВТСторноРезервовДляЗапроса.КорВидЗапасов
	|			И РезервыТоваровОрганизаций.Период >= ВТСторноРезервовДляЗапроса.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД,
	|	Организация,
	|	ВидЗапасов,
	|	ПериодСторноРезерва,
	|	Период,
	|	КорОрганизация,
	|	КорВидЗапасов";
	
	Запрос.УстановитьПараметр("ИсходнаяТаблицаСторноДвижений", ИсходнаяТаблицаСторноДвижений);
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") Тогда
		СформированныеРезервы = ДокументОбъект.ДополнительныеСвойства.ТаблицаРезервыТоваровОрганизаций.Скопировать();
	Иначе
		СформированныеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СформированныеРезервы", СформированныеРезервы);
	Запрос.УстановитьПараметр("РезультирующаяТаблицаСторноДвижений", РезультирующаяТаблицаСторноДвижений);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ТекущаяАналитика		= Неопределено;
	ТекущийНомерГТД			= Неопределено;
	ТекущаяОрганизация		= Неопределено;
	ТекущийВидЗапасов		= Неопределено;
	РаспределенноеСторно	= Новый Соответствие;
	ЗачтенныеРезервы		= Новый Соответствие;
	СторноРасходаРезерваДляРаспределения = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаСторноДвижений = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	
	Пока Выборка.Следующий() Цикл
		
		СторноРасходаРезерваДляРаспределения = Выборка.КоличествоКРаспределению;
		
		Если ТекущаяАналитика <> Выборка.АналитикаУчетаНоменклатуры
			Или ТекущийНомерГТД <> Выборка.НомерГТД
			Или ТекущаяОрганизация <> Выборка.Организация
			Или ТекущийВидЗапасов <> Выборка.ВидЗапасов Тогда
			
			ТекущаяАналитика		= Выборка.АналитикаУчетаНоменклатуры;
			ТекущийНомерГТД			= Выборка.НомерГТД;
			ТекущаяОрганизация		= Выборка.Организация;
			ТекущийВидЗапасов		= Выборка.ВидЗапасов;
			РаспределенноеСторно	= Новый Соответствие;
			ЗачтенныеРезервы		= Новый Соответствие;
			
		ИначеЕсли СторноРасходаРезерваДляРаспределения = РаспределенноеСторно.Получить(Выборка.ПериодСторноРезерва) Тогда
			Продолжить;
		КонецЕсли;
		
		РаспределенноеВПериодеСторно = РаспределенноеСторно.Получить(Выборка.ПериодСторноРезерва);
		
		Если РаспределенноеВПериодеСторно = Неопределено Тогда
			РаспределенноеКоличество = Новый Структура("Количество, КоличествоПоРНПТ", 0, 0);
			РаспределенноеСторно.Вставить(Выборка.ПериодСторноРезерва, РаспределенноеКоличество);
			
			РаспределенноеВПериодеСторно = 0;
			РаспределенноеВПериодеСторноПоРНПТ = 0;
		КонецЕсли;
		
		КлючПоискаЗачтенногоРезерва = КлючПоискаЗачтенногоРезерва(Выборка.Период,
																	Выборка.КорОрганизация,
																	Выборка.КорВидЗапасов);
		
		ЗачтенныйВПериодеРезерв = ЗачтенныеРезервы.Получить(КлючПоискаЗачтенногоРезерва);
		
		Если ЗачтенныйВПериодеРезерв = Неопределено Тогда
			ЗачтенноеКоличество = Новый Структура("Количество, КоличествоПоРНПТ", 0, 0);
			ЗачтенныеРезервы.Вставить(КлючПоискаЗачтенногоРезерва, ЗачтенноеКоличество);
			
			ЗачтенныйВПериодеРезерв = 0;
			ЗачтенныйВПериодеРезервПоРНПТ = 0;
		КонецЕсли;
		
		КоличествоКСторнированию		= Мин(СторноРасходаРезерваДляРаспределения - РаспределенноеВПериодеСторно,
										Выборка.Количество - ЗачтенныйВПериодеРезерв);
		КоличествоПоРНПТКСторнированию	= Мин(Выборка.КоличествоПоРНПТКРаспределению - РаспределенноеВПериодеСторноПоРНПТ,
												Выборка.КоличествоПоРНПТ - ЗачтенныйВПериодеРезервПоРНПТ);
		
		НоваяСтрока = ТаблицаСторноДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.Период				= Выборка.Период;
		НоваяСтрока.ВидДвижения			= ВидДвиженияНакопления.Приход;
		НоваяСтрока.Количество			= -КоличествоКСторнированию;
		НоваяСтрока.КоличествоПоРНПТ	= -КоличествоПоРНПТКСторнированию;
		НоваяСтрока.ЭтоСторно			= Истина;
		
		РегистрыНакопления.РезервыТоваровОрганизаций.ДобавитьВНаборРезерваКорЗапись(ТаблицаСторноДвижений, НоваяСтрока);
		
		РаспределенноеСторно[Выборка.ПериодСторноРезерва].Количество		= КоличествоКСторнированию
																				+ РаспределенноеСторно[Выборка.ПериодСторноРезерва].Количество;
		РаспределенноеСторно[Выборка.ПериодСторноРезерва].КоличествоПоРНПТ	= КоличествоКСторнированию
																				+ РаспределенноеСторно[Выборка.ПериодСторноРезерва].КоличествоПоРНПТ;
		
		ЗачтенныеРезервы[КлючПоискаЗачтенногоРезерва].Количество		= КоличествоКСторнированию
																			+ ЗачтенныеРезервы[КлючПоискаЗачтенногоРезерва].Количество;
		ЗачтенныеРезервы[КлючПоискаЗачтенногоРезерва].КоличествоПоРНПТ	= КоличествоПоРНПТКСторнированию
																			+ ЗачтенныеРезервы[КлючПоискаЗачтенногоРезерва].КоличествоПоРНПТ;
		
	КонецЦикла;
	
	Если ТаблицаСторноДвижений.Количество() > 0 Тогда
		ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(РезультирующаяТаблицаСторноДвижений, ТаблицаСторноДвижений);
		
		ДобавитьВТаблицуСторноРезервовСторноПоРасходу(ДокументОбъект,
														ТаблицаСторноДвижений,
														РезультирующаяТаблицаСторноДвижений,
														ГлубинаРекурсии);
	КонецЕсли;
	
КонецПроцедуры

Функция КлючПоискаЗачтенногоРезерва(Период, КорОрганизация, КорВидЗапасов)
	
	Возврат Строка(Период) + Строка(КорОрганизация.УникальныйИдентификатор()) + Строка(КорВидЗапасов.УникальныйИдентификатор());
	
КонецФункции

Функция ТаблицаРезервыТоваровОрганизаций(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											ПередЗаписьюДокумента)
	
	ТекстЗапроса = 	
	"ВЫБРАТЬ
	|	СформированныеРезервы.ВидДвижения КАК ВидДвижения,
	|	СформированныеРезервы.Период КАК Период,
	|	СформированныеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СформированныеРезервы.Организация КАК Организация,
	|	СформированныеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	СформированныеРезервы.НомерГТД КАК НомерГТД,
	|	СформированныеРезервы.Количество КАК Количество,
	|	СформированныеРезервы.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	СформированныеРезервы.КорОрганизация КАК КорОрганизация,
	|	СформированныеРезервы.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ СформированныеРезервы
	|ИЗ
	|	&СформированныеРезервы КАК СформированныеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.ВидДвижения КАК ВидДвижения,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА СУММА(ВложенныйЗапрос.Количество) < 0
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоСторно,
	|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения,
	|		КОНЕЦПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ) КАК Период,
	|		ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаНовыеРезервы.Организация КАК Организация,
	|		ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|		ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|		ТаблицаНовыеРезервы.Количество КАК Количество,
	|		ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|		ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
	|		ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов
	|	ИЗ
	|		ВТНовыеРезервы КАК ТаблицаНовыеРезервы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТаблицаСторно.ВидДвижения,
	|		КОНЕЦПЕРИОДА(ТаблицаСторно.Период, МЕСЯЦ),
	|		ТаблицаСторно.АналитикаУчетаНоменклатуры,
	|		ТаблицаСторно.Организация,
	|		ТаблицаСторно.ВидЗапасов,
	|		ТаблицаСторно.НомерГТД,
	|		ТаблицаСторно.Количество,
	|		ТаблицаСторно.КоличествоПоРНПТ,
	|		ТаблицаСторно.КорОрганизация,
	|		ТаблицаСторно.КорВидЗапасов
	|	ИЗ
	|		ВТСторноРезервов КАК ТаблицаСторно
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		РезервыПоОрганизациямДляКонтроля.ВидДвижения,
	|		КОНЕЦПЕРИОДА(РезервыПоОрганизациямДляКонтроля.Период, МЕСЯЦ),
	|		РезервыПоОрганизациямДляКонтроля.АналитикаУчетаНоменклатуры,
	|		РезервыПоОрганизациямДляКонтроля.Организация,
	|		РезервыПоОрганизациямДляКонтроля.ВидЗапасов,
	|		РезервыПоОрганизациямДляКонтроля.НомерГТД,
	|		РезервыПоОрганизациямДляКонтроля.Количество,
	|		РезервыПоОрганизациямДляКонтроля.КоличествоПоРНПТ,
	|		РезервыПоОрганизациямДляКонтроля.КорОрганизация,
	|		РезервыПоОрганизациямДляКонтроля.КорВидЗапасов
	|	ИЗ
	|		ВТРезервыПоОрганизациямДляКонтроля КАК РезервыПоОрганизациямДляКонтроля
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СформированныеРезервы.ВидДвижения,
	|		КОНЕЦПЕРИОДА(СформированныеРезервы.Период, МЕСЯЦ),
	|		СформированныеРезервы.АналитикаУчетаНоменклатуры,
	|		СформированныеРезервы.Организация,
	|		СформированныеРезервы.ВидЗапасов,
	|		СформированныеРезервы.НомерГТД,
	|		СформированныеРезервы.Количество,
	|		СформированныеРезервы.КоличествоПоРНПТ,
	|		СформированныеРезервы.КорОрганизация,
	|		СформированныеРезервы.КорВидЗапасов
	|	ИЗ
	|		СформированныеРезервы КАК СформированныеРезервы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.ВидДвижения,
	|		КОНЕЦПЕРИОДА(ДвиженияРезервыТоварыОрганизацийПередЗаписью.Период, МЕСЯЦ),
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.АналитикаУчетаНоменклатуры,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.Организация,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.ВидЗапасов,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.НомерГТД,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ДвиженияРезервыТоварыОрганизацийПередЗаписью.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ДвиженияРезервыТоварыОрганизацийПередЗаписью.КоличествоПоРНПТ
	|		КОНЕЦ,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.КорОрганизация,
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.КорВидЗапасов
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК ДвиженияРезервыТоварыОрганизацийПередЗаписью
	|	ГДЕ
	|		ДвиженияРезервыТоварыОрганизацийПередЗаписью.Регистратор = &Ссылка
	|		И &ПрибавлятьДвиженияРезервыПередЗаписью) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов,
	|	ВложенныйЗапрос.ВидДвижения,
	|	ВложенныйЗапрос.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТНовыеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСторноРезервов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРезервыПоОрганизациямДляКонтроля
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СформированныеРезервы";
	
	ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц,
											"ВТНовыеРезервы, ВТСторноРезервов, ВТРезервыПоОрганизациямДляКонтроля");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") Тогда
		СформированныеРезервы = ДокументОбъект.ДополнительныеСвойства.ТаблицаРезервыТоваровОрганизаций.Скопировать();
	Иначе
		СформированныеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СформированныеРезервы", СформированныеРезервы);
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПрибавлятьДвиженияРезервыПередЗаписью",
								// Резервы записываются вместе с остальными регистрами.
								Не ПараметрыЗаполненияВидовЗапасов.ДокументДелаетИПриходИРасход
								// Резервы записываются отдельно после формирования таблица резервов в обработке проведения.
								Или ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций")
									И Не ПередЗаписьюДокумента);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	РезультатТаблицаРезервы = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатТаблицаРезервы;
	
КонецФункции

Процедура ПроверитьНаличиеВременныхТаблицРезервов(МенеджерВременныхТаблиц, ИменаТаблиц)
	
	МассивИмен = СтрРазделить(ИменаТаблиц, ",");
	
	ТекстыЗапроса = Новый Массив;
	
	Для Каждого СтрМас Из МассивИмен Цикл
		СтрМас = СокрЛП(СтрМас);
		
		Если МенеджерВременныхТаблиц.Таблицы.Найти(СтрМас) = Неопределено Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	НоваяТаблица.Период,
			|	НоваяТаблица.ВидДвижения,
			|	НоваяТаблица.АналитикаУчетаНоменклатуры,
			|	НоваяТаблица.Организация,
			|	НоваяТаблица.ВидЗапасов,
			|	НоваяТаблица.НомерГТД,
			|	НоваяТаблица.Количество,
			|	НоваяТаблица.КоличествоПоРНПТ,
			|	НоваяТаблица.КорОрганизация,
			|	НоваяТаблица.КорВидЗапасов
			|ПОМЕСТИТЬ ИмяТаблицы
			|ИЗ
			|	&ПустаяТаблица КАК НоваяТаблица";
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяТаблицы", СтрМас);
			
			ТекстыЗапроса.Добавить(ТекстЗапроса);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТекстыЗапроса.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ПустаяТаблица",
								РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки());
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура УстановитьДопСвойстваКонтролироватьОстаткиИФормироватьСторно(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов, МенеджерВременныхТаблиц)
	
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства; 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТТоварыОрганизацийИзменения.Период,
	|	ВТТоварыОрганизацийИзменения.Организация
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляКонтроляОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТТоварыОрганизацийИзменения.Период,
	|	ВТТоварыОрганизацийИзменения.Организация
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляСторноРезерва";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	НужноКонтролироватьОстатки = НЕ Результаты[0].Пустой();
	НужноФормироватьСторно     = НЕ Результаты[1].Пустой();
	
	ДополнительныеСвойства.Вставить("НужноКонтролироватьОстаткиТоваровОрганизаций", НужноКонтролироватьОстатки);
	
	Если Не НужноКонтролироватьОстатки Тогда
		ПараметрыЗаполненияВидовЗапасов.КоличествоПериодовПриФормированииРезервовОрганизаций = 0;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("НужноФормироватьСторноПоРезервамТоваровОрганизаций", НужноФормироватьСторно);
	
КонецПроцедуры

Процедура СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	ТекстЗапроса = "";
	
	Если РасчетСебестоимостиПрикладныеАлгоритмы.ВременнаяТаблицаСуществует(МенеджерВременныхТаблиц, "ТаблицаРеквизитовВидовЗапасовПоУмолчанию") Тогда
		ТекстЗапроса =
		"УНИЧТОЖИТЬ ТаблицаРеквизитовВидовЗапасовПоУмолчанию
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса +
	"ВЫБРАТЬ
	|	ВидыЗапасовПоУмолчанию.НомерСтроки		КАК НомерСтроки,
	|	ВидыЗапасовПоУмолчанию.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасовПоУмолчанию.Организация		КАК Организация,
	|	ВидыЗапасовПоУмолчанию.ВидЗапасов		КАК ВидЗапасов,
	|	ВидыЗапасовПоУмолчанию.НомерГТД			КАК НомерГТД,
	|	ВидыЗапасовПоУмолчанию.ВладелецТовара	КАК ВладелецТовара,
	|	ВидыЗапасовПоУмолчанию.Контрагент		КАК Контрагент,
	|	ВидыЗапасовПоУмолчанию.Договор			КАК Договор,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасов		КАК ТипЗапасов,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасовРезервы КАК ТипЗапасовРезервы
	|ПОМЕСТИТЬ ТаблицаРеквизитовВидовЗапасовПоУмолчанию
	|ИЗ
	|	&ТаблицаРеквизитовВидовЗапасовПоУмолчанию КАК ВидыЗапасовПоУмолчанию
	|";
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаРеквизитовВидовЗапасовПоУмолчанию",
								ПараметрыЗаполненияВидовЗапасов.ТаблицаРеквизитовВидовЗапасовПоУмолчанию);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьВтОтборыОстатковПоТаблицеТоваров(МенеджерВременныхТаблиц,
														ДобавлятьАналитикиИзДвиженийПередЗаписью,
														ПодбиратьЗапасыРазныхПериодов = Ложь)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Отборы.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	Отборы.Номенклатура					КАК Номенклатура,
	|	Отборы.Характеристика				КАК Характеристика,
	|	Отборы.Серия						КАК Серия,
	|	Отборы.Назначение					КАК Назначение,
	|	Отборы.Склад						КАК Склад,
	|	Отборы.Организация					КАК Организация,
	|	Отборы.ВидЗапасов					КАК ВидЗапасов,
	|	Отборы.НомерГТД						КАК НомерГТД
	|ПОМЕСТИТЬ ВтОтборыОстатковОрганизаций
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.НомерГТД										КАК НомерГТД,
	|		Товары.АналитикаУчетаНоменклатуры.Номенклатура		КАК Номенклатура,
	|		Товары.АналитикаУчетаНоменклатуры.Характеристика	КАК Характеристика,
	|		Товары.АналитикаУчетаНоменклатуры.Серия				КАК Серия,
	|		Товары.АналитикаУчетаНоменклатуры.Назначение		КАК Назначение,
	|		Товары.АналитикаУчетаНоменклатуры.МестоХранения		КАК Склад,
	|		ВидыЗапасов.ДляОрганизации							КАК Организация,
	|		ВидыЗапасов.ВидЗапасов								КАК ВидЗапасов
	|	ИЗ
	|		ТаблицаТоваров КАК Товары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ВидыЗапасов
	|			ПО ИСТИНА
	|	
	|	ГДЕ
	|		Товары.АналитикаУчетаНоменклатуры.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|																			ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|	
	|	//%ТекстАналитикиИзДвиженийПередЗаписью%
	|	
	|	) КАК Отборы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	Организация";
	
	Если ПодбиратьЗапасыРазныхПериодов Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТаблицаТоваров", "ТаблицаТоваровПоПериодам");
	КонецЕсли;
	
	Если ДобавлятьАналитикиИзДвиженийПередЗаписью Тогда
		
		ТекстАналитикиИзДвиженийПередЗаписью = ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() + 
		"ВЫБРАТЬ
		|	ТоварыПередЗаписью.АналитикаУчетаНоменклатуры					КАК АналитикаУчетаНоменклатуры,
		|	ТоварыПередЗаписью.НомерГТД										КАК НомерГТД,
		|	ТоварыПередЗаписью.АналитикаУчетаНоменклатуры.Номенклатура		КАК Номенклатура,
		|	ТоварыПередЗаписью.АналитикаУчетаНоменклатуры.Характеристика	КАК Характеристика,
		|	ТоварыПередЗаписью.АналитикаУчетаНоменклатуры.Серия				КАК Серия,
		|	ТоварыПередЗаписью.АналитикаУчетаНоменклатуры.Назначение		КАК Назначение,
		|	ТоварыПередЗаписью.АналитикаУчетаНоменклатуры.МестоХранения		КАК Склад,
		|	ТоварыПередЗаписью.Организация									КАК Организация,
		|	ТоварыПередЗаписью.ВидЗапасов									КАК ВидЗапасов
		|ИЗ
		|	ДвиженияТоварыОрганизацийПередЗаписью КАК ТоварыПередЗаписью
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
		|		ПО ТоварыПередЗаписью.Организация = ДоступныеВидыЗапасов.ДляОрганизации
		|			И ТоварыПередЗаписью.ВидЗапасов = ДоступныеВидыЗапасов.ВидЗапасов";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"//%ТекстАналитикиИзДвиженийПередЗаписью%",
									ТекстАналитикиИзДвиженийПередЗаписью);
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьВтОтборыОстатковПоТаблицеИзменений(МенеджерВременныхТаблиц)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийИзменения.НомерГТД КАК НомерГТД,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
	|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение,
	|	КлючиАналитикиУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ВидыЗапасов.ДляОрганизации КАК Организация,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ ВтОтборыОстатковОрганизаций
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ТоварыОрганизацийИзменения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ВидыЗапасов
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ТоварыОрганизацийИзменения.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО КлючиАналитикиУчетаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
	|ГДЕ
	|	СпрНоменклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	Организация";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Метод заполняет в ТЧ ВидыЗапасов документов "Отчет по комиссии между организациями"
// и "Отчет по комиссии между организациями (о списании)" поля ВидЗапасовКомитента и НомерГТД.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором производится заполнение.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Используется ВТ ДоступныеВидыЗапасов.
//	ПараметрыЗаполненияВидовЗапасов - Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов.
//
Процедура ДозаполнитьВидыЗапасовВОтчетахПоКомиссииИнтеркампани(ДокументОбъект,
	МенеджерВременныхТаблиц,
	Отказ,
	ПараметрыЗаполненияВидовЗапасов)
	
	Если ДокументОбъект.ВидыЗапасов.Найти(Справочники.ВидыЗапасов.ПустаяСсылка(), "ВидЗапасовКомитента") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаОстатков") <> Неопределено Тогда
		Запрос = Новый Запрос("УНИЧТОЖИТЬ ТаблицаОстатков");
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Выполнить();
	КонецЕсли;
	
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") Тогда
		ЭтоОтчетОПродажах = Истина;
	Иначе
		ЭтоОтчетОПродажах = Ложь;
	КонецЕсли;
	
	СформироватьВТТаблицаОстатков("ТоварыПереданныеНаКомиссию", ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);  
		
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Запасы.АналитикаУчетаНоменклатуры,
	|	Запасы.НомерГТД
	|ПОМЕСТИТЬ Запасы
	|ИЗ
	|	&ВидыЗапасов КАК Запасы
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Запасы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Запасы.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ОтборОстатков
	|ИЗ
	|	Запасы КАК Запасы
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаКомиссионера.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	Остатки.ВидЗапасов                  КАК ВидЗапасовКомитента,
	|	Остатки.НомерГТД                    КАК НомерГТД,
	|	ВЫБОР КОГДА Остатки.КоличествоОстаток < 0 
	|		ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ                               КАК Знак,
	|	ВЫБОР КОГДА Остатки.КоличествоОстаток < 0 
	|		ТОГДА 0 - Остатки.КоличествоОстаток
	|		ИНАЧЕ Остатки.КоличествоОстаток
	|	КОНЕЦ                               КАК Количество
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|	ПО Остатки.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|	ПО Аналитика.Номенклатура = АналитикаКомиссионера.Номенклатура
	|		И Аналитика.Характеристика = АналитикаКомиссионера.Характеристика
	|		И Аналитика.Серия = АналитикаКомиссионера.Серия
	|		И АналитикаКомиссионера.МестоХранения = &Организация
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОтборОстатков КАК Отбор
	|	ПО АналитикаКомиссионера.КлючАналитики = Отбор.АналитикаУчетаНоменклатуры
	|		И Остатки.НомерГТД = Отбор.НомерГТД
	|ГДЕ
	|	НЕ Остатки.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Остатки.НомерГТД,
	|	Остатки.КоличествоОстаток ВОЗР
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("ВидыЗапасов", ДокументОбъект.ВидыЗапасов.Выгрузить());
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	// Временная таблица "Запасы" - МассивРезультатов[0]
	// Временная таблица "ОтборОстатков" - МассивРезультатов[1].
	ТаблицаОстатков = МассивРезультатов[2].Выгрузить();
	
	ДокументОбъект.ВидыЗапасов.Сортировать("АналитикаУчетаНоменклатуры, НомерГТД, Количество ВОЗР");
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, НомерГТД, ВидЗапасовКомитента");
	Для Каждого СтрокаОстатка Из ТаблицаОстатков Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаОстатка);
		СтруктураПоиска.ВидЗапасовКомитента = Справочники.ВидыЗапасов.ПустаяСсылка();
		Для Каждого СтрокаЗапасов Из ДокументОбъект.ВидыЗапасов.НайтиСтроки(СтруктураПоиска) Цикл
			Если СтрокаЗапасов.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			Количество = ?(СтрокаЗапасов.Количество < 0, -СтрокаЗапасов.Количество, СтрокаЗапасов.Количество);
			Знак = ?(СтрокаЗапасов.Количество < 0, -1, 1);
			Если СтрокаОстатка.Количество >= Количество ИЛИ (СтрокаОстатка.Знак <> Знак) Тогда
				СтрокаЗапасов.ВидЗапасовКомитента = СтрокаОстатка.ВидЗапасовКомитента;
				Если СтрокаОстатка.Знак = Знак Тогда
					СтрокаОстатка.Количество = СтрокаОстатка.Количество - Количество;
				Иначе
					СтрокаОстатка.Количество = СтрокаОстатка.Количество + Количество;
				КонецЕсли;
				
			ИначеЕсли СтрокаОстатка.Количество < Количество Тогда
				НоваяСтрока = ДокументОбъект.ВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗапасов);
				НоваяСтрока.ВидЗапасовКомитента = СтрокаОстатка.ВидЗапасовКомитента;
				НоваяСтрока.СуммаСНДС = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаСНДС / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
				НоваяСтрока.СуммаНДС = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаНДС / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
				
				Если ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаВознаграждения = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаВознаграждения / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
					НоваяСтрока.СуммаНДСВознаграждения = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.СуммаНДСВознаграждения / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
				КонецЕсли;
				
				НоваяСтрока.КоличествоУпаковок = Окр(СтрокаОстатка.Количество * СтрокаЗапасов.КоличествоУпаковок / СтрокаЗапасов.Количество, 2, 1) * СтрокаОстатка.Знак;
				НоваяСтрока.Количество = СтрокаОстатка.Количество * СтрокаОстатка.Знак;
				
				СтрокаЗапасов.СуммаСНДС = СтрокаЗапасов.СуммаСНДС - НоваяСтрока.СуммаСНДС;
				СтрокаЗапасов.СуммаНДС = СтрокаЗапасов.СуммаНДС - НоваяСтрока.СуммаНДС;
				
				Если ЭтоОтчетОПродажах Тогда
					СтрокаЗапасов.СуммаВознаграждения = СтрокаЗапасов.СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения;
					СтрокаЗапасов.СуммаНДСВознаграждения = СтрокаЗапасов.СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения;
				КонецЕсли;
				
				СтрокаЗапасов.КоличествоУпаковок = СтрокаЗапасов.КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок;
				СтрокаЗапасов.Количество = СтрокаЗапасов.Количество - НоваяСтрока.Количество;
				
				СтрокаОстатка.Количество = 0;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	МассивУдаляемыхСтрок = ДокументОбъект.ВидыЗапасов.НайтиСтроки(Новый Структура("Количество", 0));
	Для Каждого СтрокаТаблицы Из МассивУдаляемыхСтрок Цикл
		ДокументОбъект.ВидыЗапасов.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
	СтрокиСПустымВидомЗапасовКомитента = ДокументОбъект.ВидыЗапасов.НайтиСтроки(Новый Структура("ВидЗапасовКомитента", Справочники.ВидыЗапасов.ПустаяСсылка()));
	Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения 
		И ЗначениеЗаполнено(СтрокиСПустымВидомЗапасовКомитента) Тогда
		
		Отказ = Истина;
		
		Для Каждого СтрокаТаблицы Из СтрокиСПустымВидомЗапасовКомитента Цикл
			
			Если СтрокаТаблицы.Количество <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'По комитенту %Комитент% не хватает %Количество% %ЕдиницаИзмерения% товара %ПредставлениеНоменклатуры%, реализованного комиссионером %Комиссионер%'"); 
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комитент%", ДокументОбъект.Организация);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комиссионер%", ДокументОбъект.Комиссионер);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%",
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.АналитикаУчетаНоменклатуры.Номенклатура, СтрокаТаблицы.АналитикаУчетаНоменклатуры.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СтрокаТаблицы.Количество);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СтрокаТаблицы.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			КонецЕсли;
			
			Если ЭтоОтчетОПродажах И СтрокаТаблицы.СуммаСНДС <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'Товар: %ПредставлениеНоменклатуры% Сумма продажи превышает сумму реализованного товара комиссионером на %Сумма% %Валюта%'"); 
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%",
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.АналитикаУчетаНоменклатуры.Номенклатура, СтрокаТаблицы.АналитикаУчетаНоменклатуры.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%", СтрокаТаблицы.СуммаСНДС);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", ДокументОбъект.Валюта);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет табличную часть "Виды запасов" документов "Отчет по комиссии между организациями" и "Отчет по
// комиссии между организациями о списании".
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - требуется временные таблицы:
//		ТаблицаТоваров, ТаблицаДанныхДокумента, ТаблицаВидыЗапасов, ТаблицаОстатков
//	ДополнительныеСвойства - Дополнительные свойства документа
//	ВидыЗапасов - ТабличнаяЧасть - Табличная часть "Виды запасов" документа
//	ТаблицаОшибок - ТаблицаЗначений - Таблица для отражения ошибок при заполнении видов запасов
//	Отказ - Булево - Признак отказа от записи документа
//  ЗначенияПоУмолчанию - Структура - Содержит в себе перечень необходимых полей для генерации вида запасов.
Процедура ЗаполнитьВидыЗапасовПоТаблицеОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов)
	
	ТаблицаОшибок          = ТаблицаОшибокЗаполненияВидовЗапасов();
	ДополнительныеСвойства = ДокументОбъект.ДополнительныеСвойства;
	
	ТаблицаВидыЗапасов = ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].ВыгрузитьКолонки();
	
	ВидЗапасовПоУмолчанию = Неопределено;
	
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") Тогда
		ЭтоОтчетОПродажах = Истина;
	Иначе
		ЭтоОтчетОПродажах = Ложь;
	КонецЕсли;
	
	ПерезаполнитьВидыЗапасов = ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДополнительныеСвойства);
	Если Не ПерезаполнитьВидыЗапасов Тогда
		КонтролироватьОстаткиТоваровОрганизаций = ПолучитьФункциональнуюОпцию("КонтролироватьОстаткиТоваровОрганизаций");
	Иначе
		КонтролироватьОстаткиТоваровОрганизаций = Ложь;
	КонецЕсли;
	
	СтруктураВидаЗапасовПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|Поставщик,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалогообложениеНДС,
		|НалогообложениеОрганизации,
		|Организация
		|");
	
	СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета		= Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.Поставщик					= ДокументОбъект.Организация;
	СтруктураВидаЗапасовПоУмолчанию.Контрагент					= Неопределено;
	СтруктураВидаЗапасовПоУмолчанию.Соглашение					= Неопределено;
	СтруктураВидаЗапасовПоУмолчанию.Договор						= Неопределено;
	СтруктураВидаЗапасовПоУмолчанию.Валюта						= ДокументОбъект.Валюта;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС			= ДокументОбъект.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеОрганизации	= ДокументОбъект.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.Организация					= ДокументОбъект.Организация;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Остатки.ВидЗапасов                 КАК ВидЗапасов,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.НомерГТД                   КАК НомерГТД,
	|	Остатки.ДатаСчетаФактуры           КАК ДатаСчетаФактурыКомиссионера,
	|	Остатки.Покупатель                 КАК Покупатель,
	|	ЕСТЬNULL(Остатки.СчетФактура, НЕОПРЕДЕЛЕНО) КАК СчетФактураВыставленныйКомиссионера,
	|	Остатки.Знак                       КАК Знак,
	|	СУММА(ВЫБОР КОГДА Остатки.Количество < 0
	|		ТОГДА 0 - Остатки.Количество
	|		ИНАЧЕ Остатки.Количество
	|	КОНЕЦ)                              КАК Количество,
	|	СУММА(ВЫБОР КОГДА Остатки.Количество < 0
	|		ТОГДА 0 - Остатки.СуммаВыручки
	|		ИНАЧЕ Остатки.СуммаВыручки
	|	КОНЕЦ)                              КАК СуммаВыручки
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Покупатель,
	|	Остатки.Знак,
	|	Остатки.ВидЗапасов,
	|	ЕСТЬNULL(Остатки.СчетФактура, НЕОПРЕДЕЛЕНО),
	|	Остатки.АналитикаУчетаНоменклатуры,
	|	Остатки.НомерГТД,
	|	Остатки.ДатаСчетаФактуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ДатаСчетаФактурыКомиссионера,
	|	Покупатель,
	|	НомерГТД,
	|	Количество УБЫВ,
	|	Знак УБЫВ
	|;
	|//////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.АналитикаУчетаНоменклатуры          КАК АналитикаУчетаНоменклатуры,
	|	Товары.Упаковка                            КАК Упаковка,
	|	Товары.ДатаСчетаФактурыКомиссионера        КАК ДатаСчетаФактурыКомиссионера,
	|	Товары.СчетФактураВыставленныйКомиссионера КАК СчетФактураВыставленныйКомиссионера,
	|	Товары.Покупатель                          КАК Покупатель,
	|	ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ                                      КАК Знак,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.Количество
	|		ИНАЧЕ Товары.Количество
	|	КОНЕЦ)                                     КАК Количество,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.КоличествоУпаковок
	|		ИНАЧЕ Товары.КоличествоУпаковок
	|	КОНЕЦ)                                     КАК КоличествоУпаковок,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаСНДС
	|		ИНАЧЕ Товары.СуммаСНДС
	|	КОНЕЦ)                                     КАК СуммаСНДС,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаВознаграждения
	|		ИНАЧЕ Товары.СуммаВознаграждения
	|	КОНЕЦ)                                     КАК СуммаВознаграждения,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаНДСВознаграждения
	|		ИНАЧЕ Товары.СуммаНДСВознаграждения
	|	КОНЕЦ)                                     КАК СуммаНДСВознаграждения,
	|	СУММА(ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА 0 - Товары.СуммаНДС
	|		ИНАЧЕ Товары.СуммаНДС
	|	КОНЕЦ)                                     КАК СуммаНДС,
	|	Товары.СтавкаНДС                           КАК СтавкаНДС,
	|	Товары.Склад                               КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ВЫБОР 
	|		КОГДА &ИспользоватьГруппыФинУчета
	|		ТОГДА ЕСТЬNULL(Товары.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ                                      КАК ГруппаФинансовогоУчета,
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения       КАК ЕдиницаИзмерения,
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура                        КАК Номенклатура,
	|	Товары.АналитикаУчетаНоменклатуры.Серия                               КАК Серия
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|
	|СГРУППИРОВАТЬ ПО 
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.Упаковка,
	|	Товары.ДатаСчетаФактурыКомиссионера,
	|	Товары.СчетФактураВыставленныйКомиссионера,
	|	Товары.Покупатель,
	|	Товары.СтавкаНДС,
	|	Товары.Склад,
	|	Товары.Назначение,
	|	ВЫБОР 
	|		КОГДА &ИспользоватьГруппыФинУчета
	|		ТОГДА ЕСТЬNULL(Товары.Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура.ЕдиницаИзмерения,
	|	ВЫБОР КОГДА Товары.Количество < 0
	|		ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ,
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура,
	|	Товары.АналитикаУчетаНоменклатуры.Серия
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ДатаСчетаФактурыКомиссионера,
	|	Покупатель,
	|	Количество УБЫВ,
	|	Знак УБЫВ
	|");
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинУчета", ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Результат = Запрос.ВыполнитьПакет();
	Остатки = Результат[0].Выгрузить();
	ВыборкаТовары = Результат[1].Выбрать();
	
	СтруктураПоиска = Новый Структура("АналитикаУчетаНоменклатуры, Покупатель, СчетФактураВыставленныйКомиссионера, Знак");
	Пока ВыборкаТовары.Следующий() Цикл
		Количество = ВыборкаТовары.Количество;
		СуммаСНДС = ВыборкаТовары.СуммаСНДС;
		СуммаНДС = ВыборкаТовары.СуммаНДС;
		СуммаВознаграждения = ВыборкаТовары.СуммаВознаграждения;
		СуммаНДСВознаграждения = ВыборкаТовары.СуммаНДСВознаграждения;
		КоличествоУпаковок = ВыборкаТовары.КоличествоУпаковок;

		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаТовары);
		Если Не ЗначениеЗаполнено(СтруктураПоиска.СчетФактураВыставленныйКомиссионера) Тогда
			СтруктураПоиска.СчетФактураВыставленныйКомиссионера = Неопределено;
		КонецЕсли;
		Для Каждого СтрокаОстатка Из Остатки.НайтиСтроки(СтруктураПоиска) Цикл
			Если СтрокаОстатка.Количество = 0 Тогда
				Продолжить;
			КонецЕсли;
			НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОстатка, "ВидЗапасов, НомерГТД");
			Если Количество <= СтрокаОстатка.Количество Тогда
				Если СуммаСНДС <= СтрокаОстатка.СуммаВыручки ИЛИ СуммаСНДС = 0 ИЛИ НЕ ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаСНДС = СуммаСНДС * ВыборкаТовары.Знак;
					НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак;
				Иначе
					НоваяСтрока.СуммаСНДС = СтрокаОстатка.СуммаВыручки * СтрокаОстатка.Знак;
					НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак * СтрокаОстатка.СуммаВыручки / СуммаСНДС;
				КонецЕсли;
				НоваяСтрока.КоличествоУпаковок = КоличествоУпаковок * ВыборкаТовары.Знак;
				НоваяСтрока.Количество = Количество * ВыборкаТовары.Знак;
				Если ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаВознаграждения = СуммаВознаграждения * ВыборкаТовары.Знак;
					НоваяСтрока.СуммаНДСВознаграждения = СуммаНДСВознаграждения * ВыборкаТовары.Знак;
				КонецЕсли;
				СтрокаОстатка.Количество = СтрокаОстатка.Количество - Количество;
				СтрокаОстатка.СуммаВыручки = СтрокаОстатка.СуммаВыручки - НоваяСтрока.СуммаСНДС * СтрокаОстатка.Знак;
			Иначе
				НоваяСтрока.СуммаСНДС = СтрокаОстатка.СуммаВыручки * СтрокаОстатка.Знак;
				НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак * СтрокаОстатка.СуммаВыручки / СуммаСНДС;
				НоваяСтрока.КоличествоУпаковок = Окр(КоличествоУпаковок * СтрокаОстатка.Количество / Количество, 2, 1) * СтрокаОстатка.Знак;
				НоваяСтрока.Количество = СтрокаОстатка.Количество * СтрокаОстатка.Знак;
				Если ЭтоОтчетОПродажах Тогда
					НоваяСтрока.СуммаВознаграждения = Окр(СуммаВознаграждения * СтрокаОстатка.Количество / Количество, 2, 1) * СтрокаОстатка.Знак;
					НоваяСтрока.СуммаНДСВознаграждения = Окр(СуммаНДСВознаграждения * СтрокаОстатка.Количество / Количество, 2, 1) * СтрокаОстатка.Знак;
				КонецЕсли;
				СтрокаОстатка.Количество = 0;
			КонецЕсли;
			СуммаСНДС = СуммаСНДС - НоваяСтрока.СуммаСНДС * ВыборкаТовары.Знак;
			СуммаНДС = СуммаНДС - НоваяСтрока.СуммаНДС * ВыборкаТовары.Знак;
			КоличествоУпаковок = КоличествоУпаковок - НоваяСтрока.КоличествоУпаковок * ВыборкаТовары.Знак;
			Количество = Количество - НоваяСтрока.Количество * ВыборкаТовары.Знак;
			Если ЭтоОтчетОПродажах Тогда
				СуммаВознаграждения = СуммаВознаграждения - НоваяСтрока.СуммаВознаграждения * ВыборкаТовары.Знак;
				СуммаНДСВознаграждения = СуммаНДСВознаграждения - НоваяСтрока.СуммаНДСВознаграждения * ВыборкаТовары.Знак;
			КонецЕсли;
			Если Количество = 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Количество <> 0 Тогда // остатков не хватило, генерируем вид запасов - собственный.
			НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТовары);
			НоваяСтрока.СуммаСНДС = СуммаСНДС * ВыборкаТовары.Знак;
			НоваяСтрока.СуммаНДС = СуммаНДС * ВыборкаТовары.Знак;
			НоваяСтрока.КоличествоУпаковок = КоличествоУпаковок * ВыборкаТовары.Знак;
			НоваяСтрока.Количество = Количество * ВыборкаТовары.Знак;
			Если ЭтоОтчетОПродажах Тогда
				НоваяСтрока.СуммаВознаграждения = СуммаВознаграждения * ВыборкаТовары.Знак;
				НоваяСтрока.СуммаНДСВознаграждения = СуммаНДСВознаграждения * ВыборкаТовары.Знак;
			КонецЕсли;
			Если ВидЗапасовПоУмолчанию = Неопределено Тогда
				ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
					ДокументОбъект.Организация,
					Перечисления.ХозяйственныеОперации.ОтчетПоКомиссииМеждуОрганизациями,
					СтруктураВидаЗапасовПоУмолчанию);
			КонецЕсли;
			НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
			
			ДополнительныеСвойства.Вставить("НедостаточноОстатковТоваровОрганизаций", Истина);
			ПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций;
			Если КонтролироватьОстаткиТоваровОрганизаций ИЛИ ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда // добавим в таблицу ошибок
				НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, ВыборкаТовары);
				НоваяСтрокаОшибок.Количество = Количество;
				НоваяСтрокаОшибок.Сумма = СуммаСНДС;
				НоваяСтрокаОшибок.ЕдиницаИзмерения	= ВыборкаТовары.ЕдиницаИзмерения;
				Если Не ПерезаполнитьВидыЗапасов ИЛИ НЕ ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ТаблицаОшибок.Количество() > 0 И ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
		ТекстСообщения = НСтр( "ru = 'Документ %Ссылка% проведен с выключенным контролем остатков товаров организаций.'", Метаданные.ОсновнойЯзык.КодЯзыка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ДокументОбъект.Ссылка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытияВыключенКонтрольОстатков(),
			УровеньЖурналаРегистрации.Предупреждение,
			,
			ДокументОбъект.Ссылка,
			ТекстСообщения);
	КонецЕсли;
	
	ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].Загрузить(ТаблицаВидыЗапасов);
	
	СообщитьОбОшибкахЗаполненияВидовЗапасовКомитентов(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов);
	
КонецПроцедуры

Процедура УстановитьБлокировкуРегистров(ДокументОбъект, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтборыОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтборыОстатков.ВидЗапасов КАК ВидЗапасов
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ОтборыОстатков.ВидЗапасов = ВидыЗапасов.Ссылка
	|ГДЕ
	|	(ВидыЗапасов.ЭтоДубль
	|			ИЛИ ВидыЗапасов.Устаревший)";
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РезультатЗапросаОтборОстатков 		  = РезультатЗапроса[0];
	РезультатЗапросаУстаревшиеВидыЗапасов = РезультатЗапроса[1];
	
	Блокировка = Новый БлокировкаДанных;
	
	Если ДокументОбъект.Движения.Найти("ТоварыОрганизаций") <> Неопределено Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыОрганизаций");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаОтборОстатков;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		
		Если ДокументОбъект.Движения.Найти("РезервыТоваровОрганизаций") = Неопределено Тогда
			ТекстИсключения = НСтр("ru = 'Ошибка в описании движений документа: документ является регистратором ТоварыОрганизаций и не является регистратором РезервыТоваровОрганизаций.'");
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
			
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.РезервыТоваровОрганизаций");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаОтборОстатков;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
		
		Если Не РезультатЗапросаУстаревшиеВидыЗапасов.Пустой() Тогда
			ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.УстаревшиеВидыЗапасовСОстатками");
			ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
			ЭлементБлокировки.ИсточникДанных = РезультатЗапросаУстаревшиеВидыЗапасов;
			ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВидЗапасов", "ВидЗапасов");
		КонецЕсли;
		
	КонецЕсли;

	Если ДокументОбъект.Движения.Найти("ТоварыКОформлениюОтчетовКомитенту") <> Неопределено Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаОтборОстатков;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
	
	КонецЕсли;
	
	//++ НЕ УТ
	Если ДокументОбъект.Движения.Найти("ТоварыПереданныеПереработчику") <> Неопределено Тогда
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыПереданныеПереработчику");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаОтборОстатков;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
	
	КонецЕсли;
	//-- НЕ УТ
	
	Если ДокументОбъект.Движения.Найти("ТоварыПереданныеНаКомиссию") <> Неопределено Тогда
		
		ЗапросПоКомиссии = Новый Запрос("
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОтборыОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АналитикаКомиссионера.КлючАналитики КАК АналитикаУчетаНоменклатуры
		|ИЗ
		|	ВтОтборыОстатковОрганизаций КАК ОтборыОстатков
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
		|		ПО Ключи.Ссылка = ОтборыОстатков.АналитикаУчетаНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
		|		ПО АналитикаКомиссионера.Номенклатура = Ключи.Номенклатура
		|			И АналитикаКомиссионера.Характеристика = Ключи.Характеристика
		|			И АналитикаКомиссионера.Серия = Ключи.Серия
		|			И АналитикаКомиссионера.МестоХранения = &Партнер
		|			И АналитикаКомиссионера.Назначение = Ключи.Назначение
		//++ НЕ УТ
		|			И АналитикаКомиссионера.СтатьяКалькуляции = Ключи.СтатьяКалькуляции
		//-- НЕ УТ
		|");
		
		ЗапросПоКомиссии.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетПоКомиссииМеждуОрганизациями")
			ИЛИ ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетПоКомиссииМеждуОрганизациями") Тогда
			ЗапросПоКомиссии.УстановитьПараметр("Партнер", ДокументОбъект.Комиссионер);
		Иначе
			ЗапросПоКомиссии.УстановитьПараметр("Партнер", ДокументОбъект.Партнер);
		КонецЕсли;
		РезультатЗапросаПоКомиссии = ЗапросПоКомиссии.Выполнить();
		
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыПереданныеНаКомиссию");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.ИсточникДанных = РезультатЗапросаПоКомиссии;
		ЭлементБлокировки.ИспользоватьИзИсточникаДанных("АналитикаУчетаНоменклатуры", "АналитикаУчетаНоменклатуры");
	КонецЕсли;
	
	Блокировка.Заблокировать();
	
КонецПроцедуры

Процедура ЗаполнитьВидыЗапасовРазныхПериодов(ДокументОбъект, МенеджерВременныхТаблиц, Отказ, ПараметрыЗаполненияВидовЗапасов)
	
	ЗапросУничтоженияТаблиц = Новый Запрос;
	ЗапросУничтоженияТаблиц.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросУничтоженияТаблиц.Текст = "
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтПодобранныеВидыЗапасов
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтНовыеРезервы
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваров
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаВидыЗапасов
	|;
	|";
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.Колонки.Найти("Период") = Неопределено Тогда
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	КонецЕсли;
	
	ЗапросРазныхПериодов = ЗапросРазныхПериодов(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	РезультатПоРазнымПериодам = ЗапросРазныхПериодов.Выполнить();
	
	Если РезультатПоРазнымПериодам.Пустой() Тогда
		ПараметрыЗаполненияВидовЗапасов.КоличествоПериодовПриФормированииРезервовОрганизаций = 0;
		
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатПоРазнымПериодам.Выбрать();
	
	ДатыОстатков = РезультатПоРазнымПериодам.Выгрузить().ВыгрузитьКолонку("Период");
	
	Если Не ПараметрыЗаполненияВидовЗапасов.ТаблицаОстатковУжеСформирована Тогда
		МинимальнаяДатаОстатков = ПараметрыЗаполненияВидовЗапасов.ПериодЗаполнения;
		
		ТаблицаОстатковТоваровОрганизаций(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											Истина,
											МинимальнаяДатаОстатков,
											ДатыОстатков);
	КонецЕсли;
	
	ТаблицаВидыЗапасов = ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.СкопироватьКолонки();
	
	ТаблицаНовыеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы = ТаблицаНовыеРезервы.СкопироватьКолонки();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ВидыЗапасов.Период КАК Период,
	|	ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ВидыЗапасов.Количество КАК Количество,
	|	ВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	&Организация КАК Организация
	|ПОМЕСТИТЬ ВтПодобранныеВидыЗапасов
	|ИЗ
	|	&ТаблицаВидыЗапасов КАК ВидыЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	НовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	НовыеРезервы.НомерГТД КАК НомерГТД,
	|	НовыеРезервы.Организация КАК Организация,
	|	КОНЕЦПЕРИОДА(НовыеРезервы.Период, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА НовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА НовыеРезервы.Количество
	|		ИНАЧЕ -НовыеРезервы.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА НовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА НовыеРезервы.КоличествоПоРНПТ
	|		ИНАЧЕ -НовыеРезервы.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВтНовыеРезервы
	|ИЗ
	|	&ТаблицаНовыеРезервы КАК НовыеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПоПериодам.Организация КАК Организация,
	|	ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиПоПериодам.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиПоПериодам.НомерГТД КАК НомерГТД,
	|	СУММА(ОстаткиПоПериодам.Количество) КАК КоличествоОстаток,
	|	СУММА(ОстаткиПоПериодам.КоличествоПоРНПТ) КАК КоличествоПоРНПТОстаток,
	|	МАКСИМУМ(ОстаткиПоПериодам.ДатаПоступления) КАК ДатаПоступления,
	|	ВЫРАЗИТЬ(ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Характеристика КАК Характеристика,
	|	ВЫРАЗИТЬ(ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Серия КАК Серия,
	|	ВЫРАЗИТЬ(ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Назначение КАК Назначение,
	|	ВЫРАЗИТЬ(ОстаткиПоПериодам.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).МестоХранения КАК Склад,
	|	0 КАК СуммаОстаток,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПередачи,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаОстатковПоПериодам.Организация КАК Организация,
	|		ТаблицаОстатковПоПериодам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТаблицаОстатковПоПериодам.ВидЗапасов КАК ВидЗапасов,
	|		ТаблицаОстатковПоПериодам.НомерГТД КАК НомерГТД,
	|		ТаблицаОстатковПоПериодам.КоличествоОстаток КАК Количество,
	|		ТаблицаОстатковПоПериодам.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТ,
	|		ТаблицаОстатковПоПериодам.ДатаПоступления КАК ДатаПоступления
	|	ИЗ
	|		ТаблицаОстатковПоПериодам КАК ТаблицаОстатковПоПериодам
	|	ГДЕ
	|		ТаблицаОстатковПоПериодам.Период = &ТекущийПериод
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВтПодобранныеВидыЗапасов.Организация,
	|		ВтПодобранныеВидыЗапасов.АналитикаУчетаНоменклатуры,
	|		ВтПодобранныеВидыЗапасов.ВидЗапасов,
	|		ВтПодобранныеВидыЗапасов.НомерГТД,
	|		-ВтПодобранныеВидыЗапасов.Количество,
	|		-ВтПодобранныеВидыЗапасов.КоличествоПоРНПТ,
	|		ДАТАВРЕМЯ(1,1,1)
	|	ИЗ
	|		ВтПодобранныеВидыЗапасов КАК ВтПодобранныеВидыЗапасов
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВтНовыеРезервы.Организация,
	|		ВтНовыеРезервы.АналитикаУчетаНоменклатуры,
	|		ВтНовыеРезервы.ВидЗапасов,
	|		ВтНовыеРезервы.НомерГТД,
	|		ВтНовыеРезервы.Количество,
	|		ВтНовыеРезервы.КоличествоПоРНПТ,
	|		ДАТАВРЕМЯ(1,1,1)
	|	ИЗ
	|		ВтНовыеРезервы КАК ВтНовыеРезервы
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВтПодобранныеВидыЗапасов.Организация,
	|		ВтПодобранныеВидыЗапасов.КорАналитикаУчетаНоменклатуры,
	|		ВтПодобранныеВидыЗапасов.ВидЗапасов,
	|		ВтПодобранныеВидыЗапасов.НомерГТД,
	|		ВтПодобранныеВидыЗапасов.Количество,
	|		ВтПодобранныеВидыЗапасов.КоличествоПоРНПТ,
	|		ВтПодобранныеВидыЗапасов.Период
	|	ИЗ
	|		ВтПодобранныеВидыЗапасов КАК ВтПодобранныеВидыЗапасов
	|	ГДЕ
	|		ВтПодобранныеВидыЗапасов.КорАналитикаУчетаНоменклатуры <> ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка)) КАК ОстаткиПоПериодам
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиПоПериодам.Организация,
	|	ОстаткиПоПериодам.АналитикаУчетаНоменклатуры,
	|	ОстаткиПоПериодам.ВидЗапасов,
	|	ОстаткиПоПериодам.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ОстаткиПоПериодам.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	0 КАК СтатусУказанияСерий,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА &ЗаполнениеПоОстаткам
	|			ТОГДА ТаблицаТоваров.КоличествоПоОстатку
	|		ИНАЧЕ ТаблицаТоваров.КоличествоПоТекущемуПериоду
	|	КОНЕЦ КАК Количество,
	|	ТаблицаТоваров.Период КАК ДатаОтгрузки,
	|	ТаблицаТоваров.Период КАК ДатаПоступления,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	НЕОПРЕДЕЛЕНО КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК СтавкаНДС,
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаНДС,
	|	0 КАК СуммаВознаграждения,
	|	0 КАК СуммаНДСВознаграждения,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
	|	ИСТИНА КАК ПодбиратьВидыЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД,
	|	ТаблицаТоваров.Период КАК Период
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваровПоПериодам КАК ТаблицаТоваров
	|ГДЕ
	|	КОНЕЦПЕРИОДА(ТаблицаТоваров.Период, МЕСЯЦ) = &ТекущийПериод
	|	И ВЫБОР
	|			КОГДА &ЗаполнениеПоОстаткам
	|				ТОГДА ТаблицаТоваров.КоличествоПоОстатку
	|			ИНАЧЕ ТаблицаТоваров.КоличествоПоТекущемуПериоду
	|		КОНЕЦ > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.НомерСтроки КАК НомерСтроки,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.КорАналитикаУчетаНоменклатуры КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	НЕОПРЕДЕЛЕНО КАК Сделка,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаПродукции,
	|	ТаблицаВидыЗапасов.Период КАК ДатаОтгрузки,
	|	ЛОЖЬ КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасов
	|ИЗ
	|	ТаблицаВидыЗапасовПоПериодам КАК ТаблицаВидыЗапасов
	|ГДЕ
	|	КОНЕЦПЕРИОДА(ТаблицаВидыЗапасов.Период, МЕСЯЦ) = &ТекущийПериод";
	
	Запрос.УстановитьПараметр("Организация", ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
	
	Выборка.Сбросить();
	Пока Выборка.Следующий() Цикл
		
		Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",		ТаблицаВидыЗапасов);
		Запрос.УстановитьПараметр("ТаблицаНовыеРезервы",	ТаблицаНовыеРезервы);
		Запрос.УстановитьПараметр("ТекущийПериод",			Выборка.Период);
		Запрос.УстановитьПараметр("ЗаполнениеПоОстаткам",	Истина);
		
		Результаты = Запрос.ВыполнитьПакет();
		
		Если Результаты[3].Выгрузить()[0].Количество = 0 Тогда
			ЗапросУничтоженияТаблиц.Выполнить();
			
			Продолжить;
		КонецЕсли;
		
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.Очистить();
		ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы.Очистить();
		
		ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы(ДокументОбъект,
																		МенеджерВременныхТаблиц,
																		Отказ,
																		ПараметрыЗаполненияВидовЗапасов);
		
		ЗапросУничтоженияТаблиц.Выполнить();
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.ЗаполнитьЗначения(Выборка.Период, "Период");
		ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы.ЗаполнитьЗначения(Выборка.Период, "Период");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов, ТаблицаВидыЗапасов);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы, ТаблицаНовыеРезервы);
		
		Запрос.УстановитьПараметр("ТаблицаВидыЗапасов",		ТаблицаВидыЗапасов);
		Запрос.УстановитьПараметр("ТаблицаНовыеРезервы",	ТаблицаНовыеРезервы);
		Запрос.УстановитьПараметр("ТекущийПериод",			Выборка.Период);
		Запрос.УстановитьПараметр("ЗаполнениеПоОстаткам",	Ложь);
		Результаты = Запрос.ВыполнитьПакет();
		
		Если Результаты[3].Выгрузить()[0].Количество = 0 Тогда
			ЗапросУничтоженияТаблиц.Выполнить();
			
			Продолжить;
		КонецЕсли;
		
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.Очистить();
		ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы.Очистить();
		
		ЗаполнитьВидыЗапасовПоТаблицеОстатковСформироватьВТНовыеРезервы(ДокументОбъект,
																		МенеджерВременныхТаблиц,
																		Отказ,
																		ПараметрыЗаполненияВидовЗапасов);
		
		ЗапросУничтоженияТаблиц.Выполнить();
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов.ЗаполнитьЗначения(Выборка.Период, "Период");
		ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы.ЗаполнитьЗначения(Выборка.Период, "Период");
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов, ТаблицаВидыЗапасов);
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ПараметрыЗаполненияВидовЗапасов.ТаблицаНовыеРезервы, ТаблицаНовыеРезервы);
		
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения,
	|	ТаблицаНовыеРезервы.Период КАК Период,
	|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыеРезервы.Организация КАК Организация,
	|	ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|	ТаблицаНовыеРезервы.Количество КАК Количество,
	|	ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
	|	ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ ВТНовыеРезервы
	|ИЗ
	|	&ТаблицаНовыеРезервы КАК ТаблицаНовыеРезервы";
	
	Запрос.УстановитьПараметр("ТаблицаНовыеРезервы", ТаблицаНовыеРезервы);
	
	Запрос.Выполнить();
	
	ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов = ТаблицаВидыЗапасов;
	
КонецПроцедуры

Функция ЗапросРазныхПериодов(МенеджерВременныхТаблиц, Знач ПараметрыЗаполненияВидовЗапасов)
	
	ЗапросПериодов = Новый Запрос;
	ЗапросПериодов.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТПериодыЗаполнения") = Неопределено Тогда
		
		ЗапросПериодов.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.Период КАК Период
		|ПОМЕСТИТЬ ВТПериодыЗаполнения
		|ИЗ
		|	ТекстВложенныйЗапрос КАК ВложенныйЗапрос
		|ГДЕ
		|	ВложенныйЗапрос.Период >= &ПериодЗаполнения";
		
		Если МенеджерВременныхТаблиц.Таблицы.Найти("ТаблицаТоваровПоПериодам") <> Неопределено Тогда
			
			ТекстВложенныйЗапрос =
			"ВЫБРАТЬ
			|	КОНЕЦПЕРИОДА(ТаблицаТоваровПоПериодам.Период, МЕСЯЦ) КАК Период
			|ИЗ
			|	ТаблицаТоваровПоПериодам КАК ТаблицаТоваровПоПериодам";
			
		Иначе
			
			ТекстВложенныйЗапрос =
			"ВЫБРАТЬ
			|	КОНЕЦПЕРИОДА(ТоварыОрганизацийИРезервыИзменения.Период, МЕСЯЦ) КАК Период
			|ИЗ
			|	ВТТоварыОрганизацийИзменения КАК ТоварыОрганизацийИРезервыИзменения";
			
		КонецЕсли;
		
		ЗапросПериодов.Текст = СтрЗаменить(ЗапросПериодов.Текст, "ТекстВложенныйЗапрос", "(" + ТекстВложенныйЗапрос + ")");
		
		ЗапросПериодов.Текст = ЗапросПериодов.Текст + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
		
	КонецЕсли;
	
	ЗапросПериодов.Текст = ЗапросПериодов.Текст +
	"ВЫБРАТЬ
	|	ВТПериодыЗаполнения.Период КАК Период
	|ИЗ
	|	ВТПериодыЗаполнения КАК ВТПериодыЗаполнения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТПериодыЗаполнения.Период";
	
	ЗапросПериодов.УстановитьПараметр("ПериодЗаполнения", ПараметрыЗаполненияВидовЗапасов.ПериодЗаполнения);
	
	Возврат ЗапросПериодов;
	
КонецФункции

// Метод заполняет табличную часть "Виды запасов" документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ, в котором заполняются виды запасов.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - требуется временные таблицы:
//		ТаблицаТоваров, ТаблицаДанныхДокумента, ТаблицаВидыЗапасов, ТаблицаОстатков.
//	Отказ - Булево - Признак отказа от записи документа.
//	ПараметрыЗаполненияВидовЗапасов - Структура - См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//
Процедура ЗаполнитьВидыЗапасовПоТаблицеОстатков(ДокументОбъект,
												МенеджерВременныхТаблиц,
												Отказ,
												ПараметрыЗаполненияВидовЗапасов)
	
	ТаблицаОшибок			= ТаблицаОшибокЗаполненияВидовЗапасов();
	ДополнительныеСвойства	= ДокументОбъект.ДополнительныеСвойства;
	
	ТаблицаВидыЗапасов = ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].ВыгрузитьКолонки();
	
	КонтролироватьИзменениеНомеровГТД = ДополнительныеСвойства.Свойство("КонтролироватьИзменениеНомеровГТД");
	
	Если КонтролироватьИзменениеНомеровГТД Тогда
		ТаблицаНомеровГТД = ТаблицаВидыЗапасов.Скопировать(, "АналитикаУчетаНоменклатуры, НомерГТД, Количество");
	КонецЕсли;
	
	Запрос = ЗапросРаспределенияБезУчетаПриоритетовТаблицыТоваровНаТаблицуОстатков(МенеджерВременныхТаблиц,
																					ДополнительныеСвойства,
																					ПараметрыЗаполненияВидовЗапасов);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	ВыборкаДанныеДокумента	= МассивРезультатов[1].Выбрать();
	ВыборкаТаблицаТоваров	= МассивРезультатов[2].Выбрать();
	
	ВыборкаДанныеДокумента.Следующий();
	Организация = ВыборкаДанныеДокумента.Организация;
	ХозяйственнаяОперация = ВыборкаДанныеДокумента.ХозяйственнаяОперация;
	
	СтруктураДанныхСтроки = Новый Структура("
		|АналитикаУчетаНоменклатурыОтгрузки,
		|Количество,
		|КоличествоПоРНПТ,
		|СуммаСНДС,
		|СтавкаНДС,
		|СуммаНДС,
		|СуммаВознаграждения,
		|СуммаНДСВознаграждения,
		|НедостаточноОстатковТоваровОрганизаций,
		|ВидЗапасовОтгрузки");
	
	СтруктураВидаЗапасовПоУмолчанию = Новый Структура("
		|ГруппаФинансовогоУчета,
		|ВидЦены,
		|ВладелецТовара,
		|Контрагент,
		|Соглашение,
		|Договор,
		|Валюта,
		|НалогообложениеНДС,
		|ТипЗапасов,
		|НалогообложениеОрганизации");
	
	СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета		= Справочники.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.ВидЦены						= Справочники.ВидыЦенПоставщиков.ПустаяСсылка();
	СтруктураВидаЗапасовПоУмолчанию.ВладелецТовара				= ВыборкаДанныеДокумента.Партнер;
	СтруктураВидаЗапасовПоУмолчанию.Контрагент					= ВыборкаДанныеДокумента.Контрагент;
	СтруктураВидаЗапасовПоУмолчанию.Соглашение					= ВыборкаДанныеДокумента.Соглашение;
	СтруктураВидаЗапасовПоУмолчанию.Договор						= ВыборкаДанныеДокумента.Договор;
	СтруктураВидаЗапасовПоУмолчанию.Валюта						= ВыборкаДанныеДокумента.Валюта;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС			= ВыборкаДанныеДокумента.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.НалогообложениеОрганизации	= ВыборкаДанныеДокумента.НалогообложениеНДС;
	СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов					= ВыборкаДанныеДокумента.ТипЗапасов;
	
	РезультатЗапроса		= МассивРезультатов[МассивРезультатов.ВГраница()];
	ВыборкаОстаткиПоСтрокам	= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию = ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию(
																		ПараметрыЗаполненияВидовЗапасов);
	
	ВидЗапасовПоУмолчанию			= Неопределено;
	ВидыЗапасовДляВозврата			= Новый Соответствие;
	ВидыЗапасовПоНастройкамПередачи = Новый Соответствие;
	
	Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
		
		ИзрасходованныеОстаткиПериода			= Новый ТаблицаЗначений;
		ОтборСтрокИзрасходованныеОстаткиПериода	= Новый Структура;
		
		Для Каждого КолонкаЗапроса Из РезультатЗапроса.Колонки Цикл
			
			Если КолонкаЗапроса.Имя <> "Период" Тогда
				ИзрасходованныеОстаткиПериода.Колонки.Добавить(КолонкаЗапроса.Имя);
			КонецЕсли;
			
			Если КолонкаЗапроса.Имя <> "КоличествоОстаток"
				И КолонкаЗапроса.Имя <> "Период" Тогда
				
				ОтборСтрокИзрасходованныеОстаткиПериода.Вставить(КолонкаЗапроса.Имя);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций
														Или Не Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить();
	
	Пока ВыборкаОстаткиПоСтрокам.Следующий() Цикл
		
		КоличествоТовара				= ВыборкаОстаткиПоСтрокам.Количество;
		КоличествоТовараПоРНПТ			= ВыборкаОстаткиПоСтрокам.КоличествоПоРНПТ;
		СуммаТовараСНДС					= ВыборкаОстаткиПоСтрокам.СуммаСНДС;
		СуммаНДСТовара					= ВыборкаОстаткиПоСтрокам.СуммаНДС;
		СуммаВознагражденияВсего		= ВыборкаОстаткиПоСтрокам.СуммаВознаграждения;
		СуммаНДСВознагражденияВсего		= ВыборкаОстаткиПоСтрокам.СуммаНДСВознаграждения;
		
		// Детальные записи
		Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) 
				И ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов
				И Выборка.ДатаПоступления < Выборка.Период Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Если ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета") Тогда
				СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = Выборка.ГруппаФинансовогоУчета;
			Иначе
				СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = Неопределено;
			КонецЕсли;
			
			ВидЗапасовОтгрузки = Неопределено;
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов) Тогда
				
				ВидЗапасов = Выборка.ВидЗапасов;
				ВидЗапасовОтгрузки = ?(ЗначениеЗаполнено(Выборка.ВидЗапасовОтгрузки),
										Выборка.ВидЗапасовОтгрузки,
										Выборка.ВидЗапасов);
				
			ИначеЕсли ЗначениеЗаполнено(Выборка.ВидЗапасовОтгрузки) Тогда
				
				Если Выборка.ОтгрузкаЗапасовДругойОрганизации Тогда
					ВидЗапасовОтгрузки = Выборка.ВидЗапасовОтгрузки;
				Иначе
					
					ВидЗапасовОтгрузки = ВидыЗапасовПоНастройкамПередачи.Получить(Выборка.ВидЗапасовОтгрузки);
					
					Если ВидЗапасовОтгрузки = Неопределено Тогда
						ВидЗапасовОтгрузки = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
												Выборка.ВидЗапасовОтгрузки,
												Организация,
												ВыборкаДанныеДокумента.НалогообложениеНДС);
						
						ВидыЗапасовПоНастройкамПередачи.Вставить(Выборка.ВидЗапасовОтгрузки, ВидЗапасовОтгрузки);
					КонецЕсли;
					
				КонецЕсли;
				
				ВидЗапасов = ВидыЗапасовДляВозврата.Получить(ВидЗапасовОтгрузки);
				
				Если ВидЗапасов = Неопределено Тогда
					ВидЗапасов = Справочники.ВидыЗапасов.ВидЗапасовДляВозвратаТоваровОтКлиента(ВидЗапасовОтгрузки,
																								Организация);
					
					ВидыЗапасовДляВозврата.Вставить(ВидЗапасовОтгрузки, ВидЗапасов);
				КонецЕсли;
				
			Иначе
				ВидЗапасов = Справочники.ВидыЗапасов.ПустаяСсылка();
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.ВидЗапасов)
				И ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
				
				ЗаполнитьЗначенияСвойств(ОтборСтрокИзрасходованныеОстаткиПериода, Выборка);
				СтрокиОстатка = ИзрасходованныеОстаткиПериода.НайтиСтроки(ОтборСтрокИзрасходованныеОстаткиПериода);
				
				Если СтрокиОстатка.Количество() > 0 Тогда
					СтрокаИзрасходованногоОстаткаПериода = СтрокиОстатка[0];
					
					КоличествоОстаток				= СтрокаИзрасходованногоОстаткаПериода.КоличествоОстаток;
					КоличествоОстатокВсего			= СтрокаИзрасходованногоОстаткаПериода.КоличествоОстатокВсего;
					КоличествоПоРНПТОстатокВсего	= СтрокаИзрасходованногоОстаткаПериода.КоличествоПоРНПТОстатокВсего;
				Иначе
					СтрокаИзрасходованногоОстаткаПериода = Неопределено;
					
					КоличествоОстаток				= Выборка.КоличествоОстаток;
					КоличествоОстатокВсего			= Выборка.КоличествоОстатокВсего;
					КоличествоПоРНПТОстатокВсего	= Выборка.КоличествоПоРНПТОстатокВсего;
				КонецЕсли;
				
				Если КоличествоОстаток = 0 Тогда
					Продолжить;
				КонецЕсли;
				
			Иначе
				КоличествоОстаток				= Выборка.КоличествоОстаток;
				КоличествоОстатокВсего			= Выборка.КоличествоОстатокВсего;
				КоличествоПоРНПТОстатокВсего	= Выборка.КоличествоПоРНПТОстатокВсего;
			КонецЕсли;
			
			СуммаОстаток		= Выборка.СуммаОстаток;
			НеУказанНомерГТД	= Ложь;
			
			Если Выборка.НеУказанНомерГТД Тогда
				
				КоличествоОстаток				= 0;
				КоличествоОстатокВсего			= 0;
				КоличествоПоРНПТОстатокВсего	= 0;
				СуммаОстаток					= 0;
				НеУказанНомерГТД				= Выборка.НеУказанНомерГТД;
				
			ИначеЕсли (КоличествоТовара > 0 И КоличествоОстаток > 0)
				Или (КоличествоТовара < 0 И КоличествоОстаток < 0) Тогда
				
				НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				
				Если ТаблицаВидыЗапасов.Колонки.Найти("ДокументПередачи") <> Неопределено Тогда
					НоваяСтрока.ДокументПередачи = Выборка.ДокументРеализации;
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ВидЗапасов) Тогда
					НоваяСтрока.ВидЗапасов = ВидЗапасов;
				Иначе
					ТекстИсключения = НСтр("ru = 'Ненулевое количество при пустом виде запасов.'");
					
					ВызватьИсключение ТекстИсключения;
				КонецЕсли;
				
				Если КоличествоТовара > 0 Тогда
					
					Количество = Мин(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток	= Макс(СуммаОстаток, 0);
						СуммаСНДС		= ?(КоличествоОстаток = Количество,
											СуммаОстаток,
											Мин(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0,
										Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1),
										0);
					КонецЕсли;
					
				Иначе
					
					Количество = Макс(КоличествоТовара, КоличествоОстаток);
					
					Если СуммаОстаток <> 0 Тогда
						СуммаОстаток	= Мин(СуммаОстаток, 0);
						СуммаСНДС		= ?(КоличествоОстаток = Количество,
											СуммаОстаток,
											Макс(СуммаТовараСНДС, СуммаОстаток));
					Иначе
						СуммаСНДС = ?(КоличествоТовара <> 0,
										Окр(Количество * СуммаТовараСНДС / КоличествоТовара, 2, 1),
										0);
					КонецЕсли;
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(Выборка.ВидЗапасов)
					И ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
					
					Если СтрокаИзрасходованногоОстаткаПериода = Неопределено Тогда
						СтрокаИзрасходованногоОстаткаПериода = ИзрасходованныеОстаткиПериода.Добавить();
						
						ЗаполнитьЗначенияСвойств(СтрокаИзрасходованногоОстаткаПериода, Выборка);
					КонецЕсли;
					
					КоличествоПоРНПТ = ?(КоличествоОстатокВсего <> 0,
										?(КоличествоОстатокВсего - Количество = 0,
											КоличествоПоРНПТОстатокВсего,
											Количество * КоличествоПоРНПТОстатокВсего / КоличествоОстатокВсего),
										0);
					
					СтрокаИзрасходованногоОстаткаПериода.КоличествоОстаток = СтрокаИзрасходованногоОстаткаПериода.КоличествоОстаток - Количество;
					СтрокаИзрасходованногоОстаткаПериода.КоличествоОстатокВсего = СтрокаИзрасходованногоОстаткаПериода.КоличествоОстатокВсего - Количество;
					СтрокаИзрасходованногоОстаткаПериода.КоличествоПоРНПТОстатокВсего = СтрокаИзрасходованногоОстаткаПериода.КоличествоПоРНПТОстатокВсего - КоличествоПоРНПТ;
					
				КонецЕсли;
				
				СтруктураДанныхСтроки.Количество				= Количество;
				СтруктураДанныхСтроки.КоличествоПоРНПТ			= ?(КоличествоОстатокВсего <> 0,
																	?(КоличествоОстатокВсего - Количество = 0,
																		КоличествоПоРНПТОстатокВсего,
																		Количество * КоличествоПоРНПТОстатокВсего / КоличествоОстатокВсего),
																	0);
				СтруктураДанныхСтроки.СуммаСНДС					= СуммаСНДС;
				СтруктураДанныхСтроки.СуммаНДС					= ?(СуммаТовараСНДС <> 0,
																	Окр(СуммаСНДС * СуммаНДСТовара / СуммаТовараСНДС, 2, 1),
																	0);
				СтруктураДанныхСтроки.СтавкаНДС					= Выборка.СтавкаНДС;
				СтруктураДанныхСтроки.СуммаВознаграждения		= ?(КоличествоТовара <> 0,
																	Окр(Количество * СуммаВознагражденияВсего / КоличествоТовара, 2, 1),
																	0);
				СтруктураДанныхСтроки.СуммаНДСВознаграждения	= ?(КоличествоТовара <> 0,
																	Окр(Количество * СуммаНДСВознагражденияВсего / КоличествоТовара, 2, 1),
																	0);
				СтруктураДанныхСтроки.ВидЗапасовОтгрузки		= ВидЗапасовОтгрузки;
				СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций = Ложь;
				СтруктураДанныхСтроки.АналитикаУчетаНоменклатурыОтгрузки = Выборка.АналитикаУчетаНоменклатурыОтгрузки;
				
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
				
				КоличествоТовара			= КоличествоТовара				- СтруктураДанныхСтроки.Количество;
				КоличествоТовараПоРНПТ		= КоличествоТовараПоРНПТ		- СтруктураДанныхСтроки.КоличествоПоРНПТ;
				СуммаТовараСНДС				= СуммаТовараСНДС				- СтруктураДанныхСтроки.СуммаСНДС;
				СуммаНДСТовара				= СуммаНДСТовара				- СтруктураДанныхСтроки.СуммаНДС;
				СуммаВознагражденияВсего	= СуммаВознагражденияВсего		- СтруктураДанныхСтроки.СуммаВознаграждения;
				СуммаНДСВознагражденияВсего	= СуммаНДСВознагражденияВсего	- СтруктураДанныхСтроки.СуммаНДСВознаграждения;
				СуммаОстаток				= СуммаОстаток					- СтруктураДанныхСтроки.СуммаСНДС;
				
			КонецЕсли;
			
		КонецЦикла; // Выборка по остаткам
		
		Если КоличествоТовара <> 0 
			Или СуммаТовараСНДС <> 0 Тогда
			
			Если ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию
				Или ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
				
				Если Не ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке
					И ПараметрыЗаполненияВидовЗапасов.ТаблицаРеквизитовВидовЗапасовПоУмолчанию.Количество() = 0 Тогда
					
					ТекстИсключения = НСтр("ru = 'Установлен флаг получения владельца товаров из таблицы
												|реквизитов видов запасов по умолчанию, но таблица не передана.'");
					
					ВызватьИсключение ТекстИсключения;
					
				КонецЕсли;
				
				ВыборкаТаблицаТоваров.Сбросить();
				ВидыЗапасовПоУмолчанию = Новый Соответствие();
				
				ОтборСтрок = Новый Структура("НомерСтроки", ВыборкаОстаткиПоСтрокам.НомерСтроки);
				
				Если ВыборкаТаблицаТоваров.НайтиСледующий(ОтборСтрок) Тогда
					
					ГруппаФинансовогоУчета = ВыборкаТаблицаТоваров.ГруппаФинансовогоУчета;
					
					Если ПараметрыЗаполненияВидовЗапасов.ВладелецТовараВШапке Тогда
						
						ВидЗапасовПоУмолчанию = ВидыЗапасовПоУмолчанию[ГруппаФинансовогоУчета];
						
						Если ВидЗапасовПоУмолчанию = Неопределено Тогда
							СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета = ГруппаФинансовогоУчета;
							СтруктураВидаЗапасовПоУмолчанию.ВидЦены = ВыборкаТаблицаТоваров.ВидЦены;
							
							ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
														Организация,
														ХозяйственнаяОперация,
														СтруктураВидаЗапасовПоУмолчанию);
							
							ВидыЗапасовПоУмолчанию.Вставить(ГруппаФинансовогоУчета, ВидЗапасовПоУмолчанию);
						КонецЕсли;
						
					Иначе
						
						СтруктураВидаЗапасовПоУмолчанию.ГруппаФинансовогоУчета	= ГруппаФинансовогоУчета;
						СтруктураВидаЗапасовПоУмолчанию.ВладелецТовара			= ВыборкаТаблицаТоваров.ВладелецТовара;
						СтруктураВидаЗапасовПоУмолчанию.Контрагент				= ВыборкаТаблицаТоваров.Контрагент;
						СтруктураВидаЗапасовПоУмолчанию.Договор					= ВыборкаТаблицаТоваров.Договор;
						СтруктураВидаЗапасовПоУмолчанию.ТипЗапасов				= ВыборкаТаблицаТоваров.ТипЗапасов;
						
						ВидЗапасовПоУмолчанию = Справочники.ВидыЗапасов.ВидЗапасовДокумента(
													Организация,
													ХозяйственнаяОперация,
													СтруктураВидаЗапасовПоУмолчанию);
						
					КонецЕсли;
					
					НоваяСтрока = ТаблицаВидыЗапасов.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТаблицаТоваров);
					НоваяСтрока.ВидЗапасов = ВидЗапасовПоУмолчанию;
					
					Если ТаблицаВидыЗапасов.Колонки.Найти("ДокументПередачи") <> Неопределено Тогда
						НоваяСтрока.ДокументПередачи = ВыборкаТаблицаТоваров.ДокументРеализации;
					КонецЕсли;
					
					Если ПараметрыЗаполненияВидовЗапасов.ИмяТаблицыОстатков = "ТоварыОрганизацийКПередаче" Тогда
						НоваяСтрока.ВидЗапасовПолучателя = Справочники.ВидыЗапасов.ВидЗапасовДляПередачиМеждуОрганизациями(
																ВидЗапасовПоУмолчанию,
																ДокументОбъект.ОрганизацияПолучатель,
																СтруктураВидаЗапасовПоУмолчанию.НалогообложениеНДС,
																ДокументОбъект.Дата);
					КонецЕсли;
					
					СтруктураДанныхСтроки.Количество				= КоличествоТовара;
					СтруктураДанныхСтроки.КоличествоПоРНПТ			= КоличествоТовараПоРНПТ;
					СтруктураДанныхСтроки.СуммаСНДС					= СуммаТовараСНДС;
					СтруктураДанныхСтроки.СуммаНДС					= СуммаНДСТовара;
					СтруктураДанныхСтроки.СуммаВознаграждения		= СуммаВознагражденияВсего;
					СтруктураДанныхСтроки.СуммаНДСВознаграждения	= СуммаНДСВознагражденияВсего;
					СтруктураДанныхСтроки.СтавкаНДС					= ВыборкаТаблицаТоваров.СтавкаНДС;
					СтруктураДанныхСтроки.НедостаточноОстатковТоваровОрганизаций = Истина;
					СтруктураДанныхСтроки.АналитикаУчетаНоменклатурыОтгрузки = НоваяСтрока.АналитикаУчетаНоменклатуры;
					СтруктураДанныхСтроки.ВидЗапасовОтгрузки		= НоваяСтрока.ВидЗапасов;
					
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураДанныхСтроки);
					
				КонецЕсли;
				
			КонецЕсли;
			
			Если Не ПриНехваткеТоваровОрганизацииЗаполнятьВидамиЗапасовПоУмолчанию Тогда
				
				Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения Тогда
					
					Выборка = ВыборкаОстаткиПоСтрокам.Выбрать();
					Выборка.Следующий();
					
					НоваяСтрокаОшибок = ТаблицаОшибок.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаОшибок, Выборка);
					
					НоваяСтрокаОшибок.Количество		= КоличествоТовара;
					НоваяСтрокаОшибок.Сумма				= СуммаТовараСНДС;
					НоваяСтрокаОшибок.ЕдиницаИзмерения	= Выборка.ЕдиницаИзмерения;
					НоваяСтрокаОшибок.НеУказанНомерГТД	= НеУказанНомерГТД;
					
				КонецЕсли;
				
				Если Не ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
					Отказ = Истина;
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла; // Выборка по строкам документа
	
	Если ТаблицаОшибок.Количество() > 0
		И ПроводитьБезКонтроляОстатковТоваровОрганизаций Тогда
		
		ТекстСообщения = НСтр("ru = 'Документ %Ссылка% проведен с выключенным контролем остатков товаров организаций.'",
								Метаданные.ОсновнойЯзык.КодЯзыка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Ссылка%", ДокументОбъект.Ссылка);
		
		ЗаписьЖурналаРегистрации(ИмяСобытияВыключенКонтрольОстатков(),
								УровеньЖурналаРегистрации.Предупреждение,
								,
								ДокументОбъект.Ссылка,
								ТекстСообщения);
		
	КонецЕсли;
	
	Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
		ПараметрыЗаполненияВидовЗапасов.ТаблицаВидыЗапасов = ТаблицаВидыЗапасов;
	Иначе
		ДокументОбъект[ПараметрыЗаполненияВидовЗапасов.ИмяТЧВидыЗапасов].Загрузить(ТаблицаВидыЗапасов);
	КонецЕсли;
	
	Если КонтролироватьИзменениеНомеровГТД Тогда
		
		ТаблицаНомеровГТД.Колонки.Добавить("НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаВидыЗапасов Цикл
			НоваяСтрока = ТаблицаНомеровГТД.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			НоваяСтрока.Количество		= 0;
			НоваяСтрока.НовоеКоличество	= СтрокаТаблицы.Количество;
		КонецЦикла;
		
		ТаблицаНомеровГТД.Свернуть("АналитикаУчетаНоменклатуры, НомерГТД", "Количество, НовоеКоличество");
		
		Для Каждого СтрокаТаблицы Из ТаблицаНомеровГТД Цикл
			Если СтрокаТаблицы.Количество <> СтрокаТаблицы.НовоеКоличество Тогда
				ДополнительныеСвойства.Вставить("ИзменилисьНомераГТД", Истина);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	СообщитьОбОшибкахЗаполненияВидовЗапасовПоТаблицеКОформлению(ДокументОбъект,
																ТаблицаОшибок,
																ПараметрыЗаполненияВидовЗапасов,
																ХозяйственнаяОперация);
	
КонецПроцедуры

Функция ЗапросРаспределенияБезУчетаПриоритетовТаблицыТоваровНаТаблицуОстатков(МенеджерВременныхТаблиц,
																				ДополнительныеСвойства,
																				ПараметрыЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки) КАК НомерСтроки,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаТоваров.АналитикаУчетаНоменклатуры) КАК АналитикаОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Номенклатура, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура) КАК НоменклатураОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Характеристика, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика) КАК ХарактеристикаОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Серия, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия) КАК СерияОстатков,
	|	СпрНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СпрНоменклатура.ПодакцизныйТовар КАК ЭтоПодакцизныйТовар,
	|	СпрНоменклатура.ВестиУчетПоГТД КАК ВестиУчетПоГТД,
	|	ЕСТЬNULL(АналитикаКомиссионера.МестоХранения, ТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения) КАК СкладОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.Назначение, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение) КАК НазначениеОстатков,
	|	ЕСТЬNULL(АналитикаКомиссионера.СтатьяКалькуляции, ТаблицаТоваров.АналитикаУчетаНоменклатуры.СтатьяКалькуляции) КАК СтатьяКалькуляцииОстатков,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов КАК ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД КАК НомерГТД,
	|	ТаблицаТоваров.ВидЦены КАК ВидЦены,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ВЫБОР
	|		КОГДА &ТекстПоляТаблицаТоваровДокументРеализации_ В(&ПустыеЗначенияДокументаРеализации)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &ТекстПоляТаблицаТоваровДокументРеализации_
	|	КОНЕЦ КАК ДокументРеализации,
	|	&ТекстПоляТаблицаТоваровПериод_ КАК Период,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	МАКСИМУМ(ТаблицаТоваров.СтавкаНДС) КАК СтавкаНДС,
	|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
	|	&ТекстПоляТаблицаТоваровКоличествоПоРНПТ_ КАК КоличествоПоРНПТ,
	|	СУММА(ТаблицаТоваров.СуммаСНДС) КАК СуммаСНДС,
	|	СУММА(ТаблицаТоваров.СуммаНДС) КАК СуммаНДС,
	|	СУММА(ТаблицаТоваров.СуммаВознаграждения) КАК СуммаВознаграждения,
	|	СУММА(ТаблицаТоваров.СуммаНДСВознаграждения) КАК СуммаНДСВознаграждения
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура = СпрНоменклатура.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|		ПО ТаблицаТоваров.Номенклатура = АналитикаКомиссионера.Номенклатура
	|			И ТаблицаТоваров.Характеристика = АналитикаКомиссионера.Характеристика
	|			И ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) = АналитикаКомиссионера.Назначение
	|			И ТаблицаДанныхДокумента.Партнер = АналитикаКомиссионера.МестоХранения
	|			И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссионера.Серия
	|			И АналитикаКомиссионера.СтатьяКалькуляции = &ПустоеЗначениеСтатьиКалькуляции
	|			И (ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|				ИЛИ ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика))
	|
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаТоваров.АналитикаУчетаНоменклатуры),
	|	СпрНоменклатура.ЕдиницаИзмерения,
	|	СпрНоменклатура.ПодакцизныйТовар,
	|	СпрНоменклатура.ВестиУчетПоГТД,
	|	ЕСТЬNULL(АналитикаКомиссионера.Номенклатура, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура),
	|	ЕСТЬNULL(АналитикаКомиссионера.Характеристика, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика),
	|	ЕСТЬNULL(АналитикаКомиссионера.Серия, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия),
	|	ЕСТЬNULL(АналитикаКомиссионера.МестоХранения, ТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения),
	|	ЕСТЬNULL(АналитикаКомиссионера.Назначение, ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение),
	|	ЕСТЬNULL(АналитикаКомиссионера.СтатьяКалькуляции, ТаблицаТоваров.АналитикаУчетаНоменклатуры.СтатьяКалькуляции),
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение,
	|	ВЫБОР 
	|		КОГДА &ТекстПоляТаблицаТоваровДокументРеализации_ В(&ПустыеЗначенияДокументаРеализации)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ &ТекстПоляТаблицаТоваровДокументРеализации_
	|	КОНЕЦ,
	|	&ТекстПоляТаблицаТоваровПериод_,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов,
	|	ТаблицаТоваров.НомерГТД,
	|	ТаблицаТоваров.ВидЦены
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	ТаблицаДанныхДокумента.Дата КАК Период,
	|	ТаблицаДанныхДокумента.Партнер КАК Партнер,
	|	ТаблицаДанныхДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДанныхДокумента.Соглашение КАК Соглашение,
	|	ТаблицаДанныхДокумента.Договор КАК Договор,
	|	ТаблицаДанныхДокумента.Валюта КАК Валюта,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ТаблицаДанныхДокумента.ТипЗапасов КАК ТипЗапасов
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ВидыЗапасовПоУмолчанию.ВладелецТовара КАК ВладелецТовара,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасов КАК ТипЗапасов,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасовРезервы КАК ТипЗапасовРезервы,
	|	ВидыЗапасовПоУмолчанию.Контрагент КАК Контрагент,
	|	ВидыЗапасовПоУмолчанию.Договор КАК Договор,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Серия КАК Серия,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.НомерГТД КАК НомерГТД,
	|	ТаблицаДокумента.ВидЦены КАК ВидЦены,
	|	ТаблицаДокумента.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаДокумента.Период КАК Период,
	|	ВЫБОР
	|		КОГДА &ИспользоватьГруппыФинУчета
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры).Номенклатура.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ КАК ГруппаФинансовогоУчета
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРеквизитовВидовЗапасовПоУмолчанию КАК ВидыЗапасовПоУмолчанию
	|		ПО ВидыЗапасовПоУмолчанию.НомерСтроки = ТаблицаДокумента.НомерСтроки
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаВидыЗапасов.НомерСтроки) КАК НомерСтроки,
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры) КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную,
	|	СУММА(ТаблицаВидыЗапасов.Количество) КАК Количество,
	|	&ТекстПоляТаблицаВидыЗапасовКоличествоПоРНПТ_ КАК КоличествоПоРНПТ,
	|	ВЫБОР
	|		КОГДА СУММА(ТаблицаВидыЗапасов.Количество) > 0
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК Знак,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	&ТекстПоляТаблицаВидыЗапасовПериод_ КАК Период
	|ПОМЕСТИТЬ ВтВидыЗапасовСводно
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаКомиссионера
	|		ПО ТаблицаВидыЗапасов.Номенклатура = АналитикаКомиссионера.Номенклатура
	|			И ТаблицаВидыЗапасов.Характеристика = АналитикаКомиссионера.Характеристика
	|			И ТаблицаДанныхДокумента.Партнер = АналитикаКомиссионера.МестоХранения
	|			И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение = АналитикаКомиссионера.Назначение
	|			И АналитикаКомиссионера.СтатьяКалькуляции = &ПустоеЗначениеСтатьиКалькуляции
	|			И ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) = АналитикаКомиссионера.Серия
	|			И ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(АналитикаКомиссионера.КлючАналитики, ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры),
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасовПолучателя,
	|	ТаблицаВидыЗапасов.СкладОтгрузки,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную,
	|	ТаблицаВидыЗапасов.ДокументРеализации,
	|	&ТекстПоляТаблицаВидыЗапасовПериод_
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	ВидЗапасовПолучателя,
	|	НомерГТД
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	// Сгруппируем остатки. Для каждой сгруппированной строки
	// определим использование данного остатка в текущем документе.
	// Необходимо для правильного получения СуммыСНДС из документа,
	// а не усредненной из остатков.
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВтОстаткиБезГруппировки.ОстаткиДокумента) КАК ОстаткиДокумента,
	|
	|	ВтОстаткиБезГруппировки.Организация КАК Организация,
	|	ВтОстаткиБезГруппировки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтОстаткиБезГруппировки.Номенклатура КАК Номенклатура,
	|	ВтОстаткиБезГруппировки.Характеристика КАК Характеристика,
	|	ВтОстаткиБезГруппировки.Серия КАК Серия,
	|	ВтОстаткиБезГруппировки.Склад КАК Склад,
	|	ВтОстаткиБезГруппировки.Назначение КАК Назначение,
	|	ВтОстаткиБезГруппировки.НазначениеОтгрузки КАК НазначениеОтгрузки,
	|	ВтОстаткиБезГруппировки.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|	ВтОстаткиБезГруппировки.СкладОтгрузки КАК СкладОтгрузки,
	|
	|	ВтОстаткиБезГруппировки.ВидЗапасов КАК ВидЗапасов,
	|	ВтОстаткиБезГруппировки.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	ВтОстаткиБезГруппировки.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|	ВтОстаткиБезГруппировки.НомерГТД КАК НомерГТД,
	|	ВтОстаткиБезГруппировки.ДатаПоступления КАК ДатаПоступления,
	|
	|	МАКСИМУМ(ВтОстаткиБезГруппировки.КоличествоОстатокВсего) КАК КоличествоОстатокВсего,
	|	СУММА(ВтОстаткиБезГруппировки.КоличествоОстаток) КАК КоличествоОстаток,
	|	МАКСИМУМ(ВтОстаткиБезГруппировки.КоличествоПоРНПТОстатокВсего) КАК КоличествоПоРНПТОстатокВсего,
	|	СУММА(ВтОстаткиБезГруппировки.СуммаОстаток) КАК СуммаОстаток,
	|
	|	ВтОстаткиБезГруппировки.ДокументРеализации КАК ДокументРеализации,
	|	ВтОстаткиБезГруппировки.Период КАК Период
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	(ВЫБРАТЬ // ОСТАТКИ, УКАЗАННЫЕ В ДОКУМЕНТЕ
	|		ИСТИНА КАК ОстаткиДокумента,
	|		
	|		Остатки.Организация КАК Организация,
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Ключи.Номенклатура КАК Номенклатура,
	|		Ключи.Характеристика КАК Характеристика,
	|		Ключи.Серия КАК Серия,
	|		Ключи.МестоХранения КАК Склад,
	|		Ключи.Назначение КАК Назначение,
	|		Остатки.Назначение КАК НазначениеОтгрузки,
	|		Ключи.СтатьяКалькуляции КАК СтатьяКалькуляции,
	|		ВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|		
	|		ВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|		ВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|		Остатки.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|		ВидыЗапасов.НомерГТД КАК НомерГТД,
	|		Остатки.ДатаПоступления КАК ДатаПоступления,
	|		
	|		ВидыЗапасов.Количество КАК КоличествоОстатокВсего,
	|		ВЫБОР
	|			КОГДА ВидыЗапасов.ВидыЗапасовУказаныВручную
	|					И НЕ &ПерезаполнитьВидыЗапасов
	|				ТОГДА ВидыЗапасов.Количество
	|			КОГДА ВидыЗапасов.Знак * Остатки.КоличествоОстаток > ВидыЗапасов.Знак * ВидыЗапасов.Количество
	|				ТОГДА ВидыЗапасов.Количество
	|			ИНАЧЕ Остатки.КоличествоОстаток
	|		КОНЕЦ КАК КоличествоОстаток,
	|		ВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТОстатокВсего,
	|	
	|		ВЫБОР
	|			КОГДА (ВидыЗапасов.Знак * Остатки.КоличествоОстаток > ВидыЗапасов.Знак * ВидыЗапасов.Количество)
	|					И Остатки.КоличествоОстаток <> 0
	|				ТОГДА ВидыЗапасов.Количество * Остатки.СуммаОстаток / Остатки.КоличествоОстаток
	|			ИНАЧЕ Остатки.СуммаОстаток
	|		КОНЕЦ КАК СуммаОстаток,
	|		ВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|		ВидыЗапасов.Период КАК Период
	|	ИЗ
	|		ВтВидыЗапасовСводно КАК ВидыЗапасов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|			ПО ИСТИНА
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|			ПО ВидыЗапасов.АналитикаУчетаНоменклатуры = Ключи.Ссылка
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОстатков КАК Остатки
	|			ПО Остатки.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|				И Остатки.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|				И Остатки.СкладОтгрузки = ВидыЗапасов.СкладОтгрузки
	|				И Остатки.НомерГТД = ВидыЗапасов.НомерГТД
	|				И Остатки.ДокументРеализации = ВидыЗапасов.ДокументРеализации
	|				И (ВидыЗапасов.Период = ДАТАВРЕМЯ(1,1,1)
	|					ИЛИ ВидыЗапасов.Период = Остатки.ДатаПоступления)
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасов
	|			ПО ВидыЗапасов.ВидЗапасов = РеквизитыВидаЗапасов.Ссылка
	|	
	|	ГДЕ
	|		НЕ Остатки.ВидЗапасов ЕСТЬ NULL
	|		ИЛИ (ВидыЗапасов.ВидыЗапасовУказаныВручную
	|			И НЕ &ПерезаполнитьВидыЗапасов)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // ОСТАТКИ, НЕ УКАЗАННЫЕ В ДОКУМЕНТЕ
	|		ЛОЖЬ КАК ОстаткиДокумента,
	|		
	|		Остатки.Организация КАК Организация,
	|		Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Ключи.Номенклатура,
	|		Ключи.Характеристика,
	|		Ключи.Серия,
	|		Ключи.МестоХранения,
	|		Ключи.Назначение,
	|		Остатки.Назначение,
	|		Ключи.СтатьяКалькуляции,
	|		Остатки.СкладОтгрузки КАК СкладОтгрузки,
	|		
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|		Остатки.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.ДатаПоступления КАК ДатаПоступления,
	|		
	|		Остатки.КоличествоОстаток КАК КоличествоОстатокВсего,
	|		Остатки.КоличествоОстаток - ЕСТЬNULL(ВидыЗапасов.Количество, 0) КАК КоличествоОстаток,
	|		&ТекстПоляТаблицаОстатковКоличествоПоРНПТОстаток_ КАК КоличествоПоРНПТОстатокВсего,
	|		ВЫБОР
	|			КОГДА Остатки.КоличествоОстаток <> 0
	|				ТОГДА Остатки.СуммаОстаток - (ЕСТЬNULL(ВидыЗапасов.Количество, 0) * Остатки.СуммаОстаток / Остатки.КоличествоОстаток)
	|			КОГДА ЕСТЬNULL(ВидыЗапасов.Количество, 0) = 0
	|				ТОГДА Остатки.СуммаОстаток
	|			ИНАЧЕ 0 // Сумма остатка подобралась в строках с видом запасов
	|		КОНЕЦ КАК СуммаОстаток,
	|		ВЫБОР
	|			КОГДА Остатки.ДокументРеализации В (&ПустыеЗначенияДокументаРеализации)
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ Остатки.ДокументРеализации
	|		КОНЕЦ КАК ДокументРеализации,
	|		ВидыЗапасов.Период
	|	ИЗ
	|		ТаблицаОстатков КАК Остатки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|			ПО ИСТИНА
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|			ПО Остатки.АналитикаУчетаНоменклатуры = Ключи.Ссылка
	|			
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВтВидыЗапасовСводно КАК ВидыЗапасов
	|			ПО Остатки.АналитикаУчетаНоменклатуры = ВидыЗапасов.АналитикаУчетаНоменклатуры
	|				И Остатки.ВидЗапасов = ВидыЗапасов.ВидЗапасов
	|				И Остатки.СкладОтгрузки = ВидыЗапасов.СкладОтгрузки
	|				И Остатки.НомерГТД = ВидыЗапасов.НомерГТД
	|				И Остатки.ДокументРеализации = ВидыЗапасов.ДокументРеализации
	|				И ВидыЗапасов.Период = ДАТАВРЕМЯ(1,1,1)
	|					ИЛИ ВидыЗапасов.Период = Остатки.ДатаПоступления
	|	
	|	ГДЕ
	|		ВЫБОР
	|			КОГДА ВидыЗапасов.Количество ЕСТЬ NULL
	|				ТОГДА ИСТИНА
	|			КОГДА ВидыЗапасов.Количество = 0
	|				ТОГДА НЕ ВидыЗапасов.НомерСтроки = 99999
	|			КОГДА ВидыЗапасов.Знак * ВидыЗапасов.Количество > 0
	|				ТОГДА ВидыЗапасов.Знак * Остатки.КоличествоОстаток - ВидыЗапасов.Знак * ВидыЗапасов.Количество > 0
	|			ИНАЧЕ ВидыЗапасов.Знак * Остатки.КоличествоОстаток - ВидыЗапасов.Знак * ВидыЗапасов.Количество < 0
	|		КОНЕЦ
	|	
	|	) КАК ВтОстаткиБезГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	ВтОстаткиБезГруппировки.Организация,
	|	ВтОстаткиБезГруппировки.АналитикаУчетаНоменклатуры,
	|	ВтОстаткиБезГруппировки.Номенклатура,
	|	ВтОстаткиБезГруппировки.Характеристика,
	|	ВтОстаткиБезГруппировки.Серия,
	|	ВтОстаткиБезГруппировки.Склад,
	|	ВтОстаткиБезГруппировки.Назначение,
	|	ВтОстаткиБезГруппировки.НазначениеОтгрузки,
	|	ВтОстаткиБезГруппировки.СтатьяКалькуляции,
	|	ВтОстаткиБезГруппировки.СкладОтгрузки,
	|
	|	ВтОстаткиБезГруппировки.ВидЗапасов,
	|	ВтОстаткиБезГруппировки.ВидЗапасовПолучателя,
	|	ВтОстаткиБезГруппировки.ВидЗапасовОтгрузки,
	|	ВтОстаткиБезГруппировки.НомерГТД,
	|	ВтОстаткиБезГруппировки.ДатаПоступления,
	|	ВтОстаткиБезГруппировки.ДокументРеализации,
	|	ВтОстаткиБезГруппировки.Период
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Склад КАК Склад,
	|	ЕСТЬNULL(КлючиТоваров.Назначение, Неопределено) КАК Назначение,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.Номенклатура КАК Номенклатура,
	|	ВЫРАЗИТЬ(ТаблицаДокумента.Номенклатура КАК Справочник.Номенклатура).ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ЕСТЬNULL(ВЫРАЗИТЬ(ТаблицаДокумента.Номенклатура КАК Справочник.Номенклатура).КодТНВЭД.СырьевойТовар, ЛОЖЬ) КАК СырьевойТовар,
	|	ТаблицаДокумента.ЭтоПодакцизныйТовар КАК ЭтоПодакцизныйТовар,
	|	ТаблицаДокумента.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.Характеристика КАК Характеристика,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.СуммаСНДС КАК СуммаСНДС,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ТаблицаДокумента.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ТаблицаДанныхДокумента.Дата КАК ДатаДокумента,
	|	ТаблицаДанныхДокумента.Валюта КАК Валюта,
	|
	|	ЕСТЬNULL(Остатки.ВидЗапасов, Неопределено) КАК ВидЗапасов,
	|	ЕСТЬNULL(Остатки.ВидЗапасовПолучателя, Неопределено) КАК ВидЗапасовПолучателя,
	|	ЕСТЬNULL(Остатки.ВидЗапасовОтгрузки, Неопределено) КАК ВидЗапасовОтгрузки,
	|	ЕСТЬNULL(РеквизитыВидаЗапасовОтгрузки.РеализацияЗапасовДругойОрганизации, ЛОЖЬ) КАК ОтгрузкаЗапасовДругойОрганизации,
	|	ЕСТЬNULL(Остатки.НомерГТД, Неопределено) КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетПоГТД
	|				И &ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
	|				И (Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) ИЛИ Остатки.НомерГТД ЕСТЬ NULL)
	|				И НЕ (ЕСТЬNULL(РеквизитыВидаЗапасов.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) В (ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.МатериалДавальца),
	|																													ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПродукцияДавальца)))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеУказанНомерГТД,
	|
	|	ЕСТЬNULL(Остатки.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) КАК ДатаПоступления,
	|	ЕСТЬNULL(Остатки.СкладОтгрузки, Неопределено) КАК СкладОтгрузки,
	|
	|	ЕСТЬNULL(Остатки.КоличествоОстатокВсего, 0) КАК КоличествоОстатокВсего,
	|	ЕСТЬNULL(Остатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	|	ЕСТЬNULL(Остатки.КоличествоПоРНПТОстатокВсего, 0) КАК КоличествоПоРНПТОстатокВсего,
	|	ЕСТЬNULL(Остатки.СуммаОстаток, 0) КАК СуммаОстаток,
	|	ЕСТЬNULL(АналитикаОтгрузки.КлючАналитики, ТаблицаДокумента.АналитикаУчетаНоменклатуры) КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|				И ТаблицаДокумента.ДокументРеализации <> НЕОПРЕДЕЛЕНО
	|			ТОГДА ТаблицаДокумента.ДокументРеализации
	|		ИНАЧЕ ЕСТЬNULL(Остатки.ДокументРеализации, Неопределено)
	|	КОНЕЦ КАК ДокументРеализации,
	|	ТаблицаДокумента.Период КАК Период
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстатки КАК Остатки
	|		ПО ТаблицаДокумента.НоменклатураОстатков = Остатки.Номенклатура
	|			И ТаблицаДокумента.ХарактеристикаОстатков = Остатки.Характеристика
	|			И ТаблицаДокумента.СерияОстатков = Остатки.Серия
	|			И ТаблицаДокумента.СкладОстатков = Остатки.Склад
	|			И (ТаблицаДокумента.Назначение = Остатки.Назначение
	|				ИЛИ ТаблицаДанныхДокумента.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера),
	|																	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратТоваровОтКлиента),
	|																	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтПереработчика),
	|																	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СторноСписанияНаРасходы)))
	|			И ТаблицаДокумента.СтатьяКалькуляцииОстатков = &ПустоеЗначениеСтатьиКалькуляции
	|			И (ТаблицаДокумента.ДокументРеализации = Остатки.ДокументРеализации
	|				ИЛИ ТаблицаДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера))
	|			И (ТаблицаДокумента.НомерГТД = Остатки.НомерГТД
	|				ИЛИ ТаблицаДокумента.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|				ИЛИ Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|				ИЛИ &БезОтбораПоНомерамГТД)
	|			И (ТаблицаДокумента.Период = ДАТАВРЕМЯ(1,1,1)
	|				ИЛИ ТаблицаДокумента.Период <= Остатки.ДатаПоступления)
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Ключи
	|		ПО Ключи.Ссылка = Остатки.АналитикаУчетаНоменклатуры
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаОтгрузки
	|		ПО АналитикаОтгрузки.Номенклатура = Ключи.Номенклатура
	|			И АналитикаОтгрузки.Характеристика = Ключи.Характеристика
	|			И АналитикаОтгрузки.Серия = Ключи.Серия
	|			И АналитикаОтгрузки.МестоХранения = Остатки.СкладОтгрузки
	|			И АналитикаОтгрузки.Назначение = Остатки.НазначениеОтгрузки
	|			И АналитикаОтгрузки.СтатьяКалькуляции = Ключи.СтатьяКалькуляции
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступления
	|		ПО ДатыПоступления.ВидЗапасов = Остатки.ВидЗапасов
	|			И ДатыПоступления.Номенклатура = Ключи.Номенклатура
	|			И ДатыПоступления.Характеристика = Ключи.Характеристика
	|			И ДатыПоступления.Серия = Ключи.Серия
	|			И ДатыПоступления.Назначение = Ключи.Назначение
	|			И ДатыПоступления.НомерГТД = Остатки.НомерГТД
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиТоваров
	|		ПО КлючиТоваров.Ссылка = ТаблицаДокумента.АналитикаУчетаНоменклатуры
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасов
	|		ПО РеквизитыВидаЗапасов.Ссылка = Остатки.ВидЗапасов
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК РеквизитыВидаЗапасовОтгрузки
	|		ПО РеквизитыВидаЗапасовОтгрузки.Ссылка = Остатки.ВидЗапасовОтгрузки
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки,
	|	ОстаткиДокумента,
	|	Период,
	|	ДатаПоступления,
	|	ДатыПоступления.ДатаПоступления
	|
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(КоличествоПоРНПТ),
	|	МАКСИМУМ(СуммаСНДС),
	|	МАКСИМУМ(СтавкаНДС),
	|	МАКСИМУМ(СуммаНДС),
	|	МАКСИМУМ(СуммаВознаграждения),
	|	МАКСИМУМ(СуммаНДСВознаграждения),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	НомерСтроки";
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												Запрос.Текст,
												"ТаблицаТоваров",
												"КоличествоПоРНПТ",
												"СУММА(ТаблицаТоваров.КоличествоПоРНПТ)",
												"0");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												Запрос.Текст,
												"ТаблицаТоваров",
												"ДокументРеализации",
												"ТаблицаТоваров.ДокументРеализации",
												"НЕОПРЕДЕЛЕНО");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												Запрос.Текст,
												"ТаблицаТоваров",
												"Период",
												"ТаблицаТоваров.Период",
												"ДАТАВРЕМЯ(1,1,1)");
											
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												Запрос.Текст,
												"ТаблицаВидыЗапасов",
												"Период",
												"ТаблицаВидыЗапасов.Период",
												"ДАТАВРЕМЯ(1,1,1)");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												Запрос.Текст,
												"ТаблицаВидыЗапасов",
												"КоличествоПоРНПТ",
												"СУММА(ТаблицаВидыЗапасов.КоличествоПоРНПТ)",
												"0");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												Запрос.Текст,
												"ТаблицаОстатков",
												"КоличествоПоРНПТОстаток",
												"Остатки.КоличествоПоРНПТОстаток",
												"0");
	
	ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД = ?(ДополнительныеСвойства.Свойство("КонтролироватьНомераГТД"),
																	ДополнительныеСвойства.КонтролироватьНомераГТД,
																	ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД"));
	
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинУчета",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД",
								ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД);
	Запрос.УстановитьПараметр("БезОтбораПоНомерамГТД", ПараметрыЗаполнения.БезОтбораПоНомерамГТД);
	Запрос.УстановитьПараметр("ПустыеЗначенияДокументаРеализации", Новый Массив);
	
	Запрос.Параметры.ПустыеЗначенияДокументаРеализации.Добавить(Документы.РеализацияТоваровУслуг.ПустаяСсылка());
	Запрос.Параметры.ПустыеЗначенияДокументаРеализации.Добавить(Документы.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка());
	Запрос.Параметры.ПустыеЗначенияДокументаРеализации.Добавить(Документы.ОтчетОРозничныхПродажах.ПустаяСсылка());
	Запрос.Параметры.ПустыеЗначенияДокументаРеализации.Добавить(Неопределено);
	
	Запрос.УстановитьПараметр("ПустоеЗначениеСтатьиКалькуляции", "");
	//++ НЕ УТ
	Запрос.УстановитьПараметр("ПустоеЗначениеСтатьиКалькуляции", Справочники.СтатьиКалькуляции.ПустаяСсылка());
	//-- НЕ УТ
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДополнительныеСвойства, Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
	
КонецФункции

// Формирует запрос по данным ИБ для заполнения видов запасов документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц	- менеджер временных таблиц, содержащий таблицы, необходимые для
//															для выполнения алгоритма распределения.
//	ДополнительныеСвойства	- Структура					- дополнительные свойства документа, для которого осуществляется
//															заполнение видов запасов.
//
// Возвращаемое значение:
//	Запрос - запрос обращения к ИБ.
//
Функция ЗапросРаспределенияСУчетомПриоритетовТаблицыТоваровНаТаблицуОстатков(МенеджерВременныхТаблиц,
																			ДополнительныеСвойства)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаТоваров.НомерСтроки)						КАК НомерСтроки,
	|	ТаблицаДанныхДокумента.Дата									КАК ДатаДокумента,
	|	&ТекстПоляТаблицаТоваровХозяйственнаяОперация_				КАК ХозяйственнаяОперация,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры					КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры					КАК АналитикаОстатков,
	|	ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения				КАК ЕдиницаИзмерения,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.КодТНВЭД.СырьевойТовар, ЛОЖЬ)	КАК СырьевойТовар,
	|	ТаблицаТоваров.Номенклатура.ПодакцизныйТовар				КАК ЭтоПодакцизныйТовар,
	|	ТаблицаТоваров.Номенклатура.ВестиУчетПоГТД					КАК ВестиУчетПоГТД,
	|	ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета			КАК ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.Номенклатура									КАК Номенклатура,
	|	ТаблицаТоваров.Характеристика								КАК Характеристика,
	|	ТаблицаТоваров.Назначение									КАК Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерий В (14, 18)
	|			ТОГДА ТаблицаТоваров.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ														КАК Серия,
	|	СУММА(ТаблицаТоваров.Количество)							КАК Количество,
	|	&ТекстПоляТаблицаТоваровКоличествоПоРНПТ_					КАК КоличествоПоРНПТ,
	|	&ТекстПоляТаблицаТоваровВидЦены_							КАК ВидЦены,
	|	&ТекстПоляТаблицаТоваровСтавкаНДС_							КАК СтавкаНДС,
	|	&ТекстПоляТаблицаТоваровСуммаСНДС_							КАК СуммаСНДС,
	|	&ТекстПоляТаблицаТоваровСуммаНДС_							КАК СуммаНДС,
	|	&ТекстПоляТаблицаТоваровСуммаВознаграждения_				КАК СуммаВознаграждения,
	|	&ТекстПоляТаблицаТоваровСуммаНДСВознаграждения_				КАК СуммаНДСВознаграждения,
	|	ТаблицаТоваров.Склад										КАК Склад,
	|	ТаблицаТоваров.НомерГТД										КАК НомерГТД,
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Заказ, НЕОПРЕДЕЛЕНО)		КАК Заказ,
	|	&ТекстПоляТаблицаТоваровДокументПередачи_					КАК ДокументПередачи,
	|	&ТекстПоляТаблицаТоваровКорАналитикаУчетаНоменклатуры_		КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов							КАК ПодбиратьВидыЗапасов
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК ТаблицаНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = ТаблицаНоменклатуры.Ссылка
	|
	|ГДЕ
	|	ТаблицаТоваров.Номенклатура.ТипНоменклатуры В(ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар),
	|													ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанныхДокумента.Дата,
	|	&ТекстПоляТаблицаТоваровХозяйственнаяОперация_,
	|	ТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаТоваров.Номенклатура.ЕдиницаИзмерения,
	|	ЕСТЬNULL(ТаблицаНоменклатуры.КодТНВЭД.СырьевойТовар, ЛОЖЬ),
	|	ТаблицаТоваров.Номенклатура.ПодакцизныйТовар,
	|	ТаблицаТоваров.Номенклатура.ВестиУчетПоГТД,
	|	ТаблицаТоваров.Номенклатура.ГруппаФинансовогоУчета,
	|	ТаблицаТоваров.Номенклатура,
	|	ТаблицаТоваров.Характеристика,
	|	ТаблицаТоваров.Назначение,
	|	ВЫБОР
	|		КОГДА ТаблицаТоваров.СтатусУказанияСерий В (14, 18)
	|			ТОГДА ТаблицаТоваров.Серия
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ,
	|	&ТекстПоляТаблицаТоваровВидЦены_,
	|	ТаблицаТоваров.Склад,
	|	ТаблицаТоваров.НомерГТД,
	|	ЕСТЬNULL(ТаблицаТоваров.Назначение.Заказ, НЕОПРЕДЕЛЕНО),
	|	&ТекстПоляТаблицаТоваровДокументПередачи_,
	|	&ТекстПоляТаблицаТоваровКорАналитикаУчетаНоменклатуры_,
	|	ТаблицаТоваров.ПодбиратьВидыЗапасов
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Дата						КАК Период,
	|	ТаблицаДанныхДокумента.Организация				КАК Организация,
	|	ТаблицаДанныхДокумента.Партнер					КАК ВладелецТовара,
	|	ТаблицаДанныхДокумента.Контрагент				КАК Контрагент,
	|	ТаблицаДанныхДокумента.Соглашение				КАК Соглашение,
	|	ТаблицаДанныхДокумента.Договор					КАК Договор,
	|	ТаблицаДанныхДокумента.ХозяйственнаяОперация	КАК ХозяйственнаяОперация,
	|	ТаблицаДанныхДокумента.Валюта					КАК Валюта,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС		КАК НалогообложениеНДС,
	|	ТаблицаДанныхДокумента.ТипЗапасов				КАК ТипЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка) КАК ГруппаФинансовогоУчета
	|ИЗ
	|	ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки					КАК НомерСтроки,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасов				КАК ТипЗапасов,
	|	ВидыЗапасовПоУмолчанию.ТипЗапасовРезервы		КАК ТипЗапасовРезервы,
	|	ВидыЗапасовПоУмолчанию.ВладелецТовара			КАК ВладелецТовара,
	|	ВидыЗапасовПоУмолчанию.Контрагент				КАК Контрагент,
	|	ВидыЗапасовПоУмолчанию.Договор					КАК Договор,
	|	ТаблицаДокумента.Склад							КАК Склад,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.ЕдиницаИзмерения				КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.СырьевойТовар					КАК СырьевойТовар,
	|	ВЫБОР
	|		КОГДА &ИспользоватьГруппыФинУчета
	|			ТОГДА ЕСТЬNULL(ТаблицаДокумента.ГруппаФинансовогоУчета, ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ГруппыФинансовогоУчетаНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ											КАК ГруппаФинансовогоУчета,
	|	ТаблицаДокумента.Номенклатура					КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика					КАК Характеристика,
	|	ТаблицаДокумента.Серия							КАК Серия,
	|	ТаблицаДокумента.Количество						КАК Количество,
	|	ТаблицаДокумента.КоличествоПоРНПТ				КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.ВидЦены						КАК ВидЦены,
	|	ТаблицаДокумента.СтавкаНДС						КАК СтавкаНДС,
	|	ТаблицаДокумента.КорАналитикаУчетаНоменклатуры	КАК КорАналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.ХозяйственнаяОперация			КАК ХозяйственнаяОперация
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРеквизитовВидовЗапасовПоУмолчанию КАК ВидыЗапасовПоУмолчанию
	|		ПО ВидыЗапасовПоУмолчанию.НомерСтроки = ТаблицаДокумента.НомерСтроки
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТаблицаВидыЗапасов.НомерСтроки)			КАК НомерСтроки,
	|	ТаблицаДанныхДокумента.Дата							КАК ДатаДокумента,
	|	ТаблицаДанныхДокумента.Организация					КАК ОрганизацияДокумента,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС			КАК НалогообложениеНДСДокумента,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры		КАК АналитикаУчетаНоменклатуры,
	|	&ТекстПоляТаблицаВидыЗапасовДокументПередачи_		КАК ДокументПередачи,
	|	ТаблицаВидыЗапасов.ВидЗапасов						КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов			КАК ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Организация			КАК Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара		КАК ВладелецТовара,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалогообложениеНДС	КАК НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.НомерГТД							КАК НомерГТД,
	|	&ТекстПоляТаблицаВидыЗапасовАналитикаУчетаНоменклатурыОтгрузки_ КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	&ТекстПоляТаблицаВидыЗапасовВидЗапасовОтгрузки_		КАК ВидЗапасовОтгрузки,
	|	СУММА(ТаблицаВидыЗапасов.Количество)				КАК Количество,
	|	&ТекстПоляТаблицаВидыЗапасовКоличествоПоРНПТ_		КАК КоличествоПоРНПТ,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную		КАК ВидыЗапасовУказаныВручную
	|ПОМЕСТИТЬ ТаблицаВидыЗапасовСводно
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанныхДокумента.Дата,
	|	ТаблицаДанныхДокумента.Организация,
	|	ТаблицаДанныхДокумента.НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	&ТекстПоляТаблицаВидыЗапасовДокументПередачи_,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ТипЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов.Организация,
	|	ТаблицаВидыЗапасов.ВидЗапасов.ВладелецТовара,
	|	ТаблицаВидыЗапасов.ВидЗапасов.НалогообложениеНДС,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	&ТекстПоляТаблицаВидыЗапасовАналитикаУчетаНоменклатурыОтгрузки_,
	|	&ТекстПоляТаблицаВидыЗапасовВидЗапасовОтгрузки_,
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД,
	|	ДокументПередачи,
	|	АналитикаУчетаНоменклатурыОтгрузки,
	|	ВидЗапасовОтгрузки
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Остатки.Организация = РеквизитыДокумента.Организация
	|				И НЕ ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА 1
	|		ИНАЧЕ 3
	|	КОНЕЦ										КАК Приоритет,
	|	Остатки.Организация							КАК Организация,
	|	Остатки.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|	Остатки.ДокументПередачи					КАК ДокументПередачи,
	|	Остатки.Номенклатура						КАК Номенклатура,
	|	Остатки.Характеристика						КАК Характеристика,
	|	Остатки.Назначение							КАК Назначение,
	|	Остатки.Серия								КАК Серия,
	|	Остатки.ВидЗапасов							КАК ВидЗапасов,
	|	ВидыЗапасов.ТипЗапасов						КАК ТипЗапасов,
	|	ВидыЗапасов.Организация						КАК ОрганизацияВидаЗапасов,
	|	ВидыЗапасов.ВладелецТовара					КАК ВладелецТовара,
	|	ВидыЗапасов.НалогообложениеНДС				КАК НалогообложениеНДСВидаЗапасов,
	|	ВидыЗапасов.Договор.ПорядокОформленияСписанияНедостачПринятыхНаХранениеТоваров КАК ПорядокОформленияСписанияНедостачПринятыхНаХранениеТоваров,
	|	Остатки.НомерГТД							КАК НомерГТД,
	|	Остатки.ДатаПоступления						КАК ДатаПоступления,
	|	РеквизитыДокумента.Организация				КАК ОрганизацияОтгрузки,
	|	Остатки.АналитикаУчетаНоменклатурыОтгрузки	КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	Остатки.ВидЗапасовОтгрузки					КАК ВидЗапасовОтгрузки,
	|	Остатки.КоличествоОстаток					КАК КоличествоОстатокВсего,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ТаблицаВидыЗапасовСводно.Количество, 0) <= Остатки.КоличествоОстаток
	|			ТОГДА ЕСТЬNULL(ТаблицаВидыЗапасовСводно.Количество, 0)
	|		ИНАЧЕ Остатки.КоличествоОстаток
	|	КОНЕЦ										КАК КоличествоОстаток,
	|	&ТекстПоляТаблицаОстатковКоличествоПоРНПТОстаток_ КАК КоличествоПоРНПТОстатокВсего,
	|	ВЫБОР
	|		КОГДА Остатки.КоличествоОстаток <> 0
	|			ТОГДА Остатки.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ										КАК СуммаОстаток
	|ПОМЕСТИТЬ ВтОстатки
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО Остатки.ВидЗапасов = ВидыЗапасов.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|		ПО ИСТИНА
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаВидыЗапасовСводно КАК ТаблицаВидыЗапасовСводно
	|		ПО Остатки.АналитикаУчетаНоменклатуры = ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатуры
	|			И Остатки.ВидЗапасов = ТаблицаВидыЗапасовСводно.ВидЗапасов
	|			И Остатки.НомерГТД = ТаблицаВидыЗапасовСводно.НомерГТД
	|			И Остатки.ДокументПередачи = ТаблицаВидыЗапасовСводно.ДокументПередачи
	|			И Остатки.АналитикаУчетаНоменклатурыОтгрузки = ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатурыОтгрузки
	|			И Остатки.ВидЗапасовОтгрузки = ТаблицаВидыЗапасовСводно.ВидЗапасовОтгрузки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Остатки.Организация = РеквизитыДокумента.Организация
	|				И НЕ ЕСТЬNULL(ВидыЗапасов.ТипЗапасов, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ										КАК Приоритет,
	|	Остатки.Организация							КАК Организация,
	|	Остатки.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|	Остатки.ДокументПередачи					КАК ДокументПередачи,
	|	Остатки.Номенклатура						КАК Номенклатура,
	|	Остатки.Характеристика						КАК Характеристика,
	|	Остатки.Назначение							КАК Назначение,
	|	Остатки.Серия								КАК Серия,
	|	Остатки.ВидЗапасов							КАК ВидЗапасов,
	|	ВидыЗапасов.ТипЗапасов						КАК ТипЗапасов,
	|	ВидыЗапасов.Организация						КАК ОрганизацияВидаЗапасов,
	|	ВидыЗапасов.ВладелецТовара					КАК ВладелецТовара,
	|	ВидыЗапасов.НалогообложениеНДС				КАК НалогообложениеНДСВидаЗапасов,
	|	ВидыЗапасов.Договор.ПорядокОформленияСписанияНедостачПринятыхНаХранениеТоваров КАК ПорядокОформленияСписанияНедостачПринятыхНаХранениеТоваров,
	|	Остатки.НомерГТД							КАК НомерГТД,
	|	Остатки.ДатаПоступления						КАК ДатаПоступления,
	|	РеквизитыДокумента.Организация				КАК ОрганизацияОтгрузки,
	|	Остатки.АналитикаУчетаНоменклатурыОтгрузки	КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	Остатки.ВидЗапасовОтгрузки					КАК ВидЗапасовОтгрузки,
	|	Остатки.КоличествоОстаток					КАК КоличествоОстатокВсего,
	|	ВЫБОР
	|		КОГДА Остатки.КоличествоОстаток > ЕСТЬNULL(ТаблицаВидыЗапасовСводно.Количество, 0)
	|			ТОГДА Остатки.КоличествоОстаток - ЕСТЬNULL(ТаблицаВидыЗапасовСводно.Количество, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ										КАК КоличествоОстаток,
	|	&ТекстПоляТаблицаОстатковКоличествоПоРНПТОстаток_ КАК КоличествоПоРНПТОстатокВсего,
	|	ВЫБОР
	|		КОГДА Остатки.КоличествоОстаток <> 0
	|			ТОГДА Остатки.СуммаОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ										КАК СуммаОстаток
	|ИЗ
	|	ТаблицаОстатков КАК Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО Остатки.ВидЗапасов = ВидыЗапасов.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|		ПО ИСТИНА
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВидыЗапасовСводно КАК ТаблицаВидыЗапасовСводно
	|		ПО Остатки.АналитикаУчетаНоменклатуры = ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатуры
	|			И Остатки.ВидЗапасов = ТаблицаВидыЗапасовСводно.ВидЗапасов
	|			И Остатки.НомерГТД = ТаблицаВидыЗапасовСводно.НомерГТД
	|			И Остатки.ДокументПередачи = ТаблицаВидыЗапасовСводно.ДокументПередачи
	|			И Остатки.АналитикаУчетаНоменклатурыОтгрузки = ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатурыОтгрузки
	|			И Остатки.ВидЗапасовОтгрузки = ТаблицаВидыЗапасовСводно.ВидЗапасовОтгрузки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	0,
	|	ТаблицаВидыЗапасовСводно.Организация,
	|	ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасовСводно.ДокументПередачи,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Назначение,
	|	Аналитика.Серия,
	|	ТаблицаВидыЗапасовСводно.ВидЗапасов,
	|	ВидыЗапасов.ТипЗапасов,
	|	ВидыЗапасов.Организация,
	|	ВидыЗапасов.ВладелецТовара,
	|	ВидыЗапасов.НалогообложениеНДС,
	|	ВидыЗапасов.Договор.ПорядокОформленияСписанияНедостачПринятыхНаХранениеТоваров,
	|	ТаблицаВидыЗапасовСводно.НомерГТД,
	|	ДАТАВРЕМЯ(1, 1, 1),
	|	РеквизитыДокумента.Организация,
	|	ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатурыОтгрузки,
	|	ТаблицаВидыЗапасовСводно.ВидЗапасовОтгрузки,
	|	ТаблицаВидыЗапасовСводно.Количество,
	|	ТаблицаВидыЗапасовСводно.Количество,
	|	ТаблицаВидыЗапасовСводно.КоличествоПоРНПТ,
	|	0
	|ИЗ
	|	ТаблицаВидыЗапасовСводно КАК ТаблицаВидыЗапасовСводно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасовСводно.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ТаблицаВидыЗапасовСводно.ВидЗапасов = ВидыЗапасов.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК РеквизитыДокумента
	|		ПО ВидыЗапасов.Организация = РеквизитыДокумента.Организация
	|
	|ГДЕ
	|	ТаблицаВидыЗапасовСводно.ВидыЗапасовУказаныВручную = ИСТИНА
	|	И &ПроводитьБезКонтроляОстатковТоваровОрганизаций = ИСТИНА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	НомерГТД
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	// данные документа
	|	ЕСТЬNULL(Остатки.Приоритет, 0)						КАК Приоритет,
	|	ТаблицаДокумента.НомерСтроки						КАК НомерСтроки,
	|	ТаблицаДокумента.ДатаДокумента						КАК ДатаДокумента,
	|	ТаблицаДокумента.ХозяйственнаяОперация				КАК ХозяйственнаяОперация,
	|	ТаблицаДокумента.Склад								КАК Склад,
	|	ТаблицаДокумента.АналитикаУчетаНоменклатуры			КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаДокумента.ЕдиницаИзмерения					КАК ЕдиницаИзмерения,
	|	ТаблицаДокумента.СырьевойТовар						КАК СырьевойТовар,
	|	ТаблицаДокумента.ЭтоПодакцизныйТовар				КАК ЭтоПодакцизныйТовар,
	|	ТаблицаДокумента.ГруппаФинансовогоУчета				КАК ГруппаФинансовогоУчета,
	|	ТаблицаДокумента.Номенклатура						КАК Номенклатура,
	|	ТаблицаДокумента.Характеристика						КАК Характеристика,
	|	ТаблицаДокумента.Назначение							КАК Назначение,
	|	ТаблицаДокумента.Серия								КАК Серия,
	|	ТаблицаДокумента.Количество							КАК Количество,
	|	ТаблицаДокумента.КоличествоПоРНПТ					КАК КоличествоПоРНПТ,
	|	ТаблицаДокумента.СтавкаНДС							КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаСНДС							КАК СуммаСНДС,
	|	ТаблицаДокумента.СуммаНДС							КАК СуммаНДС,
	|	ТаблицаДокумента.СуммаВознаграждения				КАК СуммаВознаграждения,
	|	ТаблицаДокумента.СуммаНДСВознаграждения				КАК СуммаНДСВознаграждения,
	|	ТаблицаДокумента.КорАналитикаУчетаНоменклатуры		КАК КорАналитикаУчетаНоменклатуры,
	|
	// данные остатков
	|	ЕСТЬNULL(Остатки.ВидЗапасов, НЕОПРЕДЕЛЕНО)			КАК ВидЗапасов,
	|	ЕСТЬNULL(Остатки.ТипЗапасов, НЕОПРЕДЕЛЕНО)			КАК ТипЗапасов,
	|	ЕСТЬNULL(Остатки.ОрганизацияВидаЗапасов, НЕОПРЕДЕЛЕНО) КАК ОрганизацияОстатка,
	|	ЕСТЬNULL(Остатки.ВладелецТовара, Неопределено)		КАК ВладелецТовара,
	|	ЕСТЬNULL(Остатки.ПорядокОформленияСписанияНедостачПринятыхНаХранениеТоваров, Неопределено) КАК ПорядокОформленияСписанияНедостачПринятыхНаХранениеТоваров,
	|	ЕСТЬNULL(Остатки.НомерГТД, Неопределено)			КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ВестиУчетПоГТД
	|				И &ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД
	|				И (Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|					ИЛИ Остатки.НомерГТД ЕСТЬ NULL)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ												КАК НеУказанНомерГТД,
	|	ЕСТЬNULL(Остатки.ОрганизацияОтгрузки, НЕОПРЕДЕЛЕНО)	КАК ОрганизацияОтгрузки,
	|	ЕСТЬNULL(Остатки.ДатаПоступления, ДАТАВРЕМЯ(2399, 1, 1)) КАК ДатаПоступления,
	|	ЕСТЬNULL(Остатки.ДокументПередачи, Неопределено)	КАК ДокументПередачи,
	|	ЕСТЬNULL(Остатки.АналитикаУчетаНоменклатурыОтгрузки, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ЕСТЬNULL(Остатки.ВидЗапасовОтгрузки, НЕОПРЕДЕЛЕНО)	КАК ВидЗапасовОтгрузки,
	|	ЕСТЬNULL(ТаблицаДокумента.Заказ, НЕОПРЕДЕЛЕНО)		КАК Заказ,
	|	ЕСТЬNULL(Остатки.КоличествоОстатокВсего, 0)			КАК КоличествоОстатокВсего,
	|	ЕСТЬNULL(Остатки.КоличествоОстаток, 0)				КАК КоличествоОстаток,
	|	ЕСТЬNULL(Остатки.КоличествоПоРНПТОстатокВсего, 0)	КАК КоличествоПоРНПТОстатокВсего,
	|	ЕСТЬNULL(Остатки.СуммаОстаток, 0)					КАК СуммаОстаток,
	|
	// данные для генерации нового вида запасов по интеркампани
	|	ЕСТЬNULL(Настройка.СпособПередачиТоваров, ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)) КАК НастройкаПередачи,
	|	ВЫБОР
	|		КОГДА НЕ Настройка.ОрганизацияВладелец ЕСТЬ NULL
	|			ТОГДА Настройка.ОрганизацияВладелец
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК НовыйВидЗапасовВладелецТовара,
	|	ВЫБОР
	|		КОГДА НЕ Настройка.Договор ЕСТЬ NULL
	|			ТОГДА Настройка.Договор
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК НовыйВидЗапасовДоговор,
	|	ЕСТЬNULL(Настройка.Валюта, НЕОПРЕДЕЛЕНО)			КАК НовыйВидЗапасовВалюта,
	|	ВЫБОР КОГДА НЕ Настройка.ОрганизацияВладелец ЕСТЬ NULL
	|		ТОГДА Настройка.ОрганизацияВладелец
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ												КАК НовыйВидЗапасовКонтрагент,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Настройка.СпособПередачиТоваров, ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|				И ЕСТЬNULL(Остатки.ТипЗапасов, ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ												КАК НовыйВидЗапасовЭтоСубкомиссия,
	|	ЕСТЬNULL(Остатки.НалогообложениеНДСВидаЗапасов, НЕОПРЕДЕЛЕНО) КАК НовыйВидЗапасовНалогообложениеКомитента,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(Настройка.СпособПередачиТоваров, ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.НеПередается)) = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.ПередачаНаКомиссию)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.Товар)
	|	КОНЕЦ												КАК НовыйВидЗапасовТипЗапасов,
	|	ТаблицаДокумента.НомерГТД = Остатки.НомерГТД		КАК НомерГТДСовпадает
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтОстатки КАК Остатки
	|		ПО ТаблицаДокумента.АналитикаОстатков = Остатки.АналитикаУчетаНоменклатуры
	|			И (ТаблицаДокумента.ДокументПередачи = Остатки.ДокументПередачи
	|				ИЛИ ТаблицаДокумента.ДокументПередачи = НЕОПРЕДЕЛЕНО
	|					И ТаблицаДокумента.ПодбиратьВидыЗапасов)
	|			И (ТаблицаДокумента.НомерГТД = Остатки.НомерГТД
	|				ИЛИ ТаблицаДокумента.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)
	|				ИЛИ Остатки.НомерГТД = ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка))
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступления
	|		ПО ДатыПоступления.ВидЗапасов = Остатки.ВидЗапасов
	|			И ДатыПоступления.Номенклатура = Остатки.Номенклатура
	|			И ДатыПоступления.Характеристика = Остатки.Характеристика
	|			И ДатыПоступления.Серия = Остатки.Серия
	|			И ДатыПоступления.Назначение = Остатки.Назначение
	|			И ДатыПоступления.НомерГТД = Остатки.НомерГТД
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК Настройка
	|		ПО Остатки.ТипЗапасов = Настройка.ТипЗапасов
	|			И Остатки.ОрганизацияВидаЗапасов = Настройка.ОрганизацияВладелец
	|			И Остатки.ОрганизацияОтгрузки = Настройка.ОрганизацияПродавец
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки ВОЗР,
	|	Приоритет ВОЗР,
	|	ТаблицаДокумента.НомерГТД = Остатки.НомерГТД УБЫВ,
	|	ДатаПоступления ВОЗР,
	|	ДатыПоступления.ДатаПоступления ВОЗР,
	|	ТипЗапасов,
	|	ОрганизацияОстатка,
	|	ВладелецТовара,
	|	ВидЗапасов
	|
	|ИТОГИ
	|	МАКСИМУМ(Количество),
	|	МАКСИМУМ(КоличествоПоРНПТ),
	|	МАКСИМУМ(СуммаСНДС),
	|	МАКСИМУМ(СтавкаНДС),
	|	МАКСИМУМ(СуммаНДС),
	|	МАКСИМУМ(СуммаВознаграждения),
	|	МАКСИМУМ(СуммаНДСВознаграждения),
	|	СУММА(КоличествоОстаток)
	|ПО
	|	НомерСтроки
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаДокумента
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаВидыЗапасовСводно
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОстатки";
	
#Область ЗаменаИспользованияНеобязательныхПолей
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаТоваров",
												"КоличествоПоРНПТ",
												"СУММА(ТаблицаТоваров.КоличествоПоРНПТ)",
												"0");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаТоваров",
												"ВидЦены",
												"ТаблицаТоваров.ВидЦены",
												"ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаТоваров",
												"ДокументПередачи",
												"ТаблицаТоваров.ДокументПередачи",
												"НЕОПРЕДЕЛЕНО");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаТоваров",
												"СтавкаНДС",
												"МАКСИМУМ(ТаблицаТоваров.СтавкаНДС)",
												"ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаТоваров",
												"КорАналитикаУчетаНоменклатуры",
												"ТаблицаТоваров.КорАналитикаУчетаНоменклатуры",
												"ТаблицаТоваров.АналитикаУчетаНоменклатуры");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаТоваров",
												"ХозяйственнаяОперация",
												"ТаблицаТоваров.ХозяйственнаяОперация",
												"ТаблицаДанныхДокумента.ХозяйственнаяОперация");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаТоваров",
												"СуммаСНДС",
												"СУММА(ТаблицаТоваров.СуммаСНДС)",
												"0");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаТоваров",
												"СуммаНДС",
												"СУММА(ТаблицаТоваров.СуммаНДС)",
												"0");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаТоваров",
												"СуммаВознаграждения",
												"СУММА(ТаблицаТоваров.СуммаВознаграждения)",
												"0");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаТоваров",
												"СуммаНДСВознаграждения",
												"СУММА(ТаблицаТоваров.СуммаНДСВознаграждения)",
												"0");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаВидыЗапасов",
												"ДокументПередачи",
												"ТаблицаВидыЗапасов.ДокументПередачи",
												"НЕОПРЕДЕЛЕНО");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаВидыЗапасов",
												"АналитикаУчетаНоменклатурыОтгрузки",
												"ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки",
												"НЕОПРЕДЕЛЕНО");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаВидыЗапасов",
												"ВидЗапасовОтгрузки",
												"ТаблицаВидыЗапасов.ВидЗапасовОтгрузки",
												"НЕОПРЕДЕЛЕНО");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаВидыЗапасов",
												"КоличествоПоРНПТ",
												"СУММА(ТаблицаВидыЗапасов.КоличествоПоРНПТ)",
												"0");
	
	ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
												ТекстЗапроса,
												"ТаблицаОстатков",
												"КоличествоПоРНПТОстаток",
												"Остатки.КоличествоПоРНПТОстаток",
												"0");
	
#КонецОбласти
	
	ПроводитьБезКонтроляОстатковТоваровОрганизаций = ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций 
														ИЛИ НЕ Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить();
	ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД = ?(ДополнительныеСвойства.Свойство("КонтролироватьНомераГТД"),
																	ДополнительныеСвойства.КонтролироватьНомераГТД,
																	ПолучитьФункциональнуюОпцию("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ИспользоватьГруппыФинУчета",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	Запрос.УстановитьПараметр("ФормироватьВидыЗапасовПоСделкам",
								ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоСделкам"));
	Запрос.УстановитьПараметр("ПроводитьБезКонтроляОстатковТоваровОрганизаций",
								ПроводитьБезКонтроляОстатковТоваровОрганизаций);
	Запрос.УстановитьПараметр("ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД",
								ЗапретитьОформлениеОперацийСИмпортнымиТоварамиБезНомеровГТД);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	ПроверитьНеобходимостьПерезаполненияВидовЗапасовДокумента(ДополнительныеСвойства, Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Возврат Запрос;
	
КонецФункции

Процедура ЗаполнитьСтруктуруПоСтрокеТоваров(Структура, СтрокаТоваров, ДанныеШапки)
	
	Если ЗначениеЗаполнено(СтрокаТоваров.НовыйВидЗапасовВладелецТовара) Тогда
		Структура.ВладелецТовара = СтрокаТоваров.НовыйВидЗапасовВладелецТовара;
		Структура.Контрагент     = СтрокаТоваров.НовыйВидЗапасовКонтрагент;
		Структура.Договор        = СтрокаТоваров.НовыйВидЗапасовДоговор;
		Структура.Валюта         = СтрокаТоваров.НовыйВидЗапасовВалюта;
		Структура.ТипЗапасов     = СтрокаТоваров.НовыйВидЗапасовТипЗапасов;
	Иначе
		ЗаполнитьЗначенияСвойств(Структура, ДанныеШапки);
	КонецЕсли;
	Если ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета") Тогда
		Структура.ГруппаФинансовогоУчета = СтрокаТоваров.ГруппаФинансовогоУчета;
	Иначе
		Структура.ГруппаФинансовогоУчета = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьРезервыПоОрганизациямДляКонтроля(ДокументОбъект,
														МенеджерВременныхТаблиц,
														Отказ,
														ПараметрыЗаполненияВидовЗапасов)
	
	МассивОрганизаций = ОрганизацииДляКонтроляОстатков(МенеджерВременныхТаблиц);
	
	Если Не МассивОрганизаций.Количество() Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросДатыОстатков = Новый Запрос;
	ЗапросДатыОстатков.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	ЗапросДатыОстатков.Текст = 
	"ВЫБРАТЬ
	|	МИНИМУМ(ВТТоварыОрганизацийИзменения.Период) КАК Период
	|ИЗ
	|	ВТТоварыОрганизацийИзменения КАК ВТТоварыОрганизацийИзменения
	|ГДЕ
	|	ВТТоварыОрганизацийИзменения.ДляКонтроляОстатков";
	
	Выборка = ЗапросДатыОстатков.Выполнить().Выбрать();
	
	Если Не Выборка.Следующий()
		Или Не ЗначениеЗаполнено(Выборка.Период) Тогда
		
		Возврат;
		
	Иначе
		ДатаОстатков = Выборка.Период;
	КонецЕсли;
	
	ТаблицаРезервыПоОрганизациямДляКонтроля = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	ТаблицаОшибок = ТаблицаОшибокЗаполненияВидовЗапасов();
	СформироватьВТТаблицаРеквизитовВидовЗапасовПоУмолчанию(МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
	
	ЗапросРаспределенияРезервов = ЗапросРаспределенияРезервовПоТаблицеОстатков(МенеджерВременныхТаблиц,
																				ПараметрыЗаполненияВидовЗапасов);
	
	ЗапросУничтожить = Новый Запрос;
	ЗапросУничтожить.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Для Каждого Организация Из МассивОрганизаций Цикл
		
		// Доступные виды запасов были сформированы ранее при подготовке записи товаров
		// организаций (см. процедуру ЗапасыСервер.ПодготовитьЗаписьТоваровОрганизаций). 
		// Если в отборе строго одна текущая организация, то доступные виды запасов подходят
		// для текущей организации и перезаполнять их не нужно.
		Если ТипЗнч(ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация) = Тип("Массив")
			И ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация.Количество() = 1
			И ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.Организация[0] = Организация Тогда
			
			ТребуетсяПерезаполнитьДоступныеВидыЗапасов = Ложь;
			
		Иначе
			ТребуетсяПерезаполнитьДоступныеВидыЗапасов = Истина;
		КонецЕсли;
		
		Если ТребуетсяПерезаполнитьДоступныеВидыЗапасов Тогда
			ПараметрыЗаполненияПоОрганизации = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыЗаполненияВидовЗапасов);
			ПараметрыЗаполненияПоОрганизации.ОтборыВидовЗапасов.Организация = Организация;
			
			Если МенеджерВременныхТаблиц.Таблицы.Найти("ДоступныеВидыЗапасов") <> Неопределено Тогда
				ЗапросУничтожить.Текст = "УНИЧТОЖИТЬ ДоступныеВидыЗапасов";
				ЗапросУничтожить.Выполнить();
			КонецЕсли;
			
			Если МенеджерВременныхТаблиц.Таблицы.Найти("ВтОтборыОстатковОрганизаций") <> Неопределено Тогда
				ЗапросУничтожить.Текст = "УНИЧТОЖИТЬ ВтОтборыОстатковОрганизаций";
				
				ЗапросУничтожить.Выполнить();
			КонецЕсли;
			
			СформироватьВТДоступныеВидыЗапасов(ДокументОбъект,
												МенеджерВременныхТаблиц,
												ПараметрыЗаполненияПоОрганизации,
												"ДвиженияТоварыОрганизацийПередЗаписью");
			
			СформироватьВтОтборыОстатковПоТаблицеИзменений(МенеджерВременныхТаблиц);
			
		Иначе
			ПараметрыЗаполненияПоОрганизации = ПараметрыЗаполненияВидовЗапасов;
		КонецЕсли;
		
		СформироватьВТТаблицаОстатков("ТоварыОрганизаций",
										ДокументОбъект,
										МенеджерВременныхТаблиц,
										ПараметрыЗаполненияПоОрганизации,
										Ложь,
										ДатаОстатков);
		
		ЗапросРаспределенияРезервов.УстановитьПараметр("Период", ДатаОстатков);
		
		РаспределитьНовыеРезервыПоТаблицеОстатков(ЗапросРаспределенияРезервов,
													Организация,
													ПараметрыЗаполненияПоОрганизации,
													ТаблицаРезервыПоОрганизациямДляКонтроля,
													ТаблицаОшибок);
		
		Если ТаблицаОшибок.Количество() <> 0 Тогда
			
			Если ТипЗнч(ДокументОбъект) <> Тип("Структура") Тогда
				СообщитьОбОшибкахКонтроляТоваровОрганизаций(ДокументОбъект,
															ТаблицаОшибок,
															ПараметрыЗаполненияВидовЗапасов,
															Организация);
			КонецЕсли;
			
			Если Не ПараметрыСеанса.ПроводитьБезКонтроляОстатковТоваровОрганизаций
				И Константы.КонтролироватьОстаткиТоваровОрганизаций.Получить() Тогда
				
				Отказ = Истина;
				
			КонецЕсли;
			
			Если Не ДокументОбъект.ДополнительныеСвойства.Свойство("ПерезаполнитьВидыЗапасов")
				Или Не ДокументОбъект.ДополнительныеСвойства.ПерезаполнитьВидыЗапасов
				Или Отказ Тогда
				
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		
		Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТРезервыПоОрганизациямДляКонтроля") <> Неопределено Тогда
			Запрос.Текст = 
			"УНИЧТОЖИТЬ ВТРезервыПоОрганизациямДляКонтроля
			|;
			|";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ
		|	ВТРезервыПоОрганизациямДляКонтроля.ВидДвижения КАК ВидДвижения,
		|	ВТРезервыПоОрганизациямДляКонтроля.Период КАК Период,
		|	ВТРезервыПоОрганизациямДляКонтроля.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	ВТРезервыПоОрганизациямДляКонтроля.Организация КАК Организация,
		|	ВТРезервыПоОрганизациямДляКонтроля.ВидЗапасов КАК ВидЗапасов,
		|	ВТРезервыПоОрганизациямДляКонтроля.НомерГТД КАК НомерГТД,
		|	ВТРезервыПоОрганизациямДляКонтроля.Количество КАК Количество,
		|	ВТРезервыПоОрганизациямДляКонтроля.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		|	ВТРезервыПоОрганизациямДляКонтроля.КорОрганизация КАК КорОрганизация,
		|	ВТРезервыПоОрганизациямДляКонтроля.КорВидЗапасов КАК КорВидЗапасов
		|ПОМЕСТИТЬ ВТРезервыПоОрганизациямДляКонтроля
		|ИЗ
		|	&ТаблицаРезервыПоОрганизациямДляКонтроля КАК ВТРезервыПоОрганизациямДляКонтроля";
		
		Запрос.УстановитьПараметр("ТаблицаРезервыПоОрганизациямДляКонтроля", ТаблицаРезервыПоОрганизациямДляКонтроля);
		
		Запрос.Выполнить();
		
	КонецЦикла;
	
КонецПроцедуры

Функция РаспределитьРезервыТоваровОрганизацийПоПериодам(КоличествоПериодовПриФормированииРезервовОрганизаций,
														ТаблицаНовыеРезервыИсходная,
														МенеджерВременныхТаблиц) Экспорт
	
	Если КоличествоПериодовПриФормированииРезервовОрганизаций < 2
		Или ТаблицаНовыеРезервыИсходная.Количество() = 0 Тогда
		
		Возврат ТаблицаНовыеРезервыБезИзменений(ТаблицаНовыеРезервыИсходная, МенеджерВременныхТаблиц);
		
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаНовыеРезервы.Период КАК Период,
	|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыеРезервы.Организация КАК Организация,
	|	ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|	ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
	|	ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов,
	|	ТаблицаНовыеРезервы.Количество КАК Количество,
	|	ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаНовыеРезервы.ЭтоСторно КАК ЭтоСторно,
	|	ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения
	|ПОМЕСТИТЬ ВТТаблицаНовыеРезервы
	|ИЗ
	|	&ТаблицаНовыеРезервыИсходная КАК ТаблицаНовыеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(КОНЕЦПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ)) КАК Период,
	|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыеРезервы.Организация КАК Организация,
	|	ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|	СУММА(ТаблицаНовыеРезервы.Количество) КАК Количество,
	|	СУММА(ТаблицаНовыеРезервы.КоличествоПоРНПТ) КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ВтПриходРезерваСгруппированный
	|ИЗ
	|	ВТТаблицаНовыеРезервы КАК ТаблицаНовыеРезервы
	|ГДЕ
	|	ТаблицаНовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НЕ ТаблицаНовыеРезервы.ЭтоСторно
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыеРезервы.Организация,
	|	ТаблицаНовыеРезервы.ВидЗапасов,
	|	ТаблицаНовыеРезервы.НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтПриходРезерваСгруппированный.Период КАК ПериодРезерва,
	|	ВтПриходРезерваСгруппированный.Организация КАК Организация,
	|	ВтПриходРезерваСгруппированный.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтПриходРезерваСгруппированный.ВидЗапасов КАК ВидЗапасов,
	|	ВтПриходРезерваСгруппированный.НомерГТД КАК НомерГТД,
	|	ВтПриходРезерваСгруппированный.Количество КАК Резерв,
	|	ЕСТЬNULL(СгруппированныеОстатки.КоличествоОстаток, 0) КАК МинимальныйОстаток
	|ПОМЕСТИТЬ ВтПриходРезерваМинимальныйОстаток
	|ИЗ
	|	ВтПриходРезерваСгруппированный КАК ВтПриходРезерваСгруппированный
	|		ЛЕВОЕ СОЕДИНЕНИЕ СгруппированныеОстатки КАК СгруппированныеОстатки
	|		ПО ВтПриходРезерваСгруппированный.Организация = СгруппированныеОстатки.Организация
	|			И ВтПриходРезерваСгруппированный.АналитикаУчетаНоменклатуры = СгруппированныеОстатки.АналитикаУчетаНоменклатуры
	|			И ВтПриходРезерваСгруппированный.ВидЗапасов = СгруппированныеОстатки.ВидЗапасов
	|			И ВтПриходРезерваСгруппированный.НомерГТД = СгруппированныеОстатки.НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапросПоМесяцам.ПериодОстатка КАК ПериодОстатка,
	|	ВложенныйЗапросПоМесяцам.Организация КАК Организация,
	|	ВложенныйЗапросПоМесяцам.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапросПоМесяцам.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапросПоМесяцам.НомерГТД КАК НомерГТД,
	|	ВложенныйЗапросПоМесяцам.РезервНеНужныйВЭтомМесяце КАК РезервНеНужныйВЭтомМесяце,
	|	ВложенныйЗапросПоМесяцам.НовыйРезервВсего КАК НовыйРезервВсего
	|ИЗ
	|	ОбъединенныйТекстЗапросаПоМесяцам КАК ВложенныйЗапросПоМесяцам
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД,
	|	ПериодОстатка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ТаблицаНовыеРезервы.Период, МЕСЯЦ) КАК ПериодКонецМесяца,
	|	ТаблицаНовыеРезервы.Период КАК Период,
	|	ТаблицаНовыеРезервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНовыеРезервы.Организация КАК Организация,
	|	ТаблицаНовыеРезервы.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаНовыеРезервы.НомерГТД КАК НомерГТД,
	|	ТаблицаНовыеРезервы.КорОрганизация КАК КорОрганизация,
	|	ТаблицаНовыеРезервы.КорВидЗапасов КАК КорВидЗапасов,
	|	ТаблицаНовыеРезервы.Количество КАК Количество,
	|	ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ТаблицаНовыеРезервы.Количество КАК КоличествоНеРаспределенноеПоПериодам,
	|	ТаблицаНовыеРезервы.КоличествоПоРНПТ КАК КоличествоПоРНПТНеРаспределенноеПоПериодам,
	|	ТаблицаНовыеРезервы.ЭтоСторно КАК ЭтоСторно,
	|	ТаблицаНовыеРезервы.ВидДвижения КАК ВидДвижения
	|ИЗ
	|	ВТТаблицаНовыеРезервы КАК ТаблицаНовыеРезервы
	|
	|ГДЕ
	|	ТаблицаНовыеРезервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НЕ ТаблицаНовыеРезервы.ЭтоСторно
	|
	|УПОРЯДОЧИТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД,
	|	Период УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаНовыеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтПриходРезерваМинимальныйОстаток
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтПриходРезерваСгруппированный";
	
	ШаблонТекстаПоМесяцам =
	"ВЫБРАТЬ
	|	&ТекстПериодОстатка КАК ПериодОстатка,
	|	ВтПриходРезерваМинимальныйОстаток.Организация КАК Организация,
	|	ВтПриходРезерваМинимальныйОстаток.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтПриходРезерваМинимальныйОстаток.ВидЗапасов КАК ВидЗапасов,
	|	ВтПриходРезерваМинимальныйОстаток.НомерГТД КАК НомерГТД,
	|	ЕСТЬNULL(ШаблонОстаткиНаМесяц.КоличествоОстаток, 0) - ВтПриходРезерваМинимальныйОстаток.МинимальныйОстаток КАК РезервНеНужныйВЭтомМесяце,
	|	ВтПриходРезерваМинимальныйОстаток.Резерв КАК НовыйРезервВсего
	|ИЗ
	|	ВтПриходРезерваМинимальныйОстаток КАК ВтПриходРезерваМинимальныйОстаток
	|		ЛЕВОЕ СОЕДИНЕНИЕ ШаблонОстаткиНаМесяц КАК ШаблонОстаткиНаМесяц
	|		ПО ВтПриходРезерваМинимальныйОстаток.АналитикаУчетаНоменклатуры = ШаблонОстаткиНаМесяц.АналитикаУчетаНоменклатуры
	|			И ВтПриходРезерваМинимальныйОстаток.Организация = ШаблонОстаткиНаМесяц.Организация
	|			И ВтПриходРезерваМинимальныйОстаток.ВидЗапасов = ШаблонОстаткиНаМесяц.ВидЗапасов
	|			И ВтПриходРезерваМинимальныйОстаток.НомерГТД = ШаблонОстаткиНаМесяц.НомерГТД
	|ГДЕ
	|	ВтПриходРезерваМинимальныйОстаток.ПериодРезерва <= &ТекстПериодОстатка";
	
	МассивЗапросовПоМесяцам = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаНовыеРезервыИсходная", ТаблицаНовыеРезервыИсходная);
	
	МесяцПервогоОстатка = '30000101';
	
	Для Каждого Таблица Из МенеджерВременныхТаблиц.Таблицы Цикл
		
		Если Лев(Таблица.ПолноеИмя, 7) = "Остатки" Тогда
			
			ТекстЗапросаПоМесяцам = СтрЗаменить(ШаблонТекстаПоМесяцам, "ШаблонОстаткиНаМесяц", Таблица.ПолноеИмя);
			
			ПериодСтрокой			= СтрЗаменить(Таблица.ПолноеИмя, "Остатки", "");
			ТекстПериодОстатка		= "КонецМесяца" + ПериодСтрокой;
			ТекстЗапросаПоМесяцам	= СтрЗаменить(ТекстЗапросаПоМесяцам, "ТекстПериодОстатка", ТекстПериодОстатка);
			ПериодДатой				= КонецМесяца(Дата(ПериодСтрокой));
			
			Если ПериодДатой < МесяцПервогоОстатка Тогда
				МесяцПервогоОстатка = ПериодДатой;
			КонецЕсли;
			
			Запрос.УстановитьПараметр(ТекстПериодОстатка, ПериодДатой);
			
			МассивЗапросовПоМесяцам.Добавить(ТекстЗапросаПоМесяцам);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОбъединенныйТекстЗапросаПоМесяцам = СтрСоединить(МассивЗапросовПоМесяцам,
													ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"ОбъединенныйТекстЗапросаПоМесяцам",
								"(" + ОбъединенныйТекстЗапросаПоМесяцам + ")");
	
	Запрос.Текст		= ТекстЗапроса;
	РезультатЗапроса	= Запрос.ВыполнитьПакет();
	ВыборкаОстатков		= РезультатЗапроса[3].Выбрать();
	ТаблицаНовыеРезервы	= РезультатЗапроса[4].Выгрузить();
	
	КлючиПоиска = "АналитикаУчетаНоменклатуры,Организация,ВидЗапасов,НомерГТД";
	
	ТаблицаНовыеРезервыДобавляемыеСтроки = ТаблицаНовыеРезервы.СкопироватьКолонки();
	ТаблицаНовыеРезервы.Индексы.Добавить(КлючиПоиска);
	
	СтруктураПоиска			= Новый Структура(КлючиПоиска);
	РезервыПоАналитике		= Новый Массив;
	ЕстьИзмененияВТаблице	= Ложь;
	ПропуститьЭтуАналитику	= Ложь;
	НовыйРезервВсегоНеРаспределено = 0;
	
	Пока ВыборкаОстатков.Следующий() Цикл
		
		Если Не ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(СтруктураПоиска, ВыборкаОстатков) Тогда
			
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаОстатков);
			
			Если ВыборкаОстатков.ПериодОстатка = МесяцПервогоОстатка
				И ВыборкаОстатков.РезервНеНужныйВЭтомМесяце = 0 Тогда
				//Если минимальный остаток в первом месяце,
				//то распределять резервы по месяцам не нужно - резерв нужно записывать в первый месяц
				ПропуститьЭтуАналитику = Истина;
				Продолжить;
			Иначе
				ПропуститьЭтуАналитику = Ложь;
			КонецЕсли;
			
			Если НовыйРезервВсегоНеРаспределено <> 0 Тогда
				ТекстИсключения = НСтр("ru = 'Ошибка распределения резервов по месяцам'");
				
				ВызватьИсключение ТекстИсключения;
			КонецЕсли;
			
			НовыйРезервВсегоНеРаспределено	= ВыборкаОстатков.НовыйРезервВсего;
			РезервыПоАналитике				= ОбщегоНазначенияУТ.НайтиСтрокиССохранениемПорядка(ТаблицаНовыеРезервы,
																								СтруктураПоиска);
			
		ИначеЕсли ПропуститьЭтуАналитику Тогда
			Продолжить;
		КонецЕсли;
		
		РезервВЭтотМесяцВсегоНераспределено = НовыйРезервВсегоНеРаспределено - ВыборкаОстатков.РезервНеНужныйВЭтомМесяце;
		
		Если РезервВЭтотМесяцВсегоНераспределено <= 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Индекс = РезервыПоАналитике.Количество() - 1;
		
		РаспределеноВЭтотМесяц = 0;
		
		Пока Индекс >= 0 Цикл
			
			НераспределенныйРезерв		= РезервыПоАналитике[Индекс];
			РезервВЭтотМесяцВЭтуЗапись	= Мин(НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам,
												РезервВЭтотМесяцВсегоНераспределено);
			
			Если РезервВЭтотМесяцВЭтуЗапись = НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам Тогда
				НераспределенныйРезерв.Период = ВыборкаОстатков.ПериодОстатка;
				НераспределенныйРезерв.ПериодКонецМесяца = ВыборкаОстатков.ПериодОстатка;
				НераспределенныйРезерв.Количество = РезервВЭтотМесяцВЭтуЗапись;
				НераспределенныйРезерв.КоличествоПоРНПТ = НераспределенныйРезерв.КоличествоПоРНПТНеРаспределенноеПоПериодам;
				НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам = 0;
				НераспределенныйРезерв.КоличествоПоРНПТНеРаспределенноеПоПериодам = 0;
				
				РезервыПоАналитике.Удалить(Индекс);
			Иначе
				НоваяСтрока = ТаблицаНовыеРезервыДобавляемыеСтроки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, НераспределенныйРезерв);
				НоваяСтрока.Период = ВыборкаОстатков.ПериодОстатка;
				НоваяСтрока.ПериодКонецМесяца = ВыборкаОстатков.ПериодОстатка;
				НоваяСтрока.КоличествоНеРаспределенноеПоПериодам = 0;
				НоваяСтрока.КоличествоПоРНПТНеРаспределенноеПоПериодам = 0;
				НоваяСтрока.Количество = РезервВЭтотМесяцВЭтуЗапись;
				НоваяСтрока.КоличествоПоРНПТ = ?(НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам <> 0,
												НоваяСтрока.Количество * НераспределенныйРезерв.КоличествоПоРНПТНеРаспределенноеПоПериодам
													/ НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам,
												0);
				
				НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам = НераспределенныйРезерв.КоличествоНеРаспределенноеПоПериодам
																				- РезервВЭтотМесяцВЭтуЗапись;
				НераспределенныйРезерв.КоличествоПоРНПТНеРаспределенноеПоПериодам = НераспределенныйРезерв.КоличествоПоРНПТНеРаспределенноеПоПериодам
																							- НоваяСтрока.КоличествоПоРНПТ;
			КонецЕсли;
			
			РаспределеноВЭтотМесяц	= РаспределеноВЭтотМесяц + РезервВЭтотМесяцВЭтуЗапись;
			ЕстьИзмененияВТаблице	= Истина;
			РезервВЭтотМесяцВсегоНераспределено = РезервВЭтотМесяцВсегоНераспределено - РезервВЭтотМесяцВЭтуЗапись;
			
			Если РезервВЭтотМесяцВсегоНераспределено = 0 Тогда
				Прервать;
			КонецЕсли;
			
			Индекс = Индекс - 1;
			
		КонецЦикла;
		
		Если РезервВЭтотМесяцВсегоНераспределено <> 0 Тогда
			ТекстИсключения = НСтр("ru = 'Ошибка распределения резервов по месяцам'");
			
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		НовыйРезервВсегоНеРаспределено = НовыйРезервВсегоНеРаспределено - РаспределеноВЭтотМесяц;
		
		Если НовыйРезервВсегоНеРаспределено <= 0 Тогда
			ПропуститьЭтуАналитику = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Если НовыйРезервВсегоНеРаспределено <> 0 Тогда
		ТекстИсключения = НСтр("ru = 'Ошибка распределения резервов по месяцам'");
		
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Если ЕстьИзмененияВТаблице Тогда
		
		ТаблицаНовыеРезервы.Индексы.Очистить();
		
		Если ТаблицаНовыеРезервыДобавляемыеСтроки.Количество() > 0 Тогда
			ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(ТаблицаНовыеРезервы, ТаблицаНовыеРезервыДобавляемыеСтроки);
		КонецЕсли;
		
		ТаблицаНовыеРезервы.Колонки.Удалить("ПериодКонецМесяца");
		ТаблицаНовыеРезервы.Колонки.Удалить("КоличествоНеРаспределенноеПоПериодам");
		
		КоличествоСтрок = ТаблицаНовыеРезервы.Количество(); 
		
		Для Индекс = 0 По КоличествоСтрок - 1 Цикл
			СтрокаПрихода = ТаблицаНовыеРезервы[Индекс];
			СтрокаПрихода.ВидДвижения = ВидДвиженияНакопления.Приход;
			
			РегистрыНакопления.РезервыТоваровОрганизаций.ДобавитьВНаборРезерваКорЗапись(ТаблицаНовыеРезервы,
																						СтрокаПрихода);
		КонецЦикла;
		
		ТекстЗапросаУничтоженияТаблицОстатков = ТекстЗапросаУничтоженияТаблицОстатков(МенеджерВременныхТаблиц);
		
		Если Не ПустаяСтрока(ТекстЗапросаУничтоженияТаблицОстатков) Тогда
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
			Запрос.Текст = ТекстЗапросаУничтоженияТаблицОстатков;
			
			Запрос.Выполнить();
		КонецЕсли;
		
		Возврат ТаблицаНовыеРезервы;
		
	Иначе
		Возврат ТаблицаНовыеРезервыБезИзменений(ТаблицаНовыеРезервыИсходная, МенеджерВременныхТаблиц);	
	КонецЕсли;
	
КонецФункции

Функция ТекстЗапросаУничтоженияТаблицОстатков(МенеджерВременныхТаблиц)
	
	МассивЗапросовУничтоженияВТ = Новый Массив;
	
	Для Каждого Таблица Из МенеджерВременныхТаблиц.Таблицы Цикл
		Если Лев(Таблица.ПолноеИмя, 7) = "Остатки" Тогда
			МассивЗапросовУничтоженияВТ.Добавить("УНИЧТОЖИТЬ " + Таблица.ПолноеИмя);
		КонецЕсли;
	КонецЦикла;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("СгруппированныеОстатки") <> Неопределено Тогда
		МассивЗапросовУничтоженияВТ.Добавить("УНИЧТОЖИТЬ СгруппированныеОстатки");
	КонецЕсли;
	
	Возврат СтрСоединить(МассивЗапросовУничтоженияВТ, ОбщегоНазначенияУТ.РазделительЗапросовВПакете());
	
КонецФункции

Функция ТаблицаНовыеРезервыБезИзменений(ТаблицаНовыеРезервы, МенеджерВременныхТаблиц) 
	
	ТекстУничтоженияТаблиц = ТекстЗапросаУничтоженияТаблицОстатков(МенеджерВременныхТаблиц);
	
	Если Не ПустаяСтрока(ТекстУничтоженияТаблиц) Тогда
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = ТекстУничтоженияТаблиц;
		
		Запрос.Выполнить();
	КонецЕсли;
	
	Возврат ТаблицаНовыеРезервы;
	
КонецФункции

Процедура ЗаменитьОтсутствующиеПоляВтВТекстеЗапроса(МенеджерВременныхТаблиц,
													ТекстЗапроса,
													ИмяТаблицы,
													ИмяПоля,
													ТекстВыражениеВыборки,
													ТекстЗначенияПоУмолчанию)
	
	ВременнаяТаблица = МенеджерВременныхТаблиц.Таблицы[ИмяТаблицы];
	
	Если ВременнаяТаблица.Колонки.Найти(ИмяПоля) <> Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстПоля" + ИмяТаблицы + ИмяПоля + "_",
			ТекстВыражениеВыборки);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ТекстПоля" + ИмяТаблицы + ИмяПоля + "_",
			ТекстЗначенияПоУмолчанию);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СообщитьОбОшибках

Функция ТаблицаОшибокЗаполненияВидовЗапасов()
	
	ТаблицаОшибок = Новый ТаблицаЗначений;
	ТаблицаОшибок.Колонки.Добавить("Номенклатура");
	ТаблицаОшибок.Колонки.Добавить("Характеристика");
	ТаблицаОшибок.Колонки.Добавить("Серия");
	ТаблицаОшибок.Колонки.Добавить("Склад");
	ТаблицаОшибок.Колонки.Добавить("СкладОтгрузки");
	ТаблицаОшибок.Колонки.Добавить("Назначение");
	ТаблицаОшибок.Колонки.Добавить("ЕдиницаИзмерения");
	ТаблицаОшибок.Колонки.Добавить("НеУказанНомерГТД");
	ТаблицаОшибок.Колонки.Добавить("Количество");
	ТаблицаОшибок.Колонки.Добавить("Сумма");
	ТаблицаОшибок.Колонки.Добавить("Валюта");

	Возврат ТаблицаОшибок;
	
КонецФункции 

Процедура СообщитьОбОшибкахКонтроляТоваровОрганизаций(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов, Организация = Неопределено)
	
	Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения
		И ТаблицаОшибок.Количество() > 0 Тогда
		
		ОрганизацияСообщенияОбОшибке = ?(ЗначениеЗаполнено(Организация),
										Организация,
										ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов)); 
		
		ТаблицаОшибок.Свернуть("Номенклатура,Характеристика,Серия,Склад,Назначение,ЕдиницаИзмерения,НеУказанНомерГТД","Количество,Сумма");
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			ТекстСообщения = НСтр("ru = 'По организации %Организация% не хватает %Количество% %ЕдиницаИзмерения% товара %ПредставлениеНоменклатуры%, %МестоХраненияНаименование% %Склад% %КонтрольГТД% %НалогообложениеНДС%'"); 
			
			ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика,,СтрокаТаблицы.Серия, СтрокаТаблицы.Назначение);
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", ОрганизацияСообщенияОбОшибке);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%" , ПредставлениеНоменклатуры);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%" , СтрокаТаблицы.Склад);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Назначение%" , СтрокаТаблицы.Назначение);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%" , СтрокаТаблицы.Количество);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%" , СтрокаТаблицы.ЕдиницаИзмерения);
			
			МестоХраненияНаименование = НаименованиеМестаХраненияДляСообщенияОбОшибкахКонтроляОстатковПоОрганизациям(СтрокаТаблицы);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%МестоХраненияНаименование%", МестоХраненияНаименование);
			
			Если СтрокаТаблицы.НеУказанНомерГТД Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрольГТД%", НСтр("ru = 'с указанными номерами ГТД'"));
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрольГТД%", "");
			КонецЕсли;
			
			Если КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов) Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НалогообложениеНДС%", НСтр("ru = 'по налогообложению'") + " " + ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС);
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НалогообложениеНДС%", "");
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			
		КонецЦикла;
		
		СообщитьОКонтролеНалогообложенияПриПодбореВидовЗапасов(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахЗаполненияВидовЗапасовКомитентов(ДокументОбъект, ТаблицаОшибок, ПараметрыЗаполненияВидовЗапасов)
	
	Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения
		И ТаблицаОшибок.Количество() > 0 Тогда
		
		ТаблицаОшибок.Свернуть("Номенклатура,Характеристика,Серия,Склад,Назначение,ЕдиницаИзмерения,НеУказанНомерГТД","Количество,Сумма");
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			Если СтрокаТаблицы.Количество <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'По комитенту %Комитент% не хватает %Количество% %ЕдиницаИзмерения% товара %ПредставлениеНоменклатуры%, реализованного комиссионером %Комиссионер%'"); 
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комитент%", ДокументОбъект.Организация);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Комиссионер%", ДокументОбъект.Комиссионер);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%",
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%", СтрокаТаблицы.Количество);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%", СтрокаТаблицы.ЕдиницаИзмерения);
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			КонецЕсли;
			
			Если СтрокаТаблицы.Сумма <> 0 Тогда
				ТекстСообщения = НСтр("ru = 'Товар: %ПредставлениеНоменклатуры% Сумма продажи превышает сумму реализованного товара комиссионером на %Сумма% %Валюта%'"); 
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%",
					НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика));
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%", СтрокаТаблицы.Сумма);
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%", ДокументОбъект.Валюта);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура СообщитьОбОшибкахЗаполненияВидовЗапасовПоТаблицеКОформлению(
	ДокументОбъект, 
	ТаблицаОшибок, 
	ПараметрыЗаполненияВидовЗапасов, 
	ХозяйственнаяОперация = Неопределено)
	
	Если ПараметрыЗаполненияВидовЗапасов.СообщатьОбОшибкахЗаполнения
		И ТаблицаОшибок.Количество() > 0 Тогда
		
		ТаблицаОшибок.Свернуть(
			"Номенклатура,Характеристика,Серия,Склад,СкладОтгрузки,Назначение,ЕдиницаИзмерения,НеУказанНомерГТД,Валюта",
			"Количество,Сумма");
		
		Для Каждого СтрокаТаблицы Из ТаблицаОшибок Цикл
			
			Если ЗначениеЗаполнено(СтрокаТаблицы.Склад)
				И (СтрокаТаблицы.Сумма) Тогда
				ТекстСообщения = НСтр("ru = 'По организации %Организация% не хватает %ТипДвижения% %Количество% %ЕдиницаИзмерения% на сумму %Сумма%%Валюта% товара: %ПредставлениеНоменклатуры%, %МестоХраненияНаименование% %Склад% %КонтрольГТД%'");
			ИначеЕсли ЗначениеЗаполнено(СтрокаТаблицы.Склад) Тогда
				ТекстСообщения = НСтр("ru = 'По организации %Организация% не хватает %ТипДвижения% %Количество% %ЕдиницаИзмерения% товара: %ПредставлениеНоменклатуры%, %МестоХраненияНаименование% %Склад% %КонтрольГТД%'");
			ИначеЕсли ЗначениеЗаполнено(СтрокаТаблицы.Сумма) Тогда
				ТекстСообщения = НСтр("ru = 'По организации %Организация% не хватает %ТипДвижения% %Количество% %ЕдиницаИзмерения% на сумму %Сумма%%Валюта% товара: %ПредставлениеНоменклатуры% %КонтрольГТД%'");
			Иначе
				ТекстСообщения = НСтр("ru = 'По организации %Организация% не хватает %ТипДвижения% %Количество% %ЕдиницаИзмерения% товара: %ПредставлениеНоменклатуры% %КонтрольГТД%'");
			КонецЕсли;	
			
			ПредставлениеНоменклатуры = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(СтрокаТаблицы.Номенклатура, СтрокаТаблицы.Характеристика,,СтрокаТаблицы.Серия);
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Организация%", ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ПредставлениеНоменклатуры%" , ПредставлениеНоменклатуры); 
			
			МестоХраненияНаименование = НаименованиеМестаХраненияДляСообщенияОбОшибкахКонтроляОстатковПоОрганизациям(СтрокаТаблицы, ХозяйственнаяОперация);
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%МестоХраненияНаименование%", МестоХраненияНаименование);
			
			Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", Строка(СтрокаТаблицы.СкладОтгрузки));
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%", Строка(СтрокаТаблицы.Склад));
			КонецЕсли;
			
			Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипДвижения%", НСтр("ru = 'к возврату'"));
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ТипДвижения%", НСтр("ru = 'к оформлению'"));
			КонецЕсли;
			
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%" , СтрокаТаблицы.Количество);
			
			СуммаТекст = "";
			Если ЗначениеЗаполнено(СтрокаТаблицы.Сумма) Тогда
				СуммаТекст = Формат(СтрокаТаблицы.Сумма, "ЧДЦ=2");
			КонецЕсли;
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Сумма%" , СуммаТекст);
			
			ВалютаТекст = "";
			Если ЗначениеЗаполнено(СтрокаТаблицы.Валюта) Тогда
				ВалютаТекст = Формат(" " + СтрокаТаблицы.Валюта);
			КонецЕсли;
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Валюта%" , ВалютаТекст);

			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ЕдиницаИзмерения%" , СтрокаТаблицы.ЕдиницаИзмерения);
			
			Если СтрокаТаблицы.НеУказанНомерГТД Тогда
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрольГТД%", НСтр("ru = 'с указанными номерами ГТД'"));
			Иначе
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%КонтрольГТД%", "");
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект);
			
		КонецЦикла;
		
		СообщитьОКонтролеНалогообложенияПриПодбореВидовЗапасов(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов);
		
	КонецЕсли;
		
КонецПроцедуры

Процедура СообщитьОКонтролеНалогообложенияПриПодбореВидовЗапасов(Знач ДокументОбъект, Знач ПараметрыЗаполненияВидовЗапасов)
	
	Если КонтролироватьНалогообложениеНДС(ПараметрыЗаполненияВидовЗапасов) Тогда
		
		НалогообложениеНДСДокумента = ПараметрыЗаполненияВидовЗапасов.ОтборыВидовЗапасов.НалогообложениеНДС;
		
		ПараметрыУчетаПоОрганизации =
			УчетНДСУП.ПараметрыУчетаПоОрганизации(
				ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов),
				ДокументОбъект.Дата);
		
		НалогообложениеНДСОрганизации = ПараметрыУчетаПоОрганизации.ОсновноеНалогообложениеНДСПродажи;
		
		Если НалогообложениеНДСДокумента <> Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД 
			И НалогообложениеНДСДокумента <> Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДСУПокупателя
			И НалогообложениеНДСДокумента <> Перечисления.ТипыНалогообложенияНДС.ПроизводствоСДЦ
			И НалогообложениеНДСДокумента <> Перечисления.ТипыНалогообложенияНДС.ПродажаНаЭкспорт
			И Перечисления.ТипыНалогообложенияНДС.СНдсБезНдс(НалогообложениеНДСДокумента) <> НалогообложениеНДСОрганизации Тогда
			ТекстСообщения = НСтр(
			"ru = 'Обратите внимание, что тип налогообложения ""%НалогообложениеНДС%"" не поддерживается учетной политикой организации. В этом случае могут быть списаны только комиссионные товары.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НалогообложениеНДС%", НалогообложениеНДСДокумента);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект, "НалогообложениеНДС");
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Функция НаименованиеМестаХраненияДляСообщенияОбОшибкахКонтроляОстатковПоОрганизациям(СтрокаТаблицы, ХозяйственнаяОперация = Неопределено)
	
	МестоХраненияНаименование = "";
	
	// Формирование наименования по хозяйственной операции.
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВозвратОтПереработчика Тогда
		МестоХраненияНаименование = НСтр("ru = 'от переработчика'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МестоХраненияНаименование) Тогда
		Возврат МестоХраненияНаименование;
	КонецЕсли;
	
	// Формирование наименования по типу поля Склад
	Если Не ЗначениеЗаполнено(СтрокаТаблицы.Склад) Тогда
		МестоХраненияНаименование = "";
	ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.Партнеры") Тогда
		МестоХраненияНаименование = НСтр("ru = 'у партнера'");
	ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.Организации") Тогда
		МестоХраненияНаименование = НСтр("ru = 'у организации'");
	ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.СтруктураПредприятия") Тогда
		МестоХраненияНаименование = НСтр("ru = 'в подразделении'");
	ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		МестоХраненияНаименование = НСтр("ru = 'по договору'");
	ИначеЕсли ТипЗнч(СтрокаТаблицы.Склад) = Тип("СправочникСсылка.Склады") Тогда
		МестоХраненияНаименование = НСтр("ru = 'на складе'");
	Иначе
		ТекстИсключения = НСтр("ru = 'В процедуре НаименованиеМестаХраненияДляСообщенияОбОшибкахКонтроляОстатковПоОрганизациям не учтен тип места хранения ""%1""'");
		ТекстИсключения = СтрШаблон(ТекстИсключения, ТипЗнч(СтрокаТаблицы.Склад));
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Возврат МестоХраненияНаименование;
	
КонецФункции

#КонецОбласти

#Область ВТТаблицаОстатков

// Метод возвращает ВТ ТаблицаОстатков, используется при заполнении видов запасов.
//
// Параметры:
//	ИмяТаблицыОстатков - Строка - Имя таблицы остатков, показывает по какому из регистров будут строиться остатки.
//	ДокументОбъект - ДокументОбъект - Документ, для которого формируется таблица остатков.
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер, содержит Вт ДоступныеВидыЗапасов.
//	ПараметрыЗаполненияВидовЗапасов - Структура - Отборы остатков. См. ЗапасыСервер.ПараметрыЗаполненияВидовЗапасов().
//	ВычитатьДвиженияПоТоварамОрганизаций - Неопределено, Булево - Необходимость вычитания из текущих остатков старых движений документа.
//	ДатаОстатков - Неопределено, Дата - Дата, на которую формируются остатки. Как правило, на дату документа.
//
Процедура СформироватьВТТаблицаОстатков(ИмяТаблицыОстатков,
										ДокументОбъект,
										МенеджерВременныхТаблиц,
										ПараметрыЗаполненияВидовЗапасов,
										ВычитатьДвиженияПоТоварамОрганизаций = Неопределено,
										ДатаОстатков = Неопределено) Экспорт
	
	Если ПараметрыЗаполненияВидовЗапасов.ТаблицаОстатковУжеСформирована Тогда
		Возврат;
	КонецЕсли;
	
	Если ДатаОстатков = Неопределено Тогда
		Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
			ДатаОстатков = ПараметрыЗаполненияВидовЗапасов.ПериодЗаполнения;
		ИначеЕсли ДокументОбъект.Проведен Тогда
			ДатаОстатков = ДокументОбъект.Дата;
		Иначе
			ДатаОстатков = Мин(ДокументОбъект.Дата, ТекущаяДатаСеанса());
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяТаблицыОстатков = "ТоварыОрганизаций" Тогда
		
		Если ВычитатьДвиженияПоТоварамОрганизаций = Неопределено Тогда
			ТекстИсключения = НСтр("ru = 'Ошибка формирования таблицы остатков товаров организаций: не передан параметр ВычитатьДвиженияПоТоварамОрганизаций.'");
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
		
		ТаблицаОстатковТоваровОрганизаций(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											ВычитатьДвиженияПоТоварамОрганизаций,
											ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "КомиссионныеТоварыИнтеркампани" Тогда
		ТаблицаОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыПереданныеНаКомиссию" Тогда
		ТаблицаОстатковТоваровПереданныхНаКомиссию(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов, МенеджерВременныхТаблиц, ДатаОстатков);
		
	//++ НЕ УТ
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыПереданныеПереработчику" Тогда
		ТаблицаОстатковТоваровПереданныхПереработчику(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов, МенеджерВременныхТаблиц, ДатаОстатков);
		
	//-- НЕ УТ
	ИначеЕсли ИмяТаблицыОстатков = "РеализованныеТовары" Тогда
		ТаблицаОстатковРеализованныхТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ПереданнаяВозвратнаяТара" Тогда
		ТаблицаОстатковПереданнойВозвратнойТары(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ПереданныеМеждуОрганизациямиТовары" Тогда
		
		ТаблицаОстатковПереданныхМеждуОрганизациямиТоваров(ДокументОбъект,
															МенеджерВременныхТаблиц,
															ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыКОформлениюОтчетовКомитенту" Тогда
		ТаблицаОстатковКОформлениюОтчетаКомитенту(ДокументОбъект, МенеджерВременныхТаблиц, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыКОформлениюОтчетовКомитентуОСписании" Тогда
		ТаблицаОстатковКОформлениюОтчетаКомитентуОСписании(ДокументОбъект, МенеджерВременныхТаблиц);
		
	//++ НЕ УТ
	ИначеЕсли ИмяТаблицыОстатков = "ВозвратТоваровПереданныхПереработчику" Тогда
		
		ТаблицаОстатковДляВозвратаПереданныхПереработчикуТоваров(ДокументОбъект,
																	МенеджерВременныхТаблиц,
																	ПараметрыЗаполненияВидовЗапасов,
																	ДатаОстатков);
		
	//-- НЕ УТ
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыСписанныеНаРасходы" Тогда
		
		ТаблицаОстатковСписанныхНаРасходыТоваров(ДокументОбъект,
												МенеджерВременныхТаблиц,
												ПараметрыЗаполненияВидовЗапасов);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыОрганизацийКПередаче" Тогда
		ТаблицаОстатковТоваровКПередаче(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыОрганизацийКВозврату" Тогда
		ТаблицаОстатковТоваровКВозврату(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "ПродукцияКОформлениюВыпуска" Тогда
		
		ТаблицаПродукцияКОформлениюВыпуска(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											ДатаОстатков);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыУПартнеровПоложительныйОстаток" Тогда
		ОтрицательныеОстатки = Ложь;
		ТаблицаОстатковТоваровУПартнеров(ДокументОбъект, МенеджерВременныхТаблиц, ОтрицательныеОстатки);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыУПартнеровОтрицательныйОстаток" Тогда
		ОтрицательныеОстатки = Истина;
		ТаблицаОстатковТоваровУПартнеров(ДокументОбъект, МенеджерВременныхТаблиц, ОтрицательныеОстатки);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТоварыПринятыеКСписанию" Тогда
		ТаблицаОстатковТоваровПринятых(ДокументОбъект, МенеджерВременныхТаблиц);
		
	ИначеЕсли ИмяТаблицыОстатков = "ТаблицаВидыЗапасов" Тогда
		ТаблицаОстатковТаблицаВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов);
		
	Иначе
		ТекстИсключения = НСтр("ru = 'Неизвестное имя таблицы остатков.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаОстатковТоваровОрганизаций(ДокументОбъект,
											МенеджерВременныхТаблиц,
											ПараметрыЗаполненияВидовЗапасов,
											ВычитатьДвиженияПоТоварамОрганизаций,
											МинимальнаяДатаОстатков,
											ДатыОстатков = Неопределено)
	
	ДокументСсылка = ДокументОбъект.Ссылка;
	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Резервы.Период КАК Период,
	|	Резервы.Организация КАК Организация,
	|	Резервы.ВидДвижения КАК ВидДвижения,
	|	Резервы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Резервы.ВидЗапасов КАК ВидЗапасов,
	|	Резервы.НомерГТД КАК НомерГТД,
	|	Резервы.Количество КАК Количество,
	|	Резервы.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	Резервы.КорОрганизация КАК КорОрганизация,
	|	Резервы.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ СформированныеРезервы
	|ИЗ
	|	&СформированныеРезервы КАК Резервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(Движения.Период, МЕСЯЦ) КАК Период,
	|	Движения.Организация,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.НомерГТД,
	|	СУММА(Движения.Количество) КАК Количество,
	|	СУММА(Движения.КоличествоПоРНПТ) КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ДвиженияДокумента
	|ИЗ
	|	(ВЫБРАТЬ
	|		Товары.Период КАК Период,
	|		Товары.Организация КАК Организация,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.НомерГТД КАК НомерГТД,
	|		ВЫБОР
	|			КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -Товары.Количество
	|			ИНАЧЕ Товары.Количество
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(Товары.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -Товары.КоличествоПоРНПТ
	|			ИНАЧЕ Товары.КоличествоПоРНПТ
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		ДвиженияТоварыОрганизацийПередЗаписью КАК Товары
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|		ПО ДоступныеВидыЗапасов.ДляОрганизации = Товары.Организация
	|			И ДоступныеВидыЗапасов.ВидЗапасов = Товары.ВидЗапасов
	|	ГДЕ
	|		&ВычитатьДвиженияПоТоварамОрганизаций
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // Погашение резервов по схеме интеркампани, используется в документах передачи
	|		Резервы.Период,
	|		Резервы.Организация,
	|		Резервы.АналитикаУчетаНоменклатуры,
	|		Резервы.ВидЗапасов,
	|		Резервы.НомерГТД,
	|		ВЫБОР
	|			КОГДА Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -Резервы.Количество
	|			ИНАЧЕ Резервы.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(Резервы.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			КОГДА Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -Резервы.КоличествоПоРНПТ
	|			ИНАЧЕ Резервы.КоличествоПоРНПТ
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ОтборыОстатковОрганизаций
	|			ПО ОтборыОстатковОрганизаций.ВидЗапасов = Резервы.ВидЗапасов
	|				И ОтборыОстатковОрганизаций.Организация = Резервы.Организация // владелец товара
	|				И ОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры = Резервы.АналитикаУчетаНоменклатуры
	|	ГДЕ
	|		Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Резервы.КорВидЗапасов В (&КорВидыЗапасов)// продавец товара
	|		И (Резервы.ВидЗапасов.ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ИЛИ НЕ Резервы.ВидЗапасов В (&КорВидыЗапасов))
	|		И Резервы.Период >= НАЧАЛОПЕРИОДА(&КонецМесяца, МЕСЯЦ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ // Погашение резервов за счет выкупа у поклажедателя
	|		Резервы.Период,
	|		Резервы.Организация,
	|		Резервы.АналитикаУчетаНоменклатуры,
	|		Резервы.ВидЗапасов,
	|		Резервы.НомерГТД,
	|		-Резервы.Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(Резервы.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ -Резервы.КоличествоПоРНПТ
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК Резервы
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ОтборыОстатковОрганизаций
	|			ПО Резервы.АналитикаУчетаНоменклатуры = ОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры
	|				И Резервы.ВидЗапасов = ОтборыОстатковОрганизаций.ВидЗапасов
	|				И Резервы.Организация = ОтборыОстатковОрганизаций.Организация // владелец товара
	|				И Резервы.КорОрганизация = ОтборыОстатковОрганизаций.Организация // продавец товара
	|	
	|	ГДЕ
	|		Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|		И Резервы.ВидЗапасов <> Резервы.КорВидЗапасов
	|		И &ЭтоВыкупТоваров
	|		И Резервы.Период >= НАЧАЛОПЕРИОДА(&КонецМесяца, МЕСЯЦ)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Резервы.Период,
	|		Резервы.Организация,
	|		Резервы.АналитикаУчетаНоменклатуры,
	|		Резервы.ВидЗапасов,
	|		Резервы.НомерГТД,
	|		ВЫБОР
	|			КОГДА Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Резервы.Количество
	|			ИНАЧЕ -Резервы.Количество
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(Резервы.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			КОГДА Резервы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА Резервы.КоличествоПоРНПТ
	|			ИНАЧЕ -Резервы.КоличествоПоРНПТ
	|		КОНЕЦ
	|	ИЗ
	|		СформированныеРезервы КАК Резервы
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоступныеВидыЗапасов КАК ДоступныеВидыЗапасов
	|			ПО ДоступныеВидыЗапасов.ДляОрганизации = Резервы.Организация
	|				И ДоступныеВидыЗапасов.ВидЗапасов = Резервы.ВидЗапасов
	|	ГДЕ
	|		Резервы.ВидЗапасов В (&КорВидыЗапасов) // продавец товара
	|		И ВЫРАЗИТЬ(Резервы.ВидЗапасов КАК Справочник.ВидыЗапасов).ТипЗапасов <> ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ИЛИ НЕ Резервы.КорВидЗапасов В (&КорВидыЗапасов)
	|
	|	) КАК Движения
	|
	|СГРУППИРОВАТЬ ПО
	|	КОНЕЦПЕРИОДА(Движения.Период, МЕСЯЦ),
	|	Движения.Организация,
	|	Движения.АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов,
	|	Движения.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ДатыПоступленияТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления,
	|	ДатыПоступленияТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ДатыПоступленияТоваровОрганизаций.НомерГТД КАК НомерГТД
	|ПОМЕСТИТЬ ВТДатыПоступленияТоваровОрганизаций
	|ИЗ
	|	ВТОтборыОстатковОрганизаций КАК ВТОтборыОстатковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО ВТОтборыОстатковОрганизаций.Номенклатура = ДатыПоступленияТоваровОрганизаций.Номенклатура
	|			И ВТОтборыОстатковОрганизаций.Характеристика = ДатыПоступленияТоваровОрганизаций.Характеристика
	|			И ВТОтборыОстатковОрганизаций.Серия = ДатыПоступленияТоваровОрганизаций.Серия
	|			И ВТОтборыОстатковОрганизаций.Назначение = ДатыПоступленияТоваровОрганизаций.Назначение
	|			И ВТОтборыОстатковОрганизаций.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|	
	|	//%ТекстВТОстаткиПоМесяцам%
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СгруппированныеОстатки.Период КАК Период,
	|	СгруппированныеОстатки.Организация КАК Организация,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов КАК ВидЗапасов,
	|	СгруппированныеОстатки.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(СгруппированныеОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	МИНИМУМ(СгруппированныеОстатки.КоличествоПоРНПТОстаток) КАК КоличествоПоРНПТОстаток,
	|	СУММА(СгруппированныеОстатки.СчетчикПериодов) КАК СчетчикПериодов
	|ПОМЕСТИТЬ СгруппированныеОстатки
	|ИЗ
	|	(//%ТекстОстаткиПоМесяцам%)  КАК СгруппированныеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	Период,
	|	НомерПериода,
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД
	|
	|ИМЕЮЩИЕ
	|	(МИНИМУМ(СгруппированныеОстатки.КоличествоОстаток) <> 0
	|	И СУММА(СгруппированныеОстатки.СчетчикПериодов) >= &ВсегоПериодов - СгруппированныеОстатки.НомерПериода + 1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|
	|ВЫБРАТЬ
	|	СгруппированныеОстатки.Период КАК Период,
	|	СгруппированныеОстатки.Организация КАК Организация,
	|	СгруппированныеОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	СгруппированныеОстатки.ВидЗапасов КАК ВидЗапасов,
	|	СгруппированныеОстатки.НомерГТД КАК НомерГТД,
	|	ДатыПоступленияТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия КАК Серия,
	|	КлючиАналитикиУчетаНоменклатуры.МестоХранения КАК Склад,
	|	КлючиАналитикиУчетаНоменклатуры.Назначение КАК Назначение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПередачи, // для заполнения ВозвратТоваровМеждуОрганизациями 
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаНоменклатурыОтгрузки,  // для заполнения ВозвратТоваровМеждуОрганизациями
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,  // для заполнения ВозвратТоваровМеждуОрганизациями
	|	0 КАК СуммаОстаток,
	|	СгруппированныеОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	СгруппированныеОстатки.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТОстаток,
	|	СгруппированныеОстатки.СчетчикПериодов КАК СчетчикПериодов
	|ПОМЕСТИТЬ ТекстТаблицаОстатков
	|ИЗ
	|	СгруппированныеОстатки КАК СгруппированныеОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО СгруппированныеОстатки.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|			И СгруппированныеОстатки.АналитикаУчетаНоменклатуры = ДатыПоступленияТоваровОрганизаций.АналитикаУчетаНоменклатуры
	|			И СгруппированныеОстатки.НомерГТД = ДатыПоступленияТоваровОрганизаций.НомерГТД
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО СгруппированныеОстатки.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка";
	
	ПараметрыДополнения = ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц();
	ЗаполнитьЗначенияСвойств(ПараметрыДополнения, ПараметрыЗаполненияВидовЗапасов);
	
	ОкончаниеПериодаКонтроля = Неопределено;
	ДокументОбъект.ДополнительныеСвойства.Свойство("ОкончаниеПериодаПомощникаИсправленияОстатков", ОкончаниеПериодаКонтроля);
	ПараметрыДополнения.ОкончаниеПериодаКонтроля = ОкончаниеПериодаКонтроля;
	
	ВсегоПериодов = ДополнитьЗапросКонтролемОстатковНаКаждыйМесяц(Запрос,
																	ТекстЗапроса,
																	ПараметрыДополнения,
																	МинимальнаяДатаОстатков,
																	ДатыОстатков);
	
	Если ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстТаблицаОстатков", "ТаблицаОстатковПоПериодам");
		Запрос.УстановитьПараметр("ПериодЗаполнения", МинимальнаяДатаОстатков);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ТекстТаблицаОстатков", "ТаблицаОстатков");
		Запрос.УстановитьПараметр("ПериодЗаполнения", Дата(1,1,1));
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПередачаТоваровМеждуОрганизациями") Тогда
		Запрос.УстановитьПараметр("КорОрганизация", ПараметрыЗаполненияВидовЗапасов.ПриПодбореПоИнтеркампаниИсключатьОрганизации);
	Иначе
		Запрос.УстановитьПараметр("КорОрганизация", Справочники.Организации.ПустаяСсылка());
	КонецЕсли;
	
	Если ДокументОбъект.ДополнительныеСвойства.Свойство("ТаблицаРезервыТоваровОрганизаций") Тогда
		СформированныеРезервы = ДокументОбъект.ДополнительныеСвойства.ТаблицаРезервыТоваровОрганизаций.Скопировать();
	Иначе
		СформированныеРезервы = РегистрыНакопления.РезервыТоваровОрганизаций.СоздатьНаборЗаписей().ВыгрузитьКолонки();
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТСторноРезервов") <> Неопределено Тогда
		ЗапросСторно = Новый Запрос("ВЫБРАТЬ * ИЗ ВТСторноРезервов");
		ЗапросСторно.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(СформированныеРезервы, ЗапросСторно.Выполнить().Выгрузить());
	КонецЕсли;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ВТРезервыПоОрганизациямДляКонтроля") <> Неопределено Тогда
		ЗапросРезервыДругихОрганизаций = Новый Запрос("ВЫБРАТЬ * ИЗ ВТРезервыПоОрганизациямДляКонтроля");
		ЗапросРезервыДругихОрганизаций.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		ОбщегоНазначенияУТ.ДобавитьСтрокиВТаблицу(СформированныеРезервы, ЗапросРезервыДругихОрганизаций.Выполнить().Выгрузить());
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(МинимальнаяДатаОстатков));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(МинимальнаяДатаОстатков));
	Запрос.УстановитьПараметр("ГраницаМесяца", Новый Граница(КонецМесяца(МинимальнаяДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГраницаДня", Новый Граница(КонецДня(МинимальнаяДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаДокумента", МинимальнаяДатаОстатков);
	Запрос.УстановитьПараметр("ВычитатьДвиженияПоТоварамОрганизаций", ВычитатьДвиженияПоТоварамОрганизаций);
	Запрос.УстановитьПараметр("СформированныеРезервы", СформированныеРезервы);
	Запрос.УстановитьПараметр("КорВидыЗапасов", ПараметрыЗаполненияВидовЗапасов.КорВидыЗапасов);
	Запрос.УстановитьПараметр("ЭтоВыкупТоваров", Ложь);
	//++ НЕ УТ
	Запрос.Параметры.ЭтоВыкупТоваров = ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВыкупПринятыхНаХранениеТоваров");
	//-- НЕ УТ
	Запрос.УстановитьПараметр("ДатаТекущихОстатков", ?(ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов,
														КонецМесяца(ТекущаяДатаСеанса()),
														Дата(1, 1, 1)));
	Запрос.УстановитьПараметр("ПодбиратьЗапасыРазныхПериодов", ПараметрыЗаполненияВидовЗапасов.ПодбиратьЗапасыРазныхПериодов);
	Запрос.УстановитьПараметр("ВсегоПериодов", ВсегоПериодов);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
	Запрос.Текст =
	"УНИЧТОЖИТЬ ДвиженияДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СформированныеРезервы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДатыПоступленияТоваровОрганизаций
	|";
	
	Запрос.Выполнить();
	
	ПараметрыЗаполненияВидовЗапасов.КоличествоПериодовПриФормированииРезервовОрганизаций = ВсегоПериодов;
	
КонецПроцедуры

Процедура ТаблицаОстатковТоваровУПартнеров(ДокументОбъект, МенеджерВременныхТаблиц, ОтрицательныеОстатки)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтОтборыОстатковОрганизаций.Организация                КАК Организация,
	|	ВтОтборыОстатковОрганизаций.Номенклатура               КАК Номенклатура,
	|	ВтОтборыОстатковОрганизаций.Характеристика             КАК Характеристика,
	|	ВтОтборыОстатковОрганизаций.Серия                      КАК Серия,
	|	(ВЫБОР КОГДА
	|		ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчитыватьСебестоимостьПоСериям, ЛОЖЬ)
	|		И (ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетСерийВНеотфактурованныхПоставкахТоваров, ЛОЖЬ)
	|			ИЛИ ЕСТЬNULL(ВтОтборыОстатковОрганизаций.Номенклатура.ВидНоменклатуры.ПолитикаУчетаСерий.УчетТоваровВПутиОтПоставщикаПоСериям, ЛОЖЬ))
	|		ТОГДА
	|			ВтОтборыОстатковОрганизаций.Серия
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|	КОНЕЦ) КАК СерияДляОтбора,
	|	ВтОтборыОстатковОрганизаций.Назначение                 КАК Назначение,
	|	ВтОтборыОстатковОрганизаций.ВидЗапасов                 КАК ВидЗапасов,
	|	ВтОтборыОстатковОрганизаций.НомерГТД                   КАК НомерГТД,
	|	&Партнер                                               КАК Партнер,
	|	&Контрагент                                            КАК Контрагент,
	|	&Договор                                               КАК Договор
	|ПОМЕСТИТЬ ВТОтбор
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВтОтборыОстатковОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыУПартнеровОстатки.Организация,
	|	ТоварыУПартнеровОстатки.НомерГТД,
	|	ТоварыУПартнеровОстатки.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыУПартнеровОстатки.КоличествоОстаток,
	|	ТоварыУПартнеровОстатки.КоличествоПоРНПТОстаток
	|ПОМЕСТИТЬ ТоварыУПартнеровОстатки
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			,
	|			(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов, НомерГТД) В
	|				(ВЫБРАТЬ
	|					ВТОтбор.АналитикаУчетаНоменклатуры,
	|					ВТОтбор.Организация,
	|					ВТОтбор.ВидЗапасов,
	|					ВТОтбор.НомерГТД
	|				ИЗ
	|					ВТОтбор КАК ВТОтбор)) КАК ТоварыУПартнеровОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов,
	|	НомерГТД
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ВидЗапасов.Организация КАК Организация,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	|	ВложенныйЗапрос.Характеристика КАК Характеристика,
	|	ВложенныйЗапрос.Серия КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.ВидЗапасов.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовПолучателя,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовОтгрузки,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
	|	ВложенныйЗапрос.Назначение КАК Назначение,
	|	ВложенныйЗапрос.НомерГТД,
	|	СУММА(&ТекстПередано) КАК КоличествоОстаток,
	|	СУММА(&ТекстПереданоПоРНПТ) КАК КоличествоПоРНПТОстаток,
	|	СУММА(0) КАК НаДатуКонтроля,
	|	СУММА(0) КАК НаДатуАктуальности,
	|	СУММА(0) КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|		ТоварыУПартнеровОстатки.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|		ТоварыУПартнеровОстатки.НомерГТД КАК НомерГТД,
	|		ТоварыУПартнеровОстатки.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыУПартнеровОстатки.КоличествоОстаток КАК Передано,
	|		ТоварыУПартнеровОстатки.КоличествоПоРНПТОстаток КАК ПереданоПоРНПТ
	|	ИЗ
	|		ТоварыУПартнеровОстатки КАК ТоварыУПартнеровОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТОтбор.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|		ТоварыОрганизаций.НомерГТД,
	|		ТоварыОрганизаций.ВидЗапасов,
	|		ТоварыОрганизаций.Количество,
	|		ТоварыОрганизаций.КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтбор КАК ВТОтбор
	|			ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = ВТОтбор.АналитикаУчетаНоменклатуры
	|				И ТоварыОрганизаций.Организация = ВТОтбор.Организация
	|				И ТоварыОрганизаций.ВидЗапасов = ВТОтбор.ВидЗапасов
	|				И ТоварыОрганизаций.НомерГТД = ВТОтбор.НомерГТД
	|	ГДЕ
	|		ТоварыОрганизаций.Регистратор = &Регистратор) КАК ВложенныйЗапрос
	|ГДЕ
	|	&ТекстВариантОстатков
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.Назначение,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.ВидЗапасов.Организация,
	|	ВложенныйЗапрос.ВидЗапасов.ВидЗапасовВладельца,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыУПартнеровОстатки
	|";
	
	ТекстЗапроса = ТекстЗапроса + " 
	|;
	|//////////////////////////////
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"&ТекстВариантОстатков",
		?(ОтрицательныеОстатки, "Передано < 0", "Передано > 0"));
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, 
		"&ТекстПередано",
		?(ОтрицательныеОстатки, "-Передано", "Передано"));
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Партнер", ДокументОбъект.Партнер);
	Запрос.УстановитьПараметр("Договор", ДокументОбъект.Договор);
	Запрос.УстановитьПараметр("Контрагент", ДокументОбъект.Контрагент);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Регистратор", ДокументОбъект.Ссылка);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков комиссионных товаров интеркампани.
//
Процедура ТаблицаОстатковКомиссионныхТоваровИнтеркампани(ДокументОбъект, МенеджерВременныхТаблиц)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Отборы.Организация КАК Организация,
	|	ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL
	|				И НЕ Возврат.ПокупательНеПлательщикНДС
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыКОформлению.ДокументРеализации
	|	КОНЕЦ КАК ДокументРеализации,
	|	ТоварыКОформлению.ДатаСчетаФактуры КАК ДатаСчетаФактуры,
	|	ТоварыКОформлению.НомерСчетаФактуры КАК НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ОтчетОРозничныхПродажах)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ДанныеРеализации.Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|			ТОГДА ПередачаТоваров.ОрганизацияПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА Возврат.Контрагент
	|		КОГДА ТоварыКОформлению.Покупатель = НЕОПРЕДЕЛЕНО
	|				ИЛИ ТоварыКОформлению.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		ИНАЧЕ ТоварыКОформлению.Покупатель
	|	КОНЕЦ КАК Покупатель,
	|	ВЫБОР
	|		КОГДА (ВЫБОР
	|					КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА ВЫБОР
	|								КОГДА &ЭтоОтчетОСписании
	|									ТОГДА ТоварыКОформлению.КоличествоСписано
	|								ИНАЧЕ ТоварыКОформлению.Количество
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|								ТОГДА 0
	|							КОГДА &ЭтоОтчетОСписании
	|								ТОГДА -ТоварыКОформлению.КоличествоСписано
	|							ИНАЧЕ -ТоварыКОформлению.Количество
	|						КОНЕЦ
	|				КОНЕЦ) >= 0
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК Знак,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ВЫБОР
	|						КОГДА &ЭтоОтчетОСписании
	|							ТОГДА ТоварыКОформлению.КоличествоСписано
	|						ИНАЧЕ ТоварыКОформлению.Количество
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|						ТОГДА 0
	|					КОГДА &ЭтоОтчетОСписании
	|						ТОГДА -ТоварыКОформлению.КоличествоСписано
	|					ИНАЧЕ -ТоварыКОформлению.Количество
	|				КОНЕЦ
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ТоварыКОформлению.СуммаВыручки
	|			ИНАЧЕ -ТоварыКОформлению.СуммаВыручки
	|		КОНЕЦ) КАК СуммаВыручки,
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|					И &ЭтоОтчетОСписании
	|				ТОГДА ТоварыКОформлению.КоличествоСписано
	|			КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|				ТОГДА ТоварыКОформлению.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоВДокументе
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК Отборы
	|		ПО (Отборы.АналитикаУчетаНоменклатуры = ТоварыКОформлению.АналитикаУчетаНоменклатуры)
	|			И (Отборы.ВидЗапасов = ТоварыКОформлению.ВидЗапасов)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК Возврат
	|		ПО (Возврат.Ссылка = ТоварыКОформлению.Регистратор)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК ДанныеРеализации
	|		ПО ТоварыКОформлению.ДокументРеализации = ДанныеРеализации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаТоваровМеждуОрганизациями КАК ПередачаТоваров
	|		ПО ТоварыКОформлению.ДокументРеализации = ПередачаТоваров.Ссылка
	|ГДЕ
	|	ТоварыКОформлению.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ТоварыКОформлению.Активность
	|	И ТоварыКОформлению.Регистратор <> &ТекущийОтчет
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.ДатаСчетаФактуры,
	|	ТоварыКОформлению.НомерСчетаФактуры,
	|	ВЫБОР
	|		КОГДА НЕ Возврат.Ссылка ЕСТЬ NULL
	|				И НЕ Возврат.ПокупательНеПлательщикНДС
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыКОформлению.ДокументРеализации
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ОтчетОРозничныхПродажах)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.РеализацияТоваровУслуг)
	|			ТОГДА ДанныеРеализации.Контрагент
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.ДокументРеализации) = ТИП(Документ.ПередачаТоваровМеждуОрганизациями)
	|			ТОГДА ПередачаТоваров.ОрганизацияПолучатель
	|		КОГДА ТИПЗНАЧЕНИЯ(ТоварыКОформлению.Регистратор) = ТИП(Документ.ВозвратТоваровОтКлиента)
	|			ТОГДА Возврат.Контрагент
	|		КОГДА ТоварыКОформлению.Покупатель = НЕОПРЕДЕЛЕНО
	|				ИЛИ ТоварыКОформлению.Покупатель = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Контрагенты.РозничныйПокупатель)
	|		ИНАЧЕ ТоварыКОформлению.Покупатель
	|	КОНЕЦ,
	|	ТоварыКОформлению.АналитикаУчетаНоменклатуры,
	|	Отборы.Организация,
	|	ТоварыКОформлению.ВидЗапасов,
	|	ТоварыКОформлению.НомерГТД,
	|	ВЫБОР
	|		КОГДА (ВЫБОР
	|					КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|						ТОГДА ВЫБОР
	|								КОГДА &ЭтоОтчетОСписании
	|									ТОГДА ТоварыКОформлению.КоличествоСписано
	|								ИНАЧЕ ТоварыКОформлению.Количество
	|							КОНЕЦ
	|					ИНАЧЕ ВЫБОР
	|							КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|								ТОГДА 0
	|							КОГДА &ЭтоОтчетОСписании
	|								ТОГДА -ТоварыКОформлению.КоличествоСписано
	|							ИНАЧЕ -ТоварыКОформлению.Количество
	|						КОНЕЦ
	|				КОНЕЦ) >= 0
	|			ТОГДА 1
	|		ИНАЧЕ -1
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА ТоварыКОформлению.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА ВЫБОР
	|						КОГДА &ЭтоОтчетОСписании
	|							ТОГДА ТоварыКОформлению.КоличествоСписано
	|						ИНАЧЕ ТоварыКОформлению.Количество
	|					КОНЕЦ
	|			ИНАЧЕ ВЫБОР
	|					КОГДА ТоварыКОформлению.Регистратор = &ТекущийОтчет
	|						ТОГДА 0
	|					КОГДА &ЭтоОтчетОСписании
	|						ТОГДА -ТоварыКОформлению.КоличествоСписано
	|					ИНАЧЕ -ТоварыКОформлению.Количество
	|				КОНЕЦ
	|		КОНЕЦ) <> 0";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Граница = Новый Граница(ДокументОбъект.КонецПериода, ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Граница", Граница);
	Запрос.УстановитьПараметр("НачалоПериода", ДокументОбъект.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ДокументОбъект.КонецПериода));
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ТекущийОтчет", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("ЭтоОтчетОСписании", ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациямиОСписании"));
	
	Запрос.Выполнить();
	
	УчетНДСУП.ДополнитьТаблицуДаннымиСчетовФактурВыданныхПокупателям(МенеджерВременныхТаблиц, "ТаблицаОстатков");
	
КонецПроцедуры

// Процедура формирует таблицу остатков товаров, переданных на комиссию.
//
Процедура ТаблицаОстатковТоваровПереданныхНаКомиссию(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов, МенеджерВременныхТаблиц, ДатаОстатков) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ ВтОтборПоНоменклатуре
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК Отборы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО Отборы.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВТОтборПоАналитикамПартнера
	|ИЗ
	|	ТаблицаТоваров КАК Товары
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|	ПО Товары.Номенклатура = Аналитика.Номенклатура
	|		И Товары.Характеристика = Аналитика.Характеристика
	|		И Товары.Назначение = Аналитика.Назначение
	|		И Аналитика.МестоХранения = &Партнер
	//++ НЕ УТ 
	|		И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	//-- НЕ УТ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения КАК СкладОтгрузки,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА &ЭтоОтчетКомиссионера
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов
	|		КОГДА ЕСТЬNULL(ВидыЗапасов.РеализацияЗапасовДругойОрганизации, ЛОЖЬ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ТоварыОрганизаций.Знак,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ
	|		Товары.Организация КАК Организация,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.НомерГТД КАК НомерГТД,
	|		Товары.КоличествоОстаток КАК Количество,
	|		ВЫБОР
	|			КОГДА Товары.КоличествоОстаток < 1
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК Знак,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию.Остатки(&ГраницаМесяца,
	|			АналитикаУчетаНоменклатуры В 
	|				(ВЫБРАТЬ
	|					Отбор.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ВТОтборПоАналитикамПартнера КАК Отбор)
	|				И Соглашение = &Соглашение
	|				И Организация = &Организация
	|		) КАК Товары
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|			ПО Товары.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И Товары.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И Товары.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И Товары.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И Товары.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Товары.Организация КАК Организация,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.НомерГТД КАК НомерГТД,
	|		-(ВЫБОР
	|			КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -Товары.Количество
	|			ИНАЧЕ Товары.Количество
	|		КОНЕЦ) КАК Количество,
	|		-(ВЫБОР
	|		КОГДА Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -1
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК Знак,
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеНаКомиссию КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|			ПО Товары.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И Товары.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И Товары.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И Товары.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И Товары.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|ГДЕ
	|	Товары.Период <= &КонецПериода
	|	И Товары.Регистратор = &Ссылка
	|	И Товары.Активность
	|	И Товары.Организация = &Организация
	|	И Товары.АналитикаУчетаНоменклатуры.МестоХранения = &Партнер
	|	И Товары.Соглашение = &Соглашение
	|	И Товары.АналитикаУчетаНоменклатуры В
	|			(ВЫБРАТЬ
	|				Отбор.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ВТОтборПоАналитикамПартнера КАК Отбор)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Возвратная тара, списанная документом
	|		Движения.ВидЗапасов.Организация КАК Организация,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Движения.ВидЗапасов КАК ВидЗапасов,
	|		Движения.НомерГТД КАК НомерГТД,
	|		Движения.Количество КАК Количество,
	|		0 КАК Знак,
	|		Движения.ДокументПередачи.Дата КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара КАК Движения
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Движения.Номенклатура = Аналитика.Номенклатура
	|			И Движения.Характеристика = Аналитика.Характеристика
	|			И Движения.Партнер = Аналитика.МестоХранения
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	//++ НЕ УТ 
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	//-- НЕ УТ
	|	ГДЕ
	|		Движения.Регистратор = &Ссылка
	|		И Движения.Активность
	|		И Движения.ВидЗапасов.Организация = &Организация
	|		И Движения.Партнер = &Партнер
	|		И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Переданная возвратная тара
	|		Остатки.ВидЗапасов.Организация КАК Организация,
	|		Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК Количество,
	|		0 КАК Знак,
	|		ДокументПередачи.Дата КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(&ГраницаМесяца,
	|			ВидЗапасов.Организация = &Организация
	|			И Партнер = &Партнер
	|			И (Номенклатура, Характеристика) В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВтОтборПоНоменклатуре.Номенклатура,
	|					ВтОтборПоНоменклатуре.Характеристика
	|				ИЗ
	|					ВтОтборПоНоменклатуре КАК ВтОтборПоНоменклатуре
	|				)
	|		) КАК Остатки
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Остатки.Номенклатура = Аналитика.Номенклатура
	|			И Остатки.Характеристика = Аналитика.Характеристика
	|			И Остатки.Партнер = Аналитика.МестоХранения
	|			И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	//++ НЕ УТ 
	|			И ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка) = Аналитика.СтатьяКалькуляции
	//-- НЕ УТ
	|		ГДЕ
	|			&ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтКомиссионера)
	|
	|	) КАК ТоварыОрганизаций
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|	ПО ТоварыОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения,
	|	ВЫБОР
	|		КОГДА &ЭтоОтчетКомиссионера
	|			ТОГДА ТоварыОрганизаций.ВидЗапасов
	|		КОГДА ЕСТЬNULL(ВидыЗапасов.РеализацияЗапасовДругойОрганизации, ЛОЖЬ)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|	ТоварыОрганизаций.НомерГТД,
	|	ТоварыОрганизаций.Знак
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтОтборПоНоменклатуре
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтборПоАналитикамПартнера
	|";

	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями") 
		ИЛИ ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациямиОСписании") Тогда
		Запрос.УстановитьПараметр("Соглашение", Справочники.СоглашенияСКлиентами.ПустаяСсылка());
		Запрос.УстановитьПараметр("ЭтоОтчетПоКомиссии", Истина);
		Запрос.УстановитьПараметр("Партнер", ДокументОбъект.Комиссионер);
	Иначе
		Запрос.УстановитьПараметр("Соглашение", ДокументОбъект.Соглашение);
		Запрос.УстановитьПараметр("ЭтоОтчетПоКомиссии", Ложь);
		Запрос.УстановитьПараметр("Партнер", ДокументОбъект.Партнер);
	КонецЕсли;
	Запрос.УстановитьПараметр("ГраницаМесяца", Новый Граница(КонецМесяца(ДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаОстатков));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ДатаОстатков));
	Запрос.УстановитьПараметр("ЭтоОтчетПоКомиссии", ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетПоКомиссииМеждуОрганизациями"));
	Запрос.УстановитьПараметр("ЭтоОтчетКомиссионера", ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионера")
		Или ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ОтчетКомиссионераОСписании"));
	Если ТипЗнч(ДокументОбъект.Ссылка) = Тип("ДокументСсылка.ВозвратТоваровОтКлиента") Тогда
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", ДокументОбъект.ХозяйственнаяОперация);
	Иначе
		Запрос.УстановитьПараметр("ХозяйственнаяОперация", Неопределено);
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков реализованных товаров.
//
Процедура ТаблицаОстатковРеализованныхТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаТоваров.СпособОпределенияСебестоимости КАК СпособОпределенияСебестоимости,
	|	ВЫРАЗИТЬ(ТаблицаТоваров.АналитикаУчетаНоменклатуры КАК Справочник.КлючиАналитикиУчетаНоменклатуры) КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ СгруппированнаяТаблицаТоваров
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаТоваров.ДокументРеализации КАК Ссылка,
	|	КлючиАналитикиУчетаНоменклатуры.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ТаблицаТоваровСКлючамиПоВсемСкладам
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ТаблицаТоваров.Номенклатура = КлючиАналитикиУчетаНоменклатуры.Номенклатура
	|			И ТаблицаТоваров.Характеристика = КлючиАналитикиУчетаНоменклатуры.Характеристика
	|			И ТаблицаТоваров.Серия = КлючиАналитикиУчетаНоменклатуры.Серия
	|
	|ГДЕ
	|	ТаблицаТоваров.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзДокументаПродажи)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ТЧВидыЗапасов.Ссылка КАК ДокументРеализации,
	|	ТЧВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТЧВидыЗапасов.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТЧВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТЧВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ РеализованныеТовары
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.ВидыЗапасов КАК ТЧВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|
	|ГДЕ
	|	ТЧВидыЗапасов.Ссылка.Проведен
	|	И (ТЧВидыЗапасов.Ссылка, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И ТЧВидыЗапасов.ВидЗапасов В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ТЧВидыЗапасов.Ссылка,
	|	ТЧВидыЗапасов.ВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД,
	|	ТЧВидыЗапасов.Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТЧВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТЧВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах.ВидыЗапасов КАК ТЧВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|
	|ГДЕ
	|	(ТЧВидыЗапасов.Ссылка, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Проведен
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И ТаблицаДанныхДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВозвратОтРозничногоПокупателя)
	|	И ТЧВидыЗапасов.ВидЗапасов В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ТЧВидыЗапасов.Ссылка.ДокументОснование,
	|	ТЧВидыЗапасов.ВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД,
	|	ТЧВидыЗапасов.Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТЧВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТЧВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовСписание КАК ТЧВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ТЧВидыЗапасов.Ссылка.ДокументОснование = РеализацияТоваровУслуг.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|
	|ГДЕ
	|	ТЧВидыЗапасов.Ссылка <> &Ссылка
	|	И (ТЧВидыЗапасов.Ссылка.ДокументОснование, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Проведен
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И НЕ ТЧВидыЗапасов.НаДоходыРасходы
	|	И ТЧВидыЗапасов.ВидЗапасов В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатуры,
	|	ТЧВидыЗапасов.Ссылка.ДокументОснование,
	|	ТЧВидыЗапасов.ВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД,
	|	-ТЧВидыЗапасов.Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТЧВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ -ТЧВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.КорректировкаРеализации.ВидыЗапасовОприходование КАК ТЧВидыЗапасов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО ТЧВидыЗапасов.Ссылка.ДокументОснование = РеализацияТоваровУслуг.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|
	|ГДЕ
	|	ТЧВидыЗапасов.Ссылка <> &Ссылка
	|	И (ТЧВидыЗапасов.Ссылка.ДокументОснование, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Проведен
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И НЕ ТЧВидыЗапасов.НаДоходыРасходы
	|	И ТЧВидыЗапасов.ВидЗапасов В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки,
	|	ТЧВидыЗапасов.ДокументРеализации,
	|	ТЧВидыЗапасов.ВидЗапасов,
	|	ТЧВидыЗапасов.НомерГТД,
	|	-ТЧВидыЗапасов.Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТЧВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ -ТЧВидыЗапасов.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.ВидыЗапасов КАК ТЧВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ТЧВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|
	|ГДЕ
	|	ТЧВидыЗапасов.Ссылка <> &Ссылка
	|	И (ТЧВидыЗапасов.Ссылка.ДокументРеализации, ТЧВидыЗапасов.АналитикаУчетаНоменклатуры) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.Ссылка,
	|				ТаблицаТоваровСКлючамиПоВсемСкладам.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваровСКлючамиПоВсемСкладам)
	|	И ТЧВидыЗапасов.Ссылка.Проведен
	|	И ТЧВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, ДЕНЬ)
	|	И ТЧВидыЗапасов.ВидЗапасов В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатурыОтгрузки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	ТаблицаДанныхДокумента.Склад КАК Склад,
	|	СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Номенклатура КАК Номенклатура,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Характеристика КАК Характеристика,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Серия КАК Серия,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.МестоХранения КАК СкладОтгрузки,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Назначение КАК Назначение,
	|	РеализованныеТовары.ДокументРеализации КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА РеализованныеТовары.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РеализованныеТовары.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА РеализованныеТовары.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА РеализованныеТовары.ВидЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ РеализованныеТовары.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасовВладельца,
	|	РеализованныеТовары.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	РеализованныеТовары.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ДатаПоступления,
	|	СУММА(РеализованныеТовары.Количество) КАК КоличествоОстаток,
	|	СУММА(РеализованныеТовары.КоличествоПоРНПТ) КАК КоличествоПоРНПТОстаток,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	РеализованныеТовары КАК РеализованныеТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СгруппированнаяТаблицаТоваров КАК СгруппированнаяТаблицаТоваров
	|		ПО РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Номенклатура = СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.Номенклатура
	|			И РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Характеристика = СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.Характеристика
	|			И РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Серия = СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.Серия
	|			И ВЫБОР КОГДА &ЭтоКорректировкаРеализации
	|				ТОГДА РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.МестоХранения = СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.МестоХранения
	|			ИНАЧЕ
	|				ИСТИНА
	|			КОНЕЦ
	|			И РеализованныеТовары.ДокументРеализации = СгруппированнаяТаблицаТоваров.ДокументРеализации
	|			И (РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Назначение = СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение
	|				ИЛИ СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				ИЛИ РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	|			И (СгруппированнаяТаблицаТоваров.СпособОпределенияСебестоимости = ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзДокументаПродажи))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДанныхДокумента.Склад,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Номенклатура,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Серия,
	|	СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Назначение,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.МестоХранения,
	|	РеализованныеТовары.НомерГТД,
	|	ТаблицаДанныхДокумента.Организация,
	|	РеализованныеТовары.ДокументРеализации,
	|	РеализованныеТовары.АналитикаУчетаНоменклатурыОтгрузки.Характеристика,
	|	ВЫБОР
	|		КОГДА РеализованныеТовары.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РеализованныеТовары.ВидЗапасов
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РеализованныеТовары.ВидЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА РеализованныеТовары.ВидЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ РеализованныеТовары.ВидЗапасов
	|	КОНЕЦ,
	|	РеализованныеТовары.ВидЗапасов
	|
	|ИМЕЮЩИЕ
	|	СУММА(РеализованныеТовары.Количество) > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация,
	|	ТаблицаДанныхДокумента.Склад,
	|	СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.Номенклатура,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.Характеристика,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.Серия,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.МестоХранения,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки.Назначение,
	|	ТаблицаВидыЗапасов.ДокументРеализации,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка),
	|	НЕОПРЕДЕЛЕНО,
	|	НЕОПРЕДЕЛЕНО,
	|	ТаблицаВидыЗапасов.Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ,
	|	0
	|ИЗ
	|	СгруппированнаяТаблицаТоваров КАК СгруппированнаяТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ПО СгруппированнаяТаблицаТоваров.АналитикаУчетаНоменклатуры = ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры
	|			И (СгруппированнаяТаблицаТоваров.СпособОпределенияСебестоимости <> ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзДокументаПродажи))
	|			И (ТаблицаВидыЗапасов.СпособОпределенияСебестоимости <> ЗНАЧЕНИЕ(Перечисление.СпособыОпределенияСебестоимости.ИзДокументаПродажи))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО (ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ РеализованныеТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СгруппированнаяТаблицаТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаТоваровСКлючамиПоВсемСкладам";

	Запрос.УстановитьПараметр("ЭтоКорректировкаРеализации", ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаРеализации"));
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков товаров к оформлению отчетов комитенту.
//
Процедура ТаблицаОстатковКОформлениюОтчетаКомитенту(ДокументОбъект, МенеджерВременныхТаблиц, ДатаОстатков)
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	Неопределено КАК ВидЗапасовОтгрузки,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.СуммаВыручки) КАК СуммаОстаток
	|
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, списанные документом
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			ТоварыКОформлению.КоличествоСписано
	|		ИНАЧЕ
	|			ТоварыКОформлению.Количество
	|		КОНЕЦ КАК Количество,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			0
	|		ИНАЧЕ
	|			ТоварыКОформлению.СуммаВыручки
	|		КОНЕЦ КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|	
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК Отборы
	|		ПО Отборы.ВидЗапасов = ТоварыКОформлению.ВидЗапасов
	|			И Отборы.АналитикаУчетаНоменклатуры = ТоварыКОформлению.АналитикаУчетаНоменклатуры
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	ГДЕ
	|		ТоварыКОформлению.Регистратор = &Ссылка
	|		И ТоварыКОформлению.ВидЗапасов.Организация = &Организация
	|		И ТоварыКОформлению.Активность
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Реализованные виды запасов
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			ТоварыКОформлению.КоличествоСписаноОстаток
	|		ИНАЧЕ
	|			ТоварыКОформлению.КоличествоОстаток
	|		КОНЕЦ КАК Количество,
	|
	|		ВЫБОР КОГДА &ЭтоОтчетКомитентуОСписании ТОГДА
	|			0
	|		ИНАЧЕ
	|			ТоварыКОформлению.СуммаВыручкиОстаток
	|		КОНЕЦ КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Остатки(&Дата,
	|			Валюта = &Валюта
	|			И (ВидЗапасов, АналитикаУчетаНоменклатуры) В (
	|				ВЫБРАТЬ
	|					Отборы.ВидЗапасов,
	|					Отборы.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ВтОтборыОстатковОрганизаций КАК Отборы
	|				)
	|		) КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Виды запасов, указанные в документе вручную.
	|		Запасы.ВидЗапасов.Организация КАК Организация,
	|		Запасы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Запасы.ВидЗапасов КАК ВидЗапасов,
	|		Запасы.НомерГТД КАК НомерГТД,
	|		Запасы.Количество КАК Количество,
	|		Запасы.СуммаСНДС КАК СуммаВыручки,
	|		ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК Запасы
	|	ГДЕ
	|		Запасы.ВидыЗапасовУказаныВручную
	|		И (Запасы.АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|
	|	) КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Валюта", ДокументОбъект.Валюта);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ЭтоОтчетКомитентуОСписании", ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОтчетКомитентуОСписании"));
	Запрос.УстановитьПараметр("Дата", КонецДня(ДатаОстатков) + 1);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры 

Процедура ТаблицаОстатковКОформлениюОтчетаКомитентуОСписании(ДокументОбъект, МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос("
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МАКСИМУМ(ТоварыОрганизаций.ДатаПоступления) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.СуммаВыручки) КАК СуммаОстаток,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // ВидыЗапасов, списанные документом
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ТоварыКОформлению.КоличествоСписано КАК Количество,
	|		0 КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|	ГДЕ
	|		ТоварыКОформлению.Регистратор = &Ссылка
	|		И ТоварыКОформлению.ВидЗапасов.Организация = &Организация
	|		И ТоварыКОформлению.Активность
	|		И ТоварыКОформлению.ВидЗапасов В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Отборы.ВидЗапасов
	|			ИЗ
	|				ВтОтборыОстатковОрганизаций КАК Отборы
	|			)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Списанные виды запасов
	|		ТоварыКОформлению.ВидЗапасов.Организация КАК Организация,
	|		ТоварыКОформлению.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыКОформлению.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыКОформлению.НомерГТД КАК НомерГТД,
	|		ТоварыКОформлению.КоличествоСписаноПриход - ТоварыКОформлению.КоличествоСписаноРасход КАК Количество,
	|		0 КАК СуммаВыручки,
	|
	|		ДатыПередачиТоваровНаКомиссию.ДатаПередачи КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыКОформлениюОтчетовКомитенту.Обороты(&НачалоПериода, &КонецПериода, Период,
	|			Валюта = &Валюта
	|			И (АналитикаУчетаНоменклатуры, ВидЗапасов) В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Отборы.АналитикаУчетаНоменклатуры,
	|					Отборы.ВидЗапасов
	|				ИЗ
	|					ВтОтборыОстатковОрганизаций КАК Отборы
	|				)
	|		) КАК ТоварыКОформлению
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|			РегистрСведений.ДатыПередачиТоваровНаКомиссию КАК ДатыПередачиТоваровНаКомиссию
	|		ПО
	|			ТоварыКОформлению.ВидЗапасов = ДатыПередачиТоваровНаКомиссию.ВидЗапасов
	|			И ТоварыКОформлению.АналитикаУчетаНоменклатуры = ДатыПередачиТоваровНаКомиссию.АналитикаУчетаНоменклатуры
	|			И ТоварыКОформлению.НомерГТД = ДатыПередачиТоваровНаКомиссию.НомерГТД
	|			И ТоварыКОформлению.ВидЗапасов.Соглашение = ДатыПередачиТоваровНаКомиссию.Соглашение
	|			И ТоварыКОформлению.ВидЗапасов.Организация = ДатыПередачиТоваровНаКомиссию.Организация
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Виды запасов, указанные в документе вручную.
	|		Запасы.ВидЗапасов.Организация КАК Организация,
	|		Запасы.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Запасы.ВидЗапасов КАК ВидЗапасов,
	|		Запасы.НомерГТД КАК НомерГТД,
	|		Запасы.Количество КАК Количество,
	|		0 КАК СуммаВыручки,
	|		ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления
	|	ИЗ
	|		ТаблицаВидыЗапасов КАК Запасы
	|	ГДЕ
	|		Запасы.ВидыЗапасовУказаныВручную
	|		И (Запасы.АналитикаУчетаНоменклатуры) В (
	|			ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				ТаблицаТоваров.АналитикаУчетаНоменклатуры
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|			)
	|
	|	) КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыОрганизаций.Организация,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|");
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Валюта", ДокументОбъект.Валюта);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", ?(ЗначениеЗаполнено(ДокументОбъект.НачалоПериода), ДокументОбъект.НачалоПериода, НачалоМесяца(ДокументОбъект.Дата)));
	Запрос.УстановитьПараметр("КонецПериода", ?(ЗначениеЗаполнено(ДокументОбъект.КонецПериода), КонецДня(ДокументОбъект.КонецПериода), КонецМесяца(ДокументОбъект.Дата)));
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Формирование врем.табл. ТаблицаОстатков к передаче по интеркампани.
// Параметры:
//	Ссылка - ДокументСсылка.{ПередачаТоваровМеждуОрганизациями | ВозвратТоваровМеждуОрганизациями}
//	Владелец - СправочникСсылка.Организации, владелец передаваемого/возвращаемого запаса
//	Склад - склад подбора остатков в операции
//	Дата - дата подбора остатков
//	ВременныеТаблицы - менеджер временных таблиц для ТаблицаОстатков, должен содержать ВТ ДоступныеВидыЗапасов
//	ПоВсемВидамЗапасов - признак игнорирования доступных видов запасов.
Процедура ТаблицаОстатковТоваровКПередаче(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КПередаче.Организация КАК Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КПередаче.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КПередаче.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КПередаче.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	КПередаче.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасов,
	|	КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасовВладельца,
	|	КПередаче.ВидЗапасовПродавца КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления,
	|	КПередаче.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	КПередаче.НомерГТД КАК НомерГТД,
	|	СУММА(КПередаче.Количество) КАК КоличествоОстаток,
	|	0 КАК НаДатуКонтроля,
	|	0 КАК НаДатуАктуальности,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасовПродавца,
	|		КПередаче.НомерГТД КАК НомерГТД,
	|		КПередаче.Количество КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче КАК КПередаче
	|	ГДЕ
	|		КПередаче.Регистратор = &Ссылка
	|		И КПередаче.ОрганизацияВладелец = &Владелец
	|		И КПередаче.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец,
	|		КПередаче.АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца,
	|		КПередаче.ВидЗапасовПродавца,
	|		КПередаче.НомерГТД,
	|		КПередаче.КоличествоОстаток,
	|		ДАТАВРЕМЯ(1, 1, 1)
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|				&Дата,
	|				(ОрганизацияВладелец, АналитикаУчетаНоменклатуры, ВидЗапасовПродавца) В
	|					(ВЫБРАТЬ
	|						ВидыЗапасов.Организация КАК ОрганизацияВладелец,
	|						ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|						ВидыЗапасов.ВидЗапасов КАК ВидЗапасовПродавца
	|					ИЗ
	|						ВтОтборыОстатковОрганизаций КАК ВидыЗапасов)) КАК КПередаче) КАК КПередаче
	|
	|СГРУППИРОВАТЬ ПО
	|	КПередаче.Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры,
	|	КПередаче.АналитикаУчетаНоменклатуры.Номенклатура,
	|	КПередаче.АналитикаУчетаНоменклатуры.Характеристика,
	|	КПередаче.АналитикаУчетаНоменклатуры.Назначение,
	|	КПередаче.АналитикаУчетаНоменклатуры.Серия,
	|	КПередаче.АналитикаУчетаНоменклатуры.МестоХранения,
	|	КПередаче.ВидЗапасовПродавца,
	|	КПередаче.НомерГТД,
	|	КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца";
	
	ТекстЗапроса = ТекстЗапроса + " 
	|;
	|///////////////////////////////////////
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Владелец", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("Дата", Новый Граница(КонецДня(ДатаОстатков), ВидГраницы.Включая));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
КонецПроцедуры

// Формирование врем.табл. ТаблицаОстатков к возврату по интеркампани.
// Параметры:
//	Ссылка - ДокументСсылка.{ПередачаТоваровМеждуОрганизациями | ВозвратТоваровМеждуОрганизациями}
//	Владелец - СправочникСсылка.Организации, владелец передаваемого/возвращаемого запаса
//	Склад - склад подбора остатков в операции
//	Дата - дата подбора остатков
//	ВременныеТаблицы - менеджер временных таблиц для ТаблицаОстатков, должен содержать ВТ ДоступныеВидыЗапасов
//	ПоВсемВидамЗапасов - признак игнорирования доступных видов запасов.
Процедура ТаблицаОстатковТоваровКВозврату(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КПередаче.Организация КАК Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	КПередаче.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	КПередаче.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	КПередаче.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	КПередаче.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	КПередаче.ВидЗапасов КАК ВидЗапасов,
	|	КПередаче.ВидЗапасовПолучателя КАК ВидЗапасовВладельца,
	|	КПередаче.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаПоступления,
	|	КПередаче.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	КПередаче.НомерГТД КАК НомерГТД,
	|	СУММА(КПередаче.Количество) КАК КоличествоОстаток,
	|	0 КАК НаДатуКонтроля,
	|	0 КАК НаДатуАктуальности,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасовПолучателя,
	|		КПередаче.НомерГТД КАК НомерГТД,
	|		КПередаче.Возвращено КАК Количество,
	|		ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче КАК КПередаче
	|	ГДЕ
	|		КПередаче.Регистратор = &Ссылка
	|		И КПередаче.ОрганизацияВладелец = &Владелец
	|		И КПередаче.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КПередаче.ОрганизацияВладелец КАК Организация,
	|		КПередаче.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		КПередаче.ВидЗапасовПродавца КАК ВидЗапасов,
	|		КПередаче.ВидЗапасовПродавца.ВидЗапасовВладельца КАК ВидЗапасовПолучателя,
	|		КПередаче.НомерГТД,
	|		КПередаче.ВозвращеноОстаток,
	|		ДАТАВРЕМЯ(1, 1, 1)
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизацийКПередаче.Остатки(
	|			&Дата,
	|			(ОрганизацияВладелец, АналитикаУчетаНоменклатуры, ВидЗапасовПродавца) В
	|				(ВЫБРАТЬ
	|					&Владелец КАК ОрганизацияВладелец,
	|					ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|					ВидыЗапасов.ВидЗапасов КАК ВидЗапасовПродавца
	|				ИЗ
	|					ВтОтборыОстатковОрганизаций КАК ВидыЗапасов)
	|		) КАК КПередаче
	|
	|) КАК КПередаче
	|
	|СГРУППИРОВАТЬ ПО
	|	КПередаче.Организация,
	|	КПередаче.АналитикаУчетаНоменклатуры,
	|	КПередаче.АналитикаУчетаНоменклатуры.Номенклатура,
	|	КПередаче.АналитикаУчетаНоменклатуры.Характеристика,
	|	КПередаче.АналитикаУчетаНоменклатуры.Назначение,
	|	КПередаче.АналитикаУчетаНоменклатуры.Серия,
	|	КПередаче.АналитикаУчетаНоменклатуры.МестоХранения,
	|	КПередаче.ВидЗапасовПолучателя,
	|	КПередаче.НомерГТД,
	|	КПередаче.ВидЗапасов
	|";
	
	ТекстЗапроса = ТекстЗапроса + " 
	|;
	|///////////////////////////////////////
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Владелец", ДокументОбъект.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("Дата", ДатаОстатков + 1);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ТаблицаПродукцияКОформлениюВыпуска(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов, ДатаОстатков)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РезервыТоваровОрганизаций.Период КАК ДатаПоступления,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	РезервыТоваровОрганизаций.Организация КАК Организация,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	СУММА(РезервыТоваровОрганизаций.Количество) КАК КоличествоОстаток,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период,
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация КАК Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|		РезервыТоваровОрганизаций.Количество КАК Количество
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|			ПО РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры
	|				И РезервыТоваровОрганизаций.Организация = ВтОтборыОстатковОрганизаций.Организация
	|				И РезервыТоваровОрганизаций.ВидЗапасов = ВтОтборыОстатковОрганизаций.ВидЗапасов
	|				И (РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|				И (РезервыТоваровОрганизаций.Период >= &НачалоМесяцаДокумента)
	|				И (РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ),
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД,
	|		-РезервыТоваровОрганизаций.Количество
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|			ПО РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры
	|				И РезервыТоваровОрганизаций.Организация = ВтОтборыОстатковОрганизаций.Организация
	|				И РезервыТоваровОрганизаций.ВидЗапасов = ВтОтборыОстатковОрганизаций.ВидЗапасов
	|				И (РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|				И (РезервыТоваровОрганизаций.Период >= &НачалоМесяцаДокумента)
	|				И (РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварТребующийПодтвержденияВыпуска))
	|				И (РезервыТоваровОрганизаций.Регистратор = &Ссылка)) КАК РезервыТоваровОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	РезервыТоваровОрганизаций.Период,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.Организация,
	|	РезервыТоваровОрганизаций.ВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|	РезервыТоваровОрганизаций.ВидЗапасов";

	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("НачалоМесяцаДокумента", НачалоМесяца(ДатаОстатков));
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

// Процедура формирует таблицу остатков списанных на расходы товаров.
//
Процедура ТаблицаОстатковСписанныхНаРасходыТоваров(ДокументОбъект,
													МенеджерВременныхТаблиц,
													ПараметрыЗаполненияВидовЗапасов)
	
	ДокументСсылка = ДокументОбъект.Ссылка;
	Организация    = ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата
	|ПОМЕСТИТЬ ДокументыСписания
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВнутреннееПотреблениеТоваров КАК ДанныеДокумента
	|		ПО ТаблицаТоваров.ДокументРеализации = ДанныеДокумента.Ссылка
	|ГДЕ
	|	ДанныеДокумента.Проведен
	|	И ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеТоваровПоТребованию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.Регистратор КАК ДокументРеализации,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТоварыОрганизаций.Количество
	|		ИНАЧЕ ТоварыОрганизаций.Количество
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТоварыОрганизаций.КоличествоПоРНПТ
	|		ИНАЧЕ ТоварыОрганизаций.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ДокументыСписания.Дата КАК ДатаСписания
	|ПОМЕСТИТЬ ОстаткиСписанныхНаРасходТоваров
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыСписания КАК ДокументыСписания
	|		ПО ТоварыОрганизаций.Регистратор = ДокументыСписания.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.ДокументРеализации,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Серия,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.МестоХранения,
	|	ТоварыОрганизаций.КорАналитикаУчетаНоменклатуры.Назначение,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТоварыОрганизаций.Количество
	|		ИНАЧЕ ТоварыОрганизаций.Количество
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТоварыОрганизаций.КоличествоПоРНПТ
	|		ИНАЧЕ ТоварыОрганизаций.КоличествоПоРНПТ
	|	КОНЕЦ,
	|	ДокументыСписания.Дата
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыСписания КАК ДокументыСписания
	|		ПО ТоварыОрганизаций.ДокументРеализации = ДокументыСписания.Ссылка
	|ГДЕ
	|	НЕ ТоварыОрганизаций.Регистратор В
	|				(ВЫБРАТЬ
	|					ДокументыСписания.Ссылка КАК Ссылка
	|				ИЗ
	|					ДокументыСписания КАК ДокументыСписания)
	|	И ТоварыОрганизаций.Регистратор <> &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Склад КАК Склад,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.Склад КАК СкладОтгрузки,
	|	ТоварыОрганизаций.Номенклатура КАК Номенклатура,
	|	ТоварыОрганизаций.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.Серия КАК Серия,
	|	ТоварыОрганизаций.Назначение КАК Назначение,
	|	ТоварыОрганизаций.ДокументРеализации КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.Организация <> &Организация
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.Ссылка
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовВладельца,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	МИНИМУМ(РАЗНОСТЬДАТ(ТоварыОрганизаций.ДатаСписания, &МаксимальнаяДата, ДЕНЬ)) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество) КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.КоличествоПоРНПТ) КАК КоличествоПоРНПТОстаток,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ОстаткиСписанныхНаРасходТоваров КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ТоварыОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТоварыОрганизаций.Номенклатура = Аналитика.Номенклатура
	|			И ТоварыОрганизаций.Характеристика = Аналитика.Характеристика
	|			И ТоварыОрганизаций.Серия = Аналитика.Серия
	|			И ТоварыОрганизаций.Склад = Аналитика.МестоХранения
	|			И ТоварыОрганизаций.Назначение = Аналитика.Назначение
	//++ НЕ УТ
	|			И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	//-- НЕ УТ
	|
	|СГРУППИРОВАТЬ ПО
	|	Аналитика.КлючАналитики,
	|	ТоварыОрганизаций.Склад,
	|	ТоварыОрганизаций.Номенклатура,
	|	ТоварыОрганизаций.Характеристика,
	|	ТоварыОрганизаций.Серия,
	|	ТоварыОрганизаций.Назначение,
	|	ТоварыОрганизаций.ДокументРеализации,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.Организация <> &Организация
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|		ИНАЧЕ ВидыЗапасов.Ссылка
	|	КОНЕЦ,
	|	ТоварыОрганизаций.ВидЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыСписания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиСписанныхНаРасходТоваров");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", ДокументОбъект.Склад);
	Запрос.УстановитьПараметр("МаксимальнаяДата", Дата(2399, 1, 1));
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Выполнить();
	
КонецПроцедуры

//++ НЕ УТ

// Метод возвращает в документ "Возврат сырья от переработчика" таблицу остатков товаров.
//
Процедура ТаблицаОстатковДляВозвратаПереданныхПереработчикуТоваров(ДокументОбъект,
																	МенеджерВременныхТаблиц,
																	ПараметрыЗаполненияВидовЗапасов,
																	ДатаОстатков)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Дата КАК Дата
	|ПОМЕСТИТЬ ДокументыРеализации
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ИСТИНА
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаСырьяПереработчику КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументРеализации
	|			ИЛИ (ТаблицаТоваров.ПодбиратьВидыЗапасов
	|				И ТаблицаТоваров.ДокументРеализации = НЕОПРЕДЕЛЕНО
	|				И ДанныеДокумента.Организация = ТаблицаДанныхДокумента.Организация
	|				И ДанныеДокумента.Партнер     = ТаблицаДанныхДокумента.Партнер
	|				И ДанныеДокумента.Контрагент  = ТаблицаДанныхДокумента.Контрагент)
	|
	|ГДЕ
	|	ДанныеДокумента.Дата <= &Дата
	|		ИЛИ ДанныеДокумента.Ссылка = ТаблицаТоваров.ДокументРеализации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДокументыВозврата
	|ИЗ
	|	Документ.ВозвратСырьяОтПереработчика КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ДанныеДокумента.Организация = ТаблицаДанныхДокумента.Организация
	|			И ДанныеДокумента.Партнер = ТаблицаДанныхДокумента.Партнер
	|			И ДанныеДокумента.Контрагент = ТаблицаДанныхДокумента.Контрагент
	|
	|ГДЕ
	|	ДанныеДокумента.Ссылка <> &Ссылка
	|	И ДанныеДокумента.Дата <= &Дата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокумента.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДокументыВводаОстатков
	|ИЗ
	|	Документ.ВводОстатков КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО ДанныеДокумента.Организация = ТаблицаДанныхДокумента.Организация
	|			И ДанныеДокумента.Партнер = ТаблицаДанныхДокумента.Партнер
	|			И ДанныеДокумента.Контрагент = ТаблицаДанныхДокумента.Контрагент
	|
	|ГДЕ
	|	ДанныеДокумента.ТипОперации = ЗНАЧЕНИЕ(Перечисление.ТипыОперацийВводаОстатков.ОстаткиМатериаловПереданныхПереработчикам)
	|	И ДанныеДокумента.ОтражатьВОперативномУчете
	|	И ДанныеДокумента.Проведен
	|	И ДанныеДокумента.Дата <= &Дата
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // ВидыЗапасов, отгруженные документом передачи
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ТоварыОрганизаций.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ТоварыОрганизаций.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ДокументыРеализации.Дата КАК ДатаРеализации
	|ПОМЕСТИТЬ втТоварыОрганизаций
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыРеализации КАК ДокументыРеализации
	|		ПО ТоварыОрганизаций.Регистратор = ДокументыРеализации.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.МестоХранения = &Партнер
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение = Аналитика.Назначение
	|			И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|ГДЕ
	|	ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И (&ПереданнаяТара И Аналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ НЕ &ПереданнаяТара)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // ВидыЗапасов, возвращенные от переработчика
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ВЫБОР
	|		КОГДА НЕ ТоварыОрганизаций.КорВидЗапасов = ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА ТоварыОрганизаций.КорВидЗапасов.РеализацияЗапасовДругойОрганизации
	|						ТОГДА ТоварыОрганизаций.КорВидЗапасов.ВидЗапасовВладельца
	|					ИНАЧЕ ТоварыОрганизаций.КорВидЗапасов
	|				КОНЕЦ
	|		ИНАЧЕ ТоварыОрганизаций.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД КАК НомерГТД,
	|	ВЫБОР
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТоварыОрганизаций.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ТоварыОрганизаций.КоличествоПоРНПТ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВозврата КАК ДокументыВозврата
	|		ПО ТоварыОрганизаций.Регистратор = ДокументыВозврата.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.МестоХранения = &Партнер
	|			И ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение = Аналитика.Назначение
	|			И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|ГДЕ
	|	НЕ (Аналитика.КлючАналитики ЕСТЬ NULL)
	|	И (&ПереданнаяТара И Аналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|		ИЛИ НЕ &ПереданнаяТара)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // ВидыЗапасов, указанные в документах ввода остатков
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ПереданныеПереработчикамТовары.ВидЗапасов КАК ВидЗапасов,
	|	ПереданныеПереработчикамТовары.НомерГТД КАК НомерГТД,
	|	ПереданныеПереработчикамТовары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(ПереданныеПереработчикамТовары.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ ПереданныеПереработчикамТовары.КоличествоПоРНПТ
	|	КОНЕЦ КАК КоличествоПоРНПТ,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации
	|ИЗ
	|	Документ.ВводОстатков.Товары КАК ПереданныеПереработчикамТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыВводаОстатков КАК ДокументыВводаОстатков
	|		ПО ПереданныеПереработчикамТовары.Ссылка = ДокументыВводаОстатков.Ссылка
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ПереданныеПереработчикамТовары.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
	|			И ПереданныеПереработчикамТовары.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.МестоХранения = &Партнер
	|			И Аналитика.Назначение = Аналитика.Назначение
	|			И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|ГДЕ
	|	(Аналитика.Номенклатура, Аналитика.Характеристика, НЕОПРЕДЕЛЕНО) В (
	|		ВЫБРАТЬ
	|			ТаблицаТоваров.Номенклатура,
	|			ТаблицаТоваров.Характеристика,
	|			ТаблицаТоваров.ДокументРеализации
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // ВидыЗапасов, указанные в документе
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ТаблицаВидыЗапасов.Количество КАК Количество,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаРеализации
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = Аналитика.Номенклатура
	|			И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = Аналитика.Характеристика
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.МестоХранения = &Партнер
	|			И ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение = Аналитика.Назначение
	|			И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|ГДЕ
	|	ТаблицаВидыЗапасов.ВидыЗапасовУказаныВручную
	|	И (Аналитика.Номенклатура, Аналитика.Характеристика, НЕОПРЕДЕЛЕНО) В (
	|		ВЫБРАТЬ
	|			ТаблицаТоваров.Номенклатура,
	|			ТаблицаТоваров.Характеристика,
	|			ТаблицаТоваров.ДокументРеализации
	|		ИЗ
	|			ТаблицаТоваров КАК ТаблицаТоваров)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Переданная возвратная тара
	|	Остатки.ДокументПередачи КАК ДокументРеализации,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.НомерГТД КАК НомерГТД,
	|	Остатки.КоличествоОстаток КАК Количество,
	|	0 КАК КоличествоПоРНПТ,
	|	Остатки.ДокументПередачи.Дата КАК ДатаРеализации
	|ИЗ
	|	РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(,
	|		&ПереданнаяТара
	|		И (Номенклатура, Характеристика, ДокументПередачи) В (
	|			ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика,
	|				ТаблицаТоваров.ДокументРеализации
	|			ИЗ
	|				ТаблицаТоваров КАК ТаблицаТоваров
	|		)
	|	) КАК Остатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Номенклатура = Остатки.Номенклатура
	|			И Аналитика.Характеристика = Остатки.Характеристика
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И Аналитика.МестоХранения = &Партнер
	|			И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ // Переданная возвратная тара, списанная текущим документом
	|	Движения.ДокументПередачи КАК ДокументРеализации,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	Движения.ВидЗапасов КАК ВидЗапасов,
	|	Движения.НомерГТД КАК НомерГТД,
	|	Движения.Количество КАК Количество,
	|	0 КАК КоличествоПоРНПТ,
	|	Движения.ДокументПередачи.Дата КАК ДатаРеализации
	|ИЗ
	|	РегистрНакопления.ПереданнаяВозвратнаяТара КАК Движения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ПО Аналитика.Номенклатура = Движения.Номенклатура
	|			И Аналитика.Характеристика = Движения.Характеристика
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|			И Аналитика.МестоХранения = &Партнер
	|			И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|ГДЕ
	|	Движения.Регистратор = &Ссылка
	|	И &ПереданнаяТара
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизаций.ДокументРеализации                        КАК ДокументРеализации,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры                КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура   КАК Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение     КАК Назначение,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия          КАК Серия,
	|	ТоварыОрганизаций.ВидЗапасов                                КАК ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД                                  КАК НомерГТД,
	|	МИНИМУМ(РАЗНОСТЬДАТ(ТоварыОрганизаций.ДатаРеализации, &МаксимальнаяДата, ДЕНЬ)) КАК ДатаПоступления,
	|	СУММА(ТоварыОрганизаций.Количество)                         КАК КоличествоОстаток,
	|	СУММА(ТоварыОрганизаций.КоличествоПоРНПТ)                   КАК КоличествоПоРНПТОстаток,
	|	0                                                           КАК Распределено,
	|	0                                                           КАК РаспределеноПоРНПТ
	|ИЗ
	|	втТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументРеализации,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|	ТоварыОрганизаций.ВидЗапасов,
	|	ТоварыОрганизаций.НомерГТД
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Характеристика,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Назначение,
	|	ТоварыОрганизаций.АналитикаУчетаНоменклатуры.Серия,
	|	ВидЗапасов,
	|	ДатаПоступления
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втТоварыОрганизаций;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыРеализации;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДокументыВозврата;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Организация", ОрганизацияДокумента(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов));
	Запрос.УстановитьПараметр("МаксимальнаяДата", Дата(2399, 1, 1));
	Запрос.УстановитьПараметр("ПереданнаяТара", ДокументОбъект.ВозвратПереданнойМногооборотнойТары);
	Запрос.УстановитьПараметр("ДатаКонцаМесяца", Новый Граница(КонецМесяца(ДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Партнер", ДокументОбъект.Партнер);
	Запрос.УстановитьПараметр("Дата", ДатаОстатков);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ТаблицаОстаткиПоГТД = Запрос.ВыполнитьПакет()[4].Выгрузить();
	КолонкиПоискаСтрокПоГТД = "Номенклатура, Характеристика, Назначение, Серия, ВидЗапасов";
	
	ТаблицаОстаткиПоГТД.Индексы.Добавить(КолонкиПоискаСтрокПоГТД);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтборыОстатковОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	Аналитика.КлючАналитики КАК АналитикаУчетаНоменклатуры
	|ПОМЕСТИТЬ ВТОтборПоКлючамАналитикиПартнеров
	|ИЗ
	|	РегистрСведений.АналитикаУчетаНоменклатуры КАК Аналитика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ОтборыОстатковОрганизаций
	|		ПО ОтборыОстатковОрганизаций.Номенклатура = Аналитика.Номенклатура
	|			И ОтборыОстатковОрганизаций.Характеристика = Аналитика.Характеристика
	|			И ОтборыОстатковОрганизаций.Назначение = Аналитика.Назначение
	|			И Аналитика.МестоХранения = &Партнер
	|			И Аналитика.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|			И Аналитика.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЗапасов,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ НаКонецМесяца
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеПереработчику.Остатки(
	|			&ДатаКонцаМесяца,
	|			(ВидЗапасов, АналитикаУчетаНоменклатуры) В
	|				(ВЫБРАТЬ
	|					ВТОтборПоКлючамАналитикиПартнеров.ВидЗапасов,
	|					ВТОтборПоКлючамАналитикиПартнеров.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ВТОтборПоКлючамАналитикиПартнеров)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЗапасов,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ НаДатуАктуальности
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеПереработчику.Остатки(
	|			,
	|			(ВидЗапасов, АналитикаУчетаНоменклатуры) В
	|				(ВЫБРАТЬ
	|					ВТОтборПоКлючамАналитикиПартнеров.ВидЗапасов,
	|					ВТОтборПоКлючамАналитикиПартнеров.АналитикаУчетаНоменклатуры
	|				ИЗ
	|					ВТОтборПоКлючамАналитикиПартнеров)) КАК Остатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидЗапасов,
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура КАК Номенклатура,
	|	Аналитика.Характеристика КАК Характеристика,
	|	Аналитика.Назначение КАК Назначение,
	|	Аналитика.Серия КАК Серия,
	|	ТабТовары.ВидЗапасов КАК ВидЗапасов,
	|	СУММА(ТабТовары.Количество) КАК КоличествоОстаток
	|ПОМЕСТИТЬ ТаблицаОстатковБезНомеровГТД
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыПереданныеПереработчику.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыПереданныеПереработчику.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		-ТоварыПереданныеПереработчику.Количество КАК Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеПереработчику КАК ТоварыПереданныеПереработчику
	|	ГДЕ
	|		ТоварыПереданныеПереработчику.Регистратор = &Ссылка
	|		И ТоварыПереданныеПереработчику.Активность
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НаКонецМесяца.ВидЗапасов,
	|		НаКонецМесяца.АналитикаУчетаНоменклатуры,
	|		ВЫБОР
	|			КОГДА НаКонецМесяца.КоличествоОстаток >= ЕСТЬNULL(НаДатуАктуальности.КоличествоОстаток, 0)
	|				ТОГДА ЕСТЬNULL(НаДатуАктуальности.КоличествоОстаток, 0)
	|			ИНАЧЕ НаКонецМесяца.КоличествоОстаток
	|		КОНЕЦ
	|	ИЗ
	|		НаКонецМесяца КАК НаКонецМесяца
	|			ЛЕВОЕ СОЕДИНЕНИЕ НаДатуАктуальности КАК НаДатуАктуальности
	|			ПО (НаДатуАктуальности.ВидЗапасов = НаКонецМесяца.ВидЗапасов)
	|				И (НаДатуАктуальности.АналитикаУчетаНоменклатуры = НаКонецМесяца.АналитикаУчетаНоменклатуры)) КАК ТабТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО ТабТовары.АналитикаУчетаНоменклатуры = Аналитика.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабТовары.АналитикаУчетаНоменклатуры,
	|	Аналитика.Номенклатура,
	|	Аналитика.Характеристика,
	|	Аналитика.Назначение,
	|	Аналитика.Серия,
	|	ТабТовары.ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатков.Характеристика КАК Характеристика,
	|	ТаблицаОстатков.Назначение КАК Назначение,
	|	ТаблицаОстатков.Серия КАК Серия,
	|	ТаблицаОстатков.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаОстатков.КоличествоОстаток КАК Количество
	|ИЗ
	|	ТаблицаОстатковБезНомеровГТД КАК ТаблицаОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтборПоКлючамАналитикиПартнеров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НаКонецМесяца
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ НаДатуАктуальности";
	
	ТаблицаКРаспределению = Запрос.Выполнить().Выгрузить();
	
	ОтборСтрок = Новый Структура(КолонкиПоискаСтрокПоГТД);
	
	Для Каждого СтрокаТаблицы Из ТаблицаКРаспределению Цикл
		
		ЗаполнитьЗначенияСвойств(ОтборСтрок, СтрокаТаблицы);
		СтрокиСНомеромГТД = ТаблицаОстаткиПоГТД.НайтиСтроки(ОтборСтрок);
		
		Для Каждого СтрокаСНомеромГТД Из СтрокиСНомеромГТД Цикл
			
			Если СтрокаТаблицы.Количество <= 0 Тогда
				Прервать;
			КонецЕсли;
			
			ДоступноКРаспределению		= Макс(СтрокаСНомеромГТД.КоличествоОстаток - СтрокаСНомеромГТД.Распределено, 0);
			КоличествоКРаспределению	= Мин(ДоступноКРаспределению, СтрокаТаблицы.Количество);
			
			СтрокаТаблицы.Количество = СтрокаТаблицы.Количество - КоличествоКРаспределению;
			
			СтрокаСНомеромГТД.Распределено			= СтрокаСНомеромГТД.Распределено + КоличествоКРаспределению;
			СтрокаСНомеромГТД.РаспределеноПоРНПТ	= ?(СтрокаСНомеромГТД.КоличествоОстаток <> 0,
														СтрокаСНомеромГТД.Распределено * СтрокаСНомеромГТД.КоличествоПоРНПТОстаток
															/ СтрокаСНомеромГТД.КоличествоОстаток,
														0);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ТаблицаНомеровГТД", ТаблицаОстаткиПоГТД);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таблица.Номенклатура				КАК Номенклатура,
	|	Таблица.Характеристика				КАК Характеристика,
	|	Таблица.Назначение					КАК Назначение,
	|	Таблица.Серия						КАК Серия,
	|	Таблица.ВидЗапасов					КАК ВидЗапасов,
	|	Таблица.ДокументРеализации			КАК ДокументРеализации,
	|	Таблица.АналитикаУчетаНоменклатуры	КАК АналитикаУчетаНоменклатуры,
	|	Таблица.НомерГТД					КАК НомерГТД,
	|	Таблица.Распределено				КАК Распределено,
	|	Таблица.РаспределеноПоРНПТ			КАК РаспределеноПоРНПТ,
	|	Таблица.КоличествоОстаток			КАК КоличествоОстаток,
	|	Таблица.КоличествоПоРНПТОстаток		КАК КоличествоПоРНПТОстаток
	|ПОМЕСТИТЬ ВтТаблицаНомеровГТД
	|ИЗ
	|	&ТаблицаНомеровГТД КАК Таблица
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Характеристика, Назначение, Серия, ВидЗапасов
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	КлючиАналитики.МестоХранения КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТабТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.Характеристика КАК Характеристика,
	|	ТабТовары.Назначение КАК Назначение,
	|	ТабТовары.Серия КАК Серия,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ТабТовары.ВидЗапасов КАК ВидЗапасов,
	|	ТабТовары.ВидЗапасов КАК ВидЗапасовВладельца,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	ТабТовары.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	ЛОЖЬ КАК РеализацияЗапасовДругойОрганизации,
	|	&Дата КАК ДатаПоступления,
	|	ЕСТЬNULL(ТаблицаНомеровГТД.НомерГТД, ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка)) КАК НомерГТД,
	|	ЕСТЬNULL(ТаблицаНомеровГТД.Распределено, ТабТовары.КоличествоОстаток) КАК КоличествоОстаток,
	|	ЕСТЬNULL(ТаблицаНомеровГТД.РаспределеноПоРНПТ, 0) КАК КоличествоПоРНПТОстаток,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ТаблицаОстатковБезНомеровГТД КАК ТабТовары
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО СпрНоменклатура.Ссылка = ТабТовары.Номенклатура
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаНомеровГТД КАК ТаблицаНомеровГТД
	|		ПО ТаблицаНомеровГТД.Номенклатура   = ТабТовары.Номенклатура
	|		 И ТаблицаНомеровГТД.Характеристика = ТабТовары.Характеристика
	|		 И ТаблицаНомеровГТД.Назначение     = ТабТовары.Назначение
	|		 И ТаблицаНомеровГТД.Серия          = ТабТовары.Серия
	|		 И ТаблицаНомеровГТД.ВидЗапасов     = ТабТовары.ВидЗапасов
	|		 И ТаблицаНомеровГТД.Распределено > 0
	|		 И СпрНоменклатура.ВестиУчетПоГТД
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТабТовары.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
	|		
	|ГДЕ
	|	(НЕ ТаблицаНомеровГТД.Номенклатура ЕСТЬ NULL ИЛИ НЕ СпрНоменклатура.ВестиУчетПоГТД)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	КлючиАналитики.МестоХранения КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	ТаблицаНомеровГТД.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаНомеровГТД.Номенклатура КАК Номенклатура,
	|	ТаблицаНомеровГТД.Характеристика КАК Характеристика,
	|	ТаблицаНомеровГТД.Назначение КАК Назначение,
	|	ТаблицаНомеровГТД.Серия КАК Серия,
	|	ТаблицаНомеровГТД.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаНомеровГТД.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаНомеровГТД.ВидЗапасов КАК ВидЗапасовВладельца,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	ТаблицаНомеровГТД.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	ЛОЖЬ КАК РеализацияЗапасовДругойОрганизации,
	|	&Дата КАК ДатаПоступления,
	|	ТаблицаНомеровГТД.НомерГТД КАК НомерГТД,
	|	ТаблицаНомеровГТД.КоличествоОстаток КАК КоличествоОстаток,
	|	ТаблицаНомеровГТД.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТОстаток,
	|	0 КАК СуммаОстаток
	|
	|ИЗ
	|	ВтТаблицаНомеровГТД КАК ТаблицаНомеровГТД
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО СпрНоменклатура.Ссылка = ТаблицаНомеровГТД.Номенклатура
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитики
	|		ПО ТаблицаНомеровГТД.АналитикаУчетаНоменклатуры = КлючиАналитики.Ссылка
	|		
	|ГДЕ
	|	СпрНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.МногооборотнаяТара)
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	ТабТовары.АналитикаУчетаНоменклатуры
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТаблицаОстатковБезНомеровГТД
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтТаблицаНомеровГТД
	|;
	|
	|///////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Метод возвращает таблицу остатков товаров, переданных переработчику.
//
Функция ТаблицаОстатковТоваровПереданныхПереработчику(ДокументОбъект, ПараметрыЗаполненияВидовЗапасов, МенеджерВременныхТаблиц, ДатаОстатков)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ // Движения документа
	|	МАКСИМУМ(Товары.Период) КАК Период,
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов,
	|	СУММА(Товары.Количество) КАК Количество
	|ПОМЕСТИТЬ ДвиженияДокумента
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеПереработчику КАК Товары
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ВтОтборы
	|	ПО ВтОтборы.АналитикаУчетаНоменклатуры = Товары.АналитикаУчетаНоменклатуры
	|		И ВтОтборы.ВидЗапасов = Товары.ВидЗапасов
	|ГДЕ
	|	Товары.Регистратор = &Ссылка
	|	И Товары.Активность
	|	И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.ВидЗапасов
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ // Остатки товаров переданных переработчику на конец месяца
	|	Остатки.ВидЗапасов КАК ВидЗапасов,
	|	Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Остатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ НаКонецМесяца
	|ИЗ
	|	РегистрНакопления.ТоварыПереданныеПереработчику.Остатки(&ГраницаМесяца,
	|		(АналитикаУчетаНоменклатуры, ВидЗапасов) В
	|			(ВЫБРАТЬ 
	|				Т.АналитикаУчетаНоменклатуры,
	|				Т.ВидЗапасов
	|			ИЗ
	|				ВтОтборыОстатковОрганизаций КАК Т)
	|	) КАК Остатки
	|;
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.ВидЗапасов.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	Товары.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	Товары.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	Товары.ВидЗапасов КАК ВидЗапасов,
	|	Товары.ВидЗапасов КАК ВидЗапасовВладельца,
	|	Неопределено КАК ВидЗапасовПолучателя,
	|	Неопределено КАК ВидЗапасовОтгрузки,
	|	Товары.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	НЕОПРЕДЕЛЕНО КАК НомерГТД,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
	|	СУММА(Товары.Количество) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ (
	|	ВЫБРАТЬ // Ранее списанные товары данным документом
	|		Товары.ВидЗапасов КАК ВидЗапасов,
	|		Товары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Товары.Количество КАК Количество
	|	ИЗ
	|		РегистрНакопления.ТоварыПереданныеПереработчику КАК Товары
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК Отбор
	|		ПО Товары.АналитикаУчетаНоменклатуры = Отбор.АналитикаУчетаНоменклатуры
	|			И Товары.ВидЗапасов = Отбор.ВидЗапасов
	|	ГДЕ
	|		Товары.Период <= &Дата
	|		И Товары.Регистратор = &Ссылка
	|		И Товары.Активность
	|		И Товары.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ // Остатки товаров переданных переработчику
	|		НаКонецМесяца.ВидЗапасов КАК ВидЗапасов,
	|		НаКонецМесяца.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		НаКонецМесяца.КоличествоОстаток КАК Количество
	|	ИЗ
	|		НаКонецМесяца КАК НаКонецМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДвиженияДокумента КАК Движения
	|			ПО Движения.АналитикаУчетаНоменклатуры = НаКонецМесяца.АналитикаУчетаНоменклатуры
	|			И Движения.ВидЗапасов = НаКонецМесяца.ВидЗапасов
	|	) КАК Товары
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.ВидЗапасов.Организация,
	|	Товары.АналитикаУчетаНоменклатуры,
	|	Товары.АналитикаУчетаНоменклатуры.Номенклатура,
	|	Товары.АналитикаУчетаНоменклатуры.Характеристика,
	|	Товары.АналитикаУчетаНоменклатуры.Серия,
	|	Товары.ВидЗапасов,
	|	Товары.АналитикаУчетаНоменклатуры.Назначение
	|;
	|///////////////////////////////////////////////////////////////////////////////
	|";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Запрос.УстановитьПараметр("Дата", ДатаОстатков + 1);
	Запрос.УстановитьПараметр("ГраницаМесяца", Новый Граница(КонецМесяца(ДатаОстатков), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГраницаДня", Новый Граница(КонецДня(ДатаОстатков), ВидГраницы.Включая));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

//-- НЕ УТ

Процедура ТаблицаОстатковТаблицаВидыЗапасов(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаВидыЗапасов.ВидЗапасов.Организация КАК Организация,
	|	ТаблицаВидыЗапасов.Склад КАК Склад,
	|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаВидыЗапасов.Номенклатура КАК Номенклатура,
	|	ТаблицаВидыЗапасов.Характеристика КАК Характеристика,
	|	ТаблицаВидыЗапасов.Серия КАК Серия,
	|	ТаблицаВидыЗапасов.СкладОтгрузки КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ТаблицаВидыЗапасов.ДокументРеализации КАК ДокументРеализации,
	|	ТаблицаВидыЗапасов.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовВладельца,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовОтгрузки,
	|	ТаблицаВидыЗапасов.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ДатаПоступления,
	|	ТаблицаВидыЗапасов.Количество КАК КоличествоОстаток,
	|	ТаблицаВидыЗапасов.КоличествоПоРНПТ КАК КоличествоПоРНПТОстаток,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ТаблицаВидыЗапасов КАК ТаблицаВидыЗапасов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|		ПО ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры
	|			И ТаблицаВидыЗапасов.ВидЗапасов = ВтОтборыОстатковОрганизаций.ВидЗапасов";

	Запрос.Выполнить();
	
КонецПроцедуры

Функция ПараметрыДополненияЗапросаОстаткамиНаКаждыйМесяц() Экспорт
		
	ПараметрыДополнения = Новый Структура;
	ПараметрыДополнения.Вставить("ПодбиратьЗапасыРазныхПериодов", Ложь);
	ПараметрыДополнения.Вставить("ЕстьТаблицаПриходуемыхВидовЗапасов", Ложь);
	ПараметрыДополнения.Вставить("ИмяТаблицыПриходуемыхВидовЗапасов", "");
	ПараметрыДополнения.Вставить("ОкончаниеПериодаКонтроля", Неопределено);
	ПараметрыДополнения.Вставить("ЕстьОтборПоНомеруГТД", Ложь);

	Возврат ПараметрыДополнения;
	
КонецФункции

Функция ДополнитьЗапросКонтролемОстатковНаКаждыйМесяц(Запрос, ТекстЗапроса, ПараметрыДополнения, МинимальнаяДатаОстатков, ДатыОстатков = Неопределено) Экспорт
	
	КонецМесяцаДатыПоследнегоДвижения = КонецМесяца(ДатаПоследнегоДвижения());
	КонецТекущегоМесяца = КонецМесяца(ТекущаяДатаСеанса());
	
	// За последние три года возможна налоговая проверка.
	ТриГодаНазад = ДобавитьМесяц(КонецТекущегоМесяца, -36);
	НачальныйМесяц = КонецМесяца(Макс(МинимальнаяДатаОстатков, ТриГодаНазад));
	Если ЗначениеЗаполнено(ПараметрыДополнения.ОкончаниеПериодаКонтроля) Тогда
		НачальныйМесяц = КонецМесяца(Мин(ПараметрыДополнения.ОкончаниеПериодаКонтроля, НачальныйМесяц));
		КонечныйМесяц = КонецМесяца(ПараметрыДополнения.ОкончаниеПериодаКонтроля);
	Иначе
		КонечныйМесяц = КонецМесяца(Макс(КонецМесяцаДатыПоследнегоДвижения, КонецТекущегоМесяца, НачальныйМесяц));
	КонецЕсли;
	
	МесяцыКонтроля = Новый Соответствие;
	ТекущийМесяц = НачальныйМесяц;
	Пока ТекущийМесяц <= КонечныйМесяц Цикл
		МесяцыКонтроля.Вставить(ТекущийМесяц);
		ТекущийМесяц = КонецМесяца(КонецМесяца(ТекущийМесяц) + 1);
	КонецЦикла;
	
	ТекстВТОстаткиПоМесяцамШаблон = 
	"ВЫБРАТЬ
	|	&ТекстПериод КАК Период,
	|	ШаблонОстаткиНаМесяц.Организация КАК Организация,
	|	ШаблонОстаткиНаМесяц.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ШаблонОстаткиНаМесяц.ВидЗапасов КАК ВидЗапасов,
	|	ШаблонОстаткиНаМесяц.НомерГТД КАК НомерГТД,
	|	СУММА(ШаблонОстаткиНаМесяц.КоличествоОстаток) КАК КоличествоОстаток,
	|	ВЫБОР
	|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|				ИЛИ НАЧАЛОПЕРИОДА(&ТекстПериод, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(ШаблонОстаткиНаМесяц.КоличествоПоРНПТОстаток)
	|	КОНЕЦ КАК КоличествоПоРНПТОстаток
	|ПОМЕСТИТЬ ШаблонОстаткиНаМесяц
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.Организация КАК Организация,
	|		Остатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов КАК ВидЗапасов,
	|		Остатки.НомерГТД КАК НомерГТД,
	|		Остатки.КоличествоОстаток КАК КоличествоОстаток,
	|		Остатки.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТОстаток
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций.Остатки(
	|				&ШаблонГраницаНаМесяц,
	|				(//%ТекстОтборНомерГТД% АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|					(ВЫБРАТЬ
	|						//%ТекстВыборкаДляОтбораНомерГТД%
	|						ВТОтборы.АналитикаУчетаНоменклатуры,
	|						ВТОтборы.Организация,
	|						ВТОтборы.ВидЗапасов
	|					ИЗ
	|						ВТОтборыОстатковОрганизаций КАК ВТОтборы)) КАК Остатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Остатки.Организация,
	|		Остатки.АналитикаУчетаНоменклатуры,
	|		Остатки.ВидЗапасов,
	|		Остатки.НомерГТД,
	|		Остатки.КоличествоОстаток,
	|		Остатки.КоличествоПоРНПТОстаток
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций.Остатки(
	|				&ШаблонГраницаНаМесяц,
	|				(//%ТекстОтборНомерГТД% АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|					(ВЫБРАТЬ
	|						//%ТекстВыборкаДляОтбораНомерГТД%
	|						ВТОтборы.АналитикаУчетаНоменклатуры,
	|						ВТОтборы.Организация,
	|						ВТОтборы.ВидЗапасов
	|					ИЗ
	|						ВТОтборыОстатковОрганизаций КАК ВТОтборы)) КАК Остатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДвиженияДокумента.Организация,
	|		ДвиженияДокумента.АналитикаУчетаНоменклатуры,
	|		ДвиженияДокумента.ВидЗапасов,
	|		ДвиженияДокумента.НомерГТД,
	|		-ДвиженияДокумента.Количество,
	|		-ДвиженияДокумента.КоличествоПоРНПТ
	|	ИЗ
	|		ДвиженияДокумента КАК ДвиженияДокумента
	|	ГДЕ
	|		(&ТекстЭтоПоследниеДвижения
	|		ИЛИ ДвиженияДокумента.Период <= &ШаблонКонецМесяца)
	|		И ДвиженияДокумента.Период >= &НачалоМесяцаМинимальнойДатыОстатков
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТОтборы.Организация,
	|		ВТОтборы.АналитикаУчетаНоменклатуры,
	|		ВТОтборы.ВидЗапасов,
	|		//%ТекстВыборкаНомерГТД%
	|		0,
	|		0
	|	ИЗ
	|		ВТОтборыОстатковОрганизаций КАК ВТОтборы
	|	
	|	//%ТекстПриходуемыеВидыЗапасов%
	|	
	|		) КАК ШаблонОстаткиНаМесяц
	|	
	|СГРУППИРОВАТЬ ПО
	|	ШаблонОстаткиНаМесяц.Организация,
	|	ШаблонОстаткиНаМесяц.АналитикаУчетаНоменклатуры,
	|	ШаблонОстаткиНаМесяц.ВидЗапасов,
	|	ШаблонОстаткиНаМесяц.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	АналитикаУчетаНоменклатуры,
	|	ВидЗапасов,
	|	НомерГТД";
	
	ТекстЗапросаНаМесяцШаблон = 
	"ВЫБРАТЬ
	|	&ТекстВыборкаПериода КАК Период,
	|	ШаблонОстаткиНаМесяц.Организация КАК Организация,
	|	ШаблонОстаткиНаМесяц.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ШаблонОстаткиНаМесяц.ВидЗапасов КАК ВидЗапасов,
	|	ШаблонОстаткиНаМесяц.НомерГТД КАК НомерГТД,
	|	1 КАК СчетчикПериодов,
	|	&ТекстНомерПериода КАК НомерПериода,
	|	ШаблонОстаткиНаМесяц.КоличествоОстаток КАК КоличествоОстаток,
	|	&ТекстКоличествоПоРНПТОстаток КАК КоличествоПоРНПТОстаток
	|ИЗ
	|	ШаблонОстаткиНаМесяц КАК ШаблонОстаткиНаМесяц";
	
	Если ПараметрыДополнения.ЕстьОтборПоНомеруГТД Тогда
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "//%ТекстОтборНомерГТД%", "НомерГТД,");
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "//%ТекстВыборкаНомерГТД%", "ВТОтборы.НомерГТД,");
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "//%ТекстВыборкаДляОтбораНомерГТД%", "ВТОтборы.НомерГТД,");
	Иначе
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "//%ТекстОтборНомерГТД%", "");
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "//%ТекстВыборкаНомерГТД%", "ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка),");
		ТекстВТОстаткиПоМесяцамШаблон = СтрЗаменить(ТекстВТОстаткиПоМесяцамШаблон, "//%ТекстВыборкаДляОтбораНомерГТД%", "");
	КонецЕсли;	
	
	МассивТекстовЗапросовПоМесяцам = Новый Массив;
	МассивВТОстаткиПоМесяцам = Новый Массив;
	
	СчетчикПериодов = 0;
	
	Для Каждого МесяцКонтроля из МесяцыКонтроля Цикл
		
		ТекущийМесяц = МесяцКонтроля.Ключ;
		СчетчикПериодов = СчетчикПериодов + 1;
		ЭтоПоследниеДвижения = КонецМесяцаДатыПоследнегоДвижения = ТекущийМесяц;
		
		// Текстовое представление каждого месяца, например: 20160630
		СтрокаТекущийМесяц = Формат(ТекущийМесяц, ФорматДатыВИмениВТ());
		
		ТекстЗапросаВТОстаткиНаТекущийМесяц = ТекстВТОстаткиПоМесяцамШаблон;
		
		Если ПараметрыДополнения.ЕстьТаблицаПриходуемыхВидовЗапасов Тогда
			
			ТекстПриходуемыеВидыЗапасов =
			"ВЫБРАТЬ //Дополнительные виды запасов, приходуемые документом
			|	ТаблицаВидыЗапасов.Организация                КАК Организация,
			|	ТаблицаВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
			|	ТаблицаВидыЗапасов.ВидЗапасов                 КАК ВидЗапасов,
			|	ТаблицаВидыЗапасов.НомерГТД                   КАК НомерГТД,
			|	ТаблицаВидыЗапасов.Количество                 КАК Количество,
			|	ТаблицаВидыЗапасов.КоличествоПоРНПТ           КАК КоличествоПоРНПТ
			|ИЗ
			|	ИмяТаблицыПриходуемыхВидовЗапасов КАК ТаблицаВидыЗапасов
			|ГДЕ
			|	&ТекстЭтоПоследниеДвижения ИЛИ ТаблицаВидыЗапасов.Период <= &ТекстПериод";
			
			ТекстПриходуемыеВидыЗапасов = СтрЗаменить(ТекстПриходуемыеВидыЗапасов,
														"ИмяТаблицыПриходуемыхВидовЗапасов",
														ПараметрыДополнения.ИмяТаблицыПриходуемыхВидовЗапасов);
			ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц,
																"//%ТекстПриходуемыеВидыЗапасов%",
																ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении()
																	+ ТекстПриходуемыеВидыЗапасов);
			
		КонецЕсли;
		
		Если ПараметрыДополнения.ПодбиратьЗапасыРазныхПериодов Тогда
			
			Для Каждого СтрМас из ДатыОстатков Цикл
				
				ТекстКоличествоПоРНПТОстаток = 
				"ВЫБОР
				|		КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
				|				ИЛИ НАЧАЛОПЕРИОДА(&ТекстВыборкаПериода, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
				|			ТОГДА 0
				|		ИНАЧЕ ШаблонОстаткиНаМесяц.КоличествоПоРНПТОстаток
				|	КОНЕЦ";
				
				ТекстЗапросаНаТекущийМесяц = ТекстЗапросаНаМесяцШаблон;
				ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "&ТекстКоличествоПоРНПТОстаток", ТекстКоличествоПоРНПТОстаток);
				ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "ШаблонОстаткиНаМесяц", ИмяВтОстаткиНаКонецМесяца(ТекущийМесяц));
				КонецМесяцаПолучаемыхОстатков = КонецМесяца(СтрМас);
				
				// Контролируемый месяц больше месяца этой итерации
				Если ТекущийМесяц >= КонецМесяцаПолучаемыхОстатков
					// или месяц этой итерации находится в будущем периоде.
					Или КонецМесяцаПолучаемыхОстатков > КонецТекущегоМесяца Тогда
					
					СтрокаДатыОстатков = Формат(КонецМесяцаПолучаемыхОстатков, ФорматДатыВИмениВТ());
					
					ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц,
															"&ТекстВыборкаПериода",
															"&Конец" + СтрокаДатыОстатков);
					
					НомерПериода = Год(КонецМесяцаПолучаемыхОстатков) * 12 + Месяц(КонецМесяцаПолучаемыхОстатков)
									- Год(МинимальнаяДатаОстатков) * 12 - Месяц(МинимальнаяДатаОстатков) + 1;
					
					ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц,
															"&ТекстНомерПериода",
															Формат(НомерПериода, "ЧН=0; ЧГ="));
					
					МассивТекстовЗапросовПоМесяцам.Добавить(ТекстЗапросаНаТекущийМесяц);
					
					Запрос.УстановитьПараметр("Конец" + СтрокаДатыОстатков, КонецМесяцаПолучаемыхОстатков);
					
				КонецЕсли;
				
			КонецЦикла;
			
		Иначе
			
			ТекстКоличествоПоРНПТОстаток = "ШаблонОстаткиНаМесяц.КоличествоПоРНПТОстаток";
			
			ТекстЗапросаНаТекущийМесяц = ТекстЗапросаНаМесяцШаблон;
			ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "&ТекстКоличествоПоРНПТОстаток", ТекстКоличествоПоРНПТОстаток);
			ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "ШаблонОстаткиНаМесяц", ИмяВтОстаткиНаКонецМесяца(ТекущийМесяц));
			ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "&ТекстВыборкаПериода", "ДАТАВРЕМЯ(1,1,1)");
			ТекстЗапросаНаТекущийМесяц = СтрЗаменить(ТекстЗапросаНаТекущийМесяц, "&ТекстНомерПериода", "1");
			МассивТекстовЗапросовПоМесяцам.Добавить(ТекстЗапросаНаТекущийМесяц);
			
		КонецЕсли;
		
		ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц, "ШаблонОстаткиНаМесяц", ИмяВтОстаткиНаКонецМесяца(ТекущийМесяц));
		ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц, "ШаблонГраницаНаМесяц", "Граница" + СтрокаТекущийМесяц);
		ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц, "ШаблонКонецМесяца", "Конец" + СтрокаТекущийМесяц);
		ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц, "&ТекстПериод", "&Конец" + СтрокаТекущийМесяц);
		
		ТекстЗапросаВТОстаткиНаТекущийМесяц = СтрЗаменить(ТекстЗапросаВТОстаткиНаТекущийМесяц, "&ТекстЭтоПоследниеДвижения", ?(ЭтоПоследниеДвижения, "ИСТИНА", "ЛОЖЬ"));
		
		МассивВТОстаткиПоМесяцам.Добавить(ТекстЗапросаВТОстаткиНаТекущийМесяц);
		
		Если ТекущийМесяц >= КонецМесяцаДатыПоследнегоДвижения Тогда
			Запрос.УстановитьПараметр("Граница" + СтрокаТекущийМесяц, Неопределено);
		Иначе
			Запрос.УстановитьПараметр("Граница" + СтрокаТекущийМесяц, Новый Граница(ТекущийМесяц, ВидГраницы.Включая));
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Конец" + СтрокаТекущийМесяц, ТекущийМесяц);
		
	КонецЦикла;
	
	Если ПараметрыДополнения.ПодбиратьЗапасыРазныхПериодов Тогда
		Запрос.УстановитьПараметр("ПериодЗаполнения", МинимальнаяДатаОстатков);
		Запрос.УстановитьПараметр("НачалоМесяцаМинимальнойДатыОстатков", НачалоМесяца(МинимальнаяДатаОстатков));
	Иначе
		Запрос.УстановитьПараметр("ПериодЗаполнения", Дата(1,1,1));
		Запрос.УстановитьПараметр("НачалоМесяцаМинимальнойДатыОстатков",  Дата(1,1,1));
	КонецЕсли;
	
	ТекстОстаткиПоМесяцам	= СтрСоединить(МассивТекстовЗапросовПоМесяцам,
											ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстВТОстаткиПоМесяцам	= СтрСоединить(МассивВТОстаткиПоМесяцам,
											ОбщегоНазначенияУТ.РазделительЗапросовВПакете()) + ОбщегоНазначенияУТ.РазделительЗапросовВПакете();
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстОстаткиПоМесяцам%", ТекстОстаткиПоМесяцам);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстВТОстаткиПоМесяцам%", ТекстВТОстаткиПоМесяцам);
	
	Возврат СчетчикПериодов;
	
КонецФункции

Процедура ТаблицаОстатковТоваровПринятых(ДокументОбъект, МенеджерВременныхТаблиц)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВтОтборыОстатковОрганизаций.Организация КАК Организация,
	|	ВтОтборыОстатковОрганизаций.ВидЗапасов КАК ВидЗапасов
	|ПОМЕСТИТЬ ВТОтбор
	|ИЗ
	|	ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ВтОтборыОстатковОрганизаций.ВидЗапасов = ВидыЗапасов.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТоварыОрганизацийОстатки.Организация КАК Организация,
	|	ТоварыОрганизацийОстатки.ВидЗапасов КАК ВидЗапасов,
	|	ТоварыОрганизацийОстатки.НомерГТД КАК НомерГТД,
	|	ТоварыОрганизацийОстатки.КОформлениюСписанияОстаток КАК Количество,
	|	ТоварыОрганизацийОстатки.КОформлениюСписанияПоРНПТОстаток КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ТоварыОрганизацийОстаткиКСписанию
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций.Остатки(
	|			,
	|			(АналитикаУчетаНоменклатуры, Организация, ВидЗапасов) В
	|				(ВЫБРАТЬ
	|					ВТОтбор.АналитикаУчетаНоменклатуры,
	|					ВТОтбор.Организация,
	|					ВТОтбор.ВидЗапасов
	|				ИЗ
	|					ВТОтбор КАК ВТОтбор)) КАК ТоварыОрганизацийОстатки
	|ГДЕ
	|	ТоварыОрганизацийОстатки.КОформлениюСписанияОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	Организация,
	|	ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК Характеристика,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК Серия,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК Склад,
	|	ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) КАК СкладОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРеализации,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовВладельца,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовПолучателя,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовОтгрузки,
	|	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПоступления,
	|	ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) КАК Назначение,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	СУММА(ВложенныйЗапрос.Количество) КАК КоличествоОстаток,
	|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ) КАК КоличествоПоРНПТОстаток,
	|	СУММА(0) КАК НаДатуКонтроля,
	|	СУММА(0) КАК НаДатуАктуальности,
	|	СУММА(0) КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТоварыОрганизацийОстатки.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизацийОстатки.Организация КАК Организация,
	|		ТоварыОрганизацийОстатки.ВидЗапасов КАК ВидЗапасов,
	|		ТоварыОрганизацийОстатки.НомерГТД КАК НомерГТД,
	|		ТоварыОрганизацийОстатки.Количество КАК Количество,
	|		ТоварыОрганизацийОстатки.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|	ИЗ
	|		ТоварыОрганизацийОстаткиКСписанию КАК ТоварыОрганизацийОстатки
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТоварыОрганизаций.АналитикаУчетаНоменклатуры,
	|		ТоварыОрганизаций.Организация,
	|		ТоварыОрганизаций.ВидЗапасов,
	|		ТоварыОрганизаций.НомерГТД,
	|		ВЫБОР
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ТоварыОрганизаций.КОформлениюСписания
	|			ИНАЧЕ -ТоварыОрганизаций.КОформлениюСписания
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ТоварыОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			КОГДА ТоварыОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ТоварыОрганизаций.КОформлениюСписанияПоРНПТ
	|			ИНАЧЕ -ТоварыОрганизаций.КОформлениюСписанияПоРНПТ
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОтбор КАК ВТОтбор
	|			ПО ТоварыОрганизаций.АналитикаУчетаНоменклатуры = ВТОтбор.АналитикаУчетаНоменклатуры
	|				И ТоварыОрганизаций.Организация = ВТОтбор.Организация
	|				И ТоварыОрганизаций.ВидЗапасов = ВТОтбор.ВидЗапасов
	|	ГДЕ
	|		ТоварыОрганизаций.Регистратор = &Регистратор) КАК ВложенныйЗапрос
	|ГДЕ
	|	ВложенныйЗапрос.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.ВидЗапасов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОтбор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТоварыОрганизацийОстаткиКСписанию";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Партнер", ДокументОбъект.Партнер);
	Запрос.УстановитьПараметр("Договор", ДокументОбъект.Договор);
	
	Запрос.УстановитьПараметр("Регистратор", ДокументОбъект.Ссылка);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ТаблицаОстатковПереданнойВозвратнойТары(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПереданнаяВозвратнаяТараОстатки.Номенклатура КАК Номенклатура,
	|	ПереданнаяВозвратнаяТараОстатки.Характеристика КАК Характеристика,
	|	ПереданнаяВозвратнаяТараОстатки.Партнер КАК Партнер,
	|	ПереданнаяВозвратнаяТараОстатки.ДокументПередачи КАК ДокументПередачи,
	|	ПереданнаяВозвратнаяТараОстатки.ВидЗапасов КАК ВидЗапасов,
	|	ПереданнаяВозвратнаяТараОстатки.НомерГТД КАК НомерГТД,
	|	ПереданнаяВозвратнаяТараОстатки.КоличествоОстаток КАК КоличествоОстаток
	|ПОМЕСТИТЬ ПереданнаяВозвратнаяТараОстатки
	|ИЗ
	|	РегистрНакопления.ПереданнаяВозвратнаяТара.Остатки(
	|			&Дата,
	|			(Номенклатура, Характеристика, ДокументПередачи) В
	|					(ВЫБРАТЬ
	|						ТаблицаТоваров.Номенклатура,
	|						ТаблицаТоваров.Характеристика,
	|						ТаблицаТоваров.ДокументРеализации
	|					ИЗ
	|						ТаблицаТоваров)
	|				И Партнер В
	|					(ВЫБРАТЬ
	|						ТаблицаДанныхДокумента.Партнер
	|					ИЗ
	|						ТаблицаДанныхДокумента)
	|				И ВидЗапасов В
	|					(ВЫБРАТЬ
	|						ДоступныеВидыЗапасов.ВидЗапасов
	|					ИЗ
	|						ДоступныеВидыЗапасов)) КАК ПереданнаяВозвратнаяТараОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПереданнаяВозвратнаяТара.Номенклатура,
	|	ПереданнаяВозвратнаяТара.Характеристика,
	|	ПереданнаяВозвратнаяТара.Партнер,
	|	ПереданнаяВозвратнаяТара.ДокументПередачи,
	|	ПереданнаяВозвратнаяТара.ВидЗапасов,
	|	ПереданнаяВозвратнаяТара.НомерГТД,
	|	ВЫБОР
	|		КОГДА ПереданнаяВозвратнаяТара.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -1
	|		ИНАЧЕ 1
	|	КОНЕЦ * ПереданнаяВозвратнаяТара.Количество
	|ИЗ
	|	РегистрНакопления.ПереданнаяВозвратнаяТара КАК ПереданнаяВозвратнаяТара
	|ГДЕ
	|	ПереданнаяВозвратнаяТара.Регистратор = &Ссылка
	|	И (ПереданнаяВозвратнаяТара.Номенклатура, ПереданнаяВозвратнаяТара.Характеристика, ПереданнаяВозвратнаяТара.ДокументПередачи) В
	|			(ВЫБРАТЬ
	|				ТаблицаТоваров.Номенклатура,
	|				ТаблицаТоваров.Характеристика,
	|				ТаблицаТоваров.ДокументРеализации
	|			ИЗ
	|				ТаблицаТоваров)
	|	И ПереданнаяВозвратнаяТара.Партнер В
	|			(ВЫБРАТЬ
	|				ТаблицаДанныхДокумента.Партнер
	|			ИЗ
	|				ТаблицаДанныхДокумента)
	|	И ПереданнаяВозвратнаяТара.ВидЗапасов В
	|			(ВЫБРАТЬ
	|				ДоступныеВидыЗапасов.ВидЗапасов
	|			ИЗ
	|				ДоступныеВидыЗапасов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДанныхДокумента.Организация КАК Организация,
	|	АналитикаУчетаНоменклатуры.МестоХранения КАК Склад,
	|	АналитикаУчетаНоменклатуры.КлючАналитики КАК АналитикаУчетаНоменклатуры,
	|	АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	АналитикаУчетаНоменклатуры.МестоХранения КАК СкладОтгрузки,
	|	АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	ПереданнаяВозвратнаяТараОстатки.ДокументПередачи КАК ДокументРеализации,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПереданнаяВозвратнаяТараОстатки.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасов,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ВидыЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ПереданнаяВозвратнаяТараОстатки.ВидЗапасов
	|	КОНЕЦ КАК ВидЗапасовВладельца,
	|	ПереданнаяВозвратнаяТараОстатки.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|	ПереданнаяВозвратнаяТараОстатки.НомерГТД КАК НомерГТД,
	|	ЗНАЧЕНИЕ(Справочник.СделкиСКлиентами.ПустаяСсылка) КАК Сделка,
	|	НЕОПРЕДЕЛЕНО КАК ВидЗапасовПолучателя,
	|	НЕОПРЕДЕЛЕНО КАК ДатаПоступления,
	|	СУММА(ПереданнаяВозвратнаяТараОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	|	0 КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ПереданнаяВозвратнаяТараОстатки КАК ПереданнаяВозвратнаяТараОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыЗапасов КАК ВидыЗапасов
	|		ПО ПереданнаяВозвратнаяТараОстатки.ВидЗапасов = ВидыЗапасов.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры
	|		ПО ПереданнаяВозвратнаяТараОстатки.Номенклатура = АналитикаУчетаНоменклатуры.Номенклатура
	|			И ПереданнаяВозвратнаяТараОстатки.Характеристика = АналитикаУчетаНоменклатуры.Характеристика
	|			И ПереданнаяВозвратнаяТараОстатки.Партнер = АналитикаУчетаНоменклатуры.МестоХранения
	|			И (АналитикаУчетаНоменклатуры.Серия = ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка))
	|			И (АналитикаУчетаНоменклатуры.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка))
	//++ НЕ УТ
	|			И (АналитикаУчетаНоменклатуры.СтатьяКалькуляции = ЗНАЧЕНИЕ(Справочник.СтатьиКалькуляции.ПустаяСсылка))
	//-- НЕ УТ
	|
	|СГРУППИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры.Назначение,
	|	АналитикаУчетаНоменклатуры.КлючАналитики,
	|	ТаблицаДанныхДокумента.Организация,
	|	АналитикаУчетаНоменклатуры.Номенклатура,
	|	АналитикаУчетаНоменклатуры.Характеристика,
	|	АналитикаУчетаНоменклатуры.Серия,
	|	ПереданнаяВозвратнаяТараОстатки.ДокументПередачи,
	|	ПереданнаяВозвратнаяТараОстатки.НомерГТД,
	|	АналитикаУчетаНоменклатуры.МестоХранения,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ПереданнаяВозвратнаяТараОстатки.ВидЗапасов
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВидыЗапасов.РеализацияЗапасовДругойОрганизации
	|			ТОГДА ВидыЗапасов.ВидЗапасовВладельца
	|		ИНАЧЕ ПереданнаяВозвратнаяТараОстатки.ВидЗапасов
	|	КОНЕЦ,
	|	ПереданнаяВозвратнаяТараОстатки.ВидЗапасов,
	|	АналитикаУчетаНоменклатуры.МестоХранения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаУчетаНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПереданнаяВозвратнаяТараОстатки";
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Если ЗначениеЗаполнено(ДокументОбъект.Дата) Тогда 
		Запрос.УстановитьПараметр("Дата", Новый Граница(ДокументОбъект.Дата, ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("Дата", Неопределено);
	КонецЕсли;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ТаблицаОстатковПереданныхМеждуОрганизациямиТоваров(ДокументОбъект, МенеджерВременныхТаблиц, ПараметрыЗаполненияВидовЗапасов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПереданныеТовары.Организация КАК Организация,
	|	ПереданныеТовары.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ПереданныеТовары.АналитикаУчетаНоменклатурыОтгрузки КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ПереданныеТовары.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|	ПереданныеТовары.ДокументПередачи КАК ДокументПередачи,
	|	ПереданныеТовары.ВидЗапасов КАК ВидЗапасов,
	|	ПереданныеТовары.НомерГТД КАК НомерГТД,
	|	СУММА(ПереданныеТовары.Количество) КАК КоличествоОстаток,
	|	СУММА(ПереданныеТовары.КоличествоПоРНПТ) КАК КоличествоПоРНПТОстаток,
	|	0 КАК СуммаОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатурыОтгрузки,
	|		ВидыЗапасов.ВидЗапасов КАК ВидЗапасовОтгрузки,
	|		ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ВидыЗапасов.Ссылка.ОрганизацияПолучатель КАК Организация,
	|		ВидыЗапасов.ВидЗапасовПолучателя КАК ВидЗапасов,
	|		ВидыЗапасов.НомерГТД КАК НомерГТД,
	|		ВидыЗапасов.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВидыЗапасов.КоличествоПоРНПТ
	|		КОНЕЦ КАК КоличествоПоРНПТ,
	|		ВидыЗапасов.Ссылка КАК ДокументПередачи
	|	ИЗ
	|		Документ.ПередачаТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|			ПО ВидыЗапасов.Ссылка.ХозяйственнаяОперация = ТаблицаДанныхДокумента.ХозяйственнаяОперацияПередачи
	|				И ВидыЗапасов.Ссылка.ОрганизацияПолучатель = ТаблицаДанныхДокумента.Организация
	|				И ВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.ОрганизацияПолучатель
	|				И (ВидыЗапасов.Ссылка.Проведен)
	|				И (ВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, МЕСЯЦ))
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	|			ПО ВидыЗапасов.Ссылка = ТаблицаТоваров.ДокументПередачи
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|			ПО ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура
	|				И ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры.Характеристика
	|				И ВидыЗапасов.АналитикаУчетаНоменклатуры.Серия = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры.Серия
	|				И ВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры.Назначение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВидыЗапасов.АналитикаУчетаНоменклатурыОтгрузки,
	|		ВидыЗапасов.ВидЗапасовОтгрузки,
	|		ВидыЗапасов.АналитикаУчетаНоменклатуры,
	|		ВидыЗапасов.Ссылка.Организация,
	|		ВидыЗапасов.ВидЗапасов,
	|		ВидыЗапасов.НомерГТД,
	|		ВидыЗапасов.Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(ВидыЗапасов.Ссылка.Дата, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ ВидыЗапасов.КоличествоПоРНПТ
	|		КОНЕЦ,
	|		ВидыЗапасов.ДокументПередачи
	|	ИЗ
	|		Документ.ВозвратТоваровМеждуОрганизациями.ВидыЗапасов КАК ВидыЗапасов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокумента КАК ТаблицаДанныхДокумента
	|			ПО ВидыЗапасов.Ссылка.ХозяйственнаяОперация = ТаблицаДанныхДокумента.ХозяйственнаяОперацияВозврата
	|				И ВидыЗапасов.Ссылка.Организация = ТаблицаДанныхДокумента.Организация
	|				И ВидыЗапасов.Ссылка.ОрганизацияПолучатель = ТаблицаДанныхДокумента.ОрганизацияПолучатель
	|				И (ВидыЗапасов.Ссылка.Проведен)
	|				И (ВидыЗапасов.Ссылка.Дата <= КОНЕЦПЕРИОДА(ТаблицаДанныхДокумента.Дата, МЕСЯЦ))
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
	|			ПО ВидыЗапасов.ДокументПередачи = ТаблицаТоваров.ДокументПередачи
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтОтборыОстатковОрганизаций КАК ВтОтборыОстатковОрганизаций
	|			ПО ВидыЗапасов.АналитикаУчетаНоменклатуры.Номенклатура = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура
	|				И ВидыЗапасов.АналитикаУчетаНоменклатуры.Характеристика = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры.Характеристика
	|				И ВидыЗапасов.АналитикаУчетаНоменклатуры.Серия = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры.Серия
	|				И ВидыЗапасов.АналитикаУчетаНоменклатуры.Назначение = ВтОтборыОстатковОрганизаций.АналитикаУчетаНоменклатуры.Назначение
	|	ГДЕ
	|		ВидыЗапасов.Ссылка <> &Ссылка
	|	
	|	) КАК ПереданныеТовары
	|
	|ГДЕ
	|	ПереданныеТовары.Количество > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ПереданныеТовары.НомерГТД,
	|	ПереданныеТовары.Организация,
	|	ПереданныеТовары.АналитикаУчетаНоменклатуры,
	|	ПереданныеТовары.АналитикаУчетаНоменклатурыОтгрузки,
	|	ПереданныеТовары.ВидЗапасовОтгрузки,
	|	ПереданныеТовары.ДокументПередачи,
	|	ПереданныеТовары.ВидЗапасов";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаОстатковПереданныхТоваров = РезультатЗапроса.Выгрузить();
	
	СформироватьВТТаблицаОстатков("ТоварыОрганизаций",
									ДокументОбъект,
									МенеджерВременныхТаблиц,
									ПараметрыЗаполненияВидовЗапасов,
									Истина);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОстатков.Организация КАК Организация,
	|	ТаблицаОстатков.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ТаблицаОстатков.Склад КАК Склад,
	|	ТаблицаОстатков.Номенклатура КАК Номенклатура,
	|	ТаблицаОстатков.Характеристика КАК Характеристика,
	|	ТаблицаОстатков.Серия КАК Серия,
	|	ТаблицаОстатков.Назначение КАК Назначение,
	|	ТаблицаОстатков.ВидЗапасов КАК ВидЗапасов,
	|	ТаблицаОстатков.НомерГТД КАК НомерГТД,
	|	ТаблицаОстатков.ДатаПоступления КАК ДатаПоступления,
	|	ТаблицаОстатков.КоличествоОстаток КАК КоличествоОстаток,
	|	ТаблицаОстатков.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТОстаток,
	|	ТаблицаОстатков.СуммаОстаток КАК СуммаОстаток
	|ИЗ
	|	ТаблицаОстатков КАК ТаблицаОстатков";
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаОстатковТоваровОрганизаций = РезультатЗапроса.Выгрузить();
	
	ТаблицаТоваров = ДокументОбъект.Товары.Выгрузить(,
													"АналитикаУчетаНоменклатуры, ДокументПередачи, НомерГТД,Количество,
													|КоличествоПоРНПТ");
	ТаблицаТоваров.Свернуть("АналитикаУчетаНоменклатуры, ДокументПередачи, НомерГТД", "Количество, КоличествоПоРНПТ");
	
	ВычестьИзОстатковПереданныеТовары(ТаблицаОстатковТоваровОрганизаций, ТаблицаОстатковПереданныхТоваров, ТаблицаТоваров);
	
	Запрос.Текст = 
	"УНИЧТОЖИТЬ ТаблицаОстатков
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТоваровОрганизаций.Организация КАК Организация,
	|	ОстаткиТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиТоваровОрганизаций.Склад КАК Склад,
	|	ОстаткиТоваровОрганизаций.Номенклатура КАК Номенклатура,
	|	ОстаткиТоваровОрганизаций.Характеристика КАК Характеристика,
	|	ОстаткиТоваровОрганизаций.Серия КАК Серия,
	|	ОстаткиТоваровОрганизаций.Назначение КАК Назначение,
	|	ОстаткиТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	ОстаткиТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления,
	|	ОстаткиТоваровОрганизаций.КоличествоОстаток КАК КоличествоОстаток,
	|	ОстаткиТоваровОрганизаций.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТОстаток,
	|	ОстаткиТоваровОрганизаций.СуммаОстаток КАК СуммаОстаток
	|ПОМЕСТИТЬ ОстаткиТоваровОрганизаций
	|ИЗ
	|	&ТаблицаОстатковТоваровОрганизаций КАК ОстаткиТоваровОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиПереданныхТоваров.Организация КАК Организация,
	|	ОстаткиПереданныхТоваров.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ОстаткиПереданныхТоваров.АналитикаУчетаНоменклатурыОтгрузки КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ОстаткиПереданныхТоваров.ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|	ОстаткиПереданныхТоваров.ДокументПередачи КАК ДокументПередачи,
	|	ОстаткиПереданныхТоваров.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиПереданныхТоваров.НомерГТД КАК НомерГТД,
	|	ОстаткиПереданныхТоваров.КоличествоОстаток КАК КоличествоОстаток,
	|	ОстаткиПереданныхТоваров.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТОстаток
	|ПОМЕСТИТЬ ОстаткиПереданныхТоваров
	|ИЗ
	|	&ТаблицаОстатковПереданныхТоваров КАК ОстаткиПереданныхТоваров
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиТоваровОрганизаций.Организация КАК Организация,
	|	ОстаткиТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатурыОтгрузки,
	|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасовОтгрузки,
	|	ОстаткиТоваровОрганизаций.Склад КАК Склад,
	|	ОстаткиТоваровОрганизаций.Номенклатура КАК Номенклатура,
	|	ОстаткиТоваровОрганизаций.Характеристика КАК Характеристика,
	|	ОстаткиТоваровОрганизаций.Серия КАК Серия,
	|	ОстаткиТоваровОрганизаций.Назначение КАК Назначение,
	|	ЗНАЧЕНИЕ(Документ.ПередачаТоваровМеждуОрганизациями.ПустаяСсылка) КАК ДокументПередачи,
	|	ОстаткиТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	ОстаткиТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	ОстаткиТоваровОрганизаций.ДатаПоступления КАК ДатаПоступления,
	|	ОстаткиТоваровОрганизаций.КоличествоОстаток КАК КоличествоОстаток,
	|	ОстаткиТоваровОрганизаций.КоличествоПоРНПТОстаток КАК КоличествоПоРНПТОстаток,
	|	ОстаткиТоваровОрганизаций.СуммаОстаток КАК СуммаОстаток
	|ПОМЕСТИТЬ ТаблицаОстатков
	|ИЗ
	|	ОстаткиТоваровОрганизаций КАК ОстаткиТоваровОрганизаций
	|
	|ГДЕ
	|	ОстаткиТоваровОрганизаций.КоличествоОстаток > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОстаткиПереданныхТоваров.Организация,
	|	ОстаткиПереданныхТоваров.АналитикаУчетаНоменклатуры,
	|	ОстаткиПереданныхТоваров.АналитикаУчетаНоменклатурыОтгрузки,
	|	ОстаткиПереданныхТоваров.ВидЗапасовОтгрузки,
	|	КлючиАналитикиУчетаНоменклатуры.МестоХранения,
	|	КлючиАналитикиУчетаНоменклатуры.Номенклатура,
	|	КлючиАналитикиУчетаНоменклатуры.Характеристика,
	|	КлючиАналитикиУчетаНоменклатуры.Серия,
	|	КлючиАналитикиУчетаНоменклатуры.Назначение,
	|	ОстаткиПереданныхТоваров.ДокументПередачи,
	|	ОстаткиПереданныхТоваров.ВидЗапасов,
	|	ОстаткиПереданныхТоваров.НомерГТД,
	|	ДатыПоступленияТоваровОрганизаций.ДатаПоступления,
	|	ОстаткиПереданныхТоваров.КоличествоОстаток,
	|	ОстаткиПереданныхТоваров.КоличествоПоРНПТОстаток,
	|	0
	|ИЗ
	|	ОстаткиПереданныхТоваров КАК ОстаткиПереданныхТоваров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КлючиАналитикиУчетаНоменклатуры
	|		ПО ОстаткиПереданныхТоваров.АналитикаУчетаНоменклатуры = КлючиАналитикиУчетаНоменклатуры.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДатыПоступленияТоваровОрганизаций КАК ДатыПоступленияТоваровОрганизаций
	|		ПО ОстаткиПереданныхТоваров.ВидЗапасов = ДатыПоступленияТоваровОрганизаций.ВидЗапасов
	|			И ОстаткиПереданныхТоваров.НомерГТД = ДатыПоступленияТоваровОрганизаций.НомерГТД
	|			И (КлючиАналитикиУчетаНоменклатуры.Номенклатура = ДатыПоступленияТоваровОрганизаций.Номенклатура)
	|			И (КлючиАналитикиУчетаНоменклатуры.Характеристика = ДатыПоступленияТоваровОрганизаций.Характеристика)
	|			И (КлючиАналитикиУчетаНоменклатуры.Серия = ДатыПоступленияТоваровОрганизаций.Серия)
	|			И (КлючиАналитикиУчетаНоменклатуры.Назначение = ДатыПоступленияТоваровОрганизаций.Назначение)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиТоваровОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОстаткиПереданныхТоваров";
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаОстатковТоваровОрганизаций", ТаблицаОстатковТоваровОрганизаций);
	Запрос.УстановитьПараметр("ТаблицаОстатковПереданныхТоваров", ТаблицаОстатковПереданныхТоваров);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ВычестьИзОстатковПереданныеТовары(ТаблицаОстатковТоваровОрганизаций, ТаблицаОстатковПереданныхТоваров, ТаблицаТоваров)
	
	СтруктураПоискаОстатков	= Новый Структура("Организация, АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД");
	СтруктураПоискаТоваров	= Новый Структура("АналитикаУчетаНоменклатуры, ДокументПередачи, НомерГТД");
	
	Для Каждого СтрПереданных Из ТаблицаОстатковПереданныхТоваров Цикл
		
		КоличествоКВычету = СтрПереданных.КоличествоОстаток;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаТоваров, СтрПереданных);
		
		СтрокиТоваров = ТаблицаТоваров.НайтиСтроки(СтруктураПоискаТоваров);
		Если СтрокиТоваров.Количество() > 0 Тогда
			// Вычитаем не превышающее количество из таблицы товаров
			КоличествоКВычету = Мин(СтрокиТоваров[0].Количество, КоличествоКВычету);
		Иначе
			Продолжить;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(СтруктураПоискаОстатков, СтрПереданных);
		СтрокиОстатковТоваровОрганизаций = ТаблицаОстатковТоваровОрганизаций.НайтиСтроки(СтруктураПоискаОстатков);
		
		Для Каждого СтрОстатков Из СтрокиОстатковТоваровОрганизаций Цикл
			
			Если КоличествоКВычету = 0
				Или СтрОстатков.КоличествоОстаток = 0 Тогда
				
				Прервать;
				
			КонецЕсли;
			
			Если СтрОстатков.КоличествоОстаток > КоличествоКВычету Тогда
				КоличествоОстаток = СтрОстатков.КоличествоОстаток;
				
				СтрОстатков.КоличествоОстаток = СтрОстатков.КоличествоОстаток - КоличествоКВычету;
				СтрОстатков.КоличествоПоРНПТОстаток = СтрОстатков.КоличествоПоРНПТОстаток - (КоличествоКВычету
														* СтрОстатков.КоличествоПоРНПТОстаток / КоличествоОстаток);
			Иначе
				СтрОстатков.КоличествоОстаток = 0;
				СтрОстатков.КоличествоПоРНПТОстаток = 0;
			КонецЕсли;
			
		КонецЦикла;
		
		Если СтрокиТоваров.Количество() Тогда
			Количество = СтрокиТоваров[0].Количество;
			
			СтрокиТоваров[0].Количество = КоличествоКВычету;
			СтрокиТоваров[0].КоличествоПоРНПТ = ?(Количество = 0,
													0,
													КоличествоКВычету * СтрокиТоваров[0].КоличествоПоРНПТ / Количество);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольПроведенияПоТоварамОрганизаций

Функция ДатаПоследнегоДвижения() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТоварыОрганизаций.Период КАК Период,
	|	ТоварыОрганизаций.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.ТоварыОрганизаций КАК ТоварыОрганизаций
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период УБЫВ";
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.Период > ДобавитьМесяц(ТекущаяДатаСеанса(), 12) Тогда
			
			ТекстИсключения = НСтр("ru = 'Документ %Регистратор% проведен по регистру ТоварыОрганизаций с датой, которая больше текущей на 12 месяцев. Отмените проведение этого документа и исправьте дату.'");
			ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Регистратор%", Выборка.Регистратор);
			ВызватьИсключение ТекстИсключения;
			
		КонецЕсли;
		
		Возврат Выборка.Период;
	Иначе
		Возврат Дата('00010101');
	КонецЕсли;
	
КонецФункции

Функция ДатаПервогоРезерва(ДатаПоУмолчанию) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РезервыТоваровОрганизаций.Период КАК Период
		|ИЗ
		|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Период;
	Иначе
		Возврат ДатаПоУмолчанию;
	КонецЕсли;
	
КонецФункции

Функция ИмяКонтроляВТОтборыКонтроляКорректностиДвижений()
	
	Возврат Врег("ВТОтборыКонтроляКорректностиДвижений");
	
КонецФункции

Функция ИмяКонтроляТоварыОрганизацийРезервыСводно()
	
	Возврат Врег("ТоварыОрганизацийРезервыСводно");
	
КонецФункции

Функция ИмяКонтроляВТОстаткиТоваровОрганизацийПоМесяцам()

	Возврат Врег("ВТОстаткиТоваровОрганизацийПоМесяцам");

КонецФункции

Функция ИмяВтОстаткиНаКонецМесяца(Период, ПрефиксИмени = "") Экспорт
	
	Если ПустаяСтрока(ПрефиксИмени) Тогда
		Возврат "Остатки" + Формат(КонецМесяца(Период), ФорматДатыВИмениВТ());
	Иначе
		Возврат ПрефиксИмени + Формат(КонецМесяца(Период), ФорматДатыВИмениВТ());
	КонецЕсли;
	
КонецФункции

Функция ФорматДатыВИмениВТ() Экспорт
	
	Возврат "ДФ=yyyyMMdd";
	
КонецФункции

#КонецОбласти

#Область Прочее

// Записывает движения документа в ИБ.
//
// Параметры:
//	МенеджерДвижений - РегистрНакопленияМенеджер - Регистр накопления, в который пишутся движения.
//	Таблица - ТаблицаЗначений - Таблица источник движений.
//	Ссылка - ДокументСсылка - Ссылка на документ.
//	ЗаполнятьЦиклом - Булево - Записи в набор загружаются или же заполняются циклом. По умолчанию, ложь.
//	УстановитьАктивность - Булево - Установка активности у записываемых записей. По умолчанию, истина.
//	ДопСвойства - Структура - См. ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения().
//
Процедура ЗаписатьДвиженияВБазу(МенеджерДвижений, Таблица, Ссылка, ЗаполнятьЦиклом = Ложь, УстановитьАктивность = Истина, ДопСвойства = Неопределено) Экспорт
	
	Набор = МенеджерДвижений.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(Ссылка);
	Набор.Прочитать();
	
	Если ДопСвойства <> Неопределено Тогда
		Для Каждого Свойство Из ДопСвойства Цикл
			Набор.ДополнительныеСвойства.Вставить(Свойство.Ключ, Свойство.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если Набор.Количество() > 0 Или Таблица.Количество() > 0 Тогда
		
		Если ЗаполнятьЦиклом Тогда
			Для Каждого Строка Из Таблица Цикл
				Запись = Набор.Добавить();
				ЗаполнитьЗначенияСвойств(Запись, Строка);
			КонецЦикла;
		Иначе
			Набор.Загрузить(Таблица);
		КонецЕсли;
		
		Если УстановитьАктивность Тогда
			Набор.УстановитьАктивность(Истина);
		КонецЕсли;
		
		Набор.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОписаниеТаблицСОбязательнымиКолонками()
	
	ОписаниеТаблиц = Новый Структура;
	
	ОписаниеТаблиц.Вставить("ТаблицаТоваров", Новый Соответствие);
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("ПодбиратьВидыЗапасов", "ИСТИНА");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("СуммаВознаграждения", "0");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("СуммаНДСВознаграждения", "0");
	ОписаниеТаблиц.ТаблицаТоваров.Вставить("ВидЦены", "ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)");
	
	ОписаниеТаблиц.Вставить("ТаблицаВидыЗапасов", Новый Соответствие);
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("СкладОтгрузки", "ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)");
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("ВидыЗапасовУказаныВручную", "ЛОЖЬ");
	ОписаниеТаблиц.ТаблицаВидыЗапасов.Вставить("ВидЗапасовПолучателя", "НЕОПРЕДЕЛЕНО");
	
	ОписаниеТаблиц.Вставить("ТаблицаВидыЗапасовПоПериодам", Новый Соответствие);
	ОписаниеТаблиц.ТаблицаВидыЗапасовПоПериодам.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ТаблицаВидыЗапасовПоПериодам.Вставить("СкладОтгрузки", "ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)");
	ОписаниеТаблиц.ТаблицаВидыЗапасовПоПериодам.Вставить("ВидыЗапасовУказаныВручную", "ЛОЖЬ");
	
	ОписаниеТаблиц.Вставить("ИсходнаяТаблицаТоваров", Новый Соответствие);
	ОписаниеТаблиц.ИсходнаяТаблицаТоваров.Вставить("ДокументРеализации", "НЕОПРЕДЕЛЕНО");
	ОписаниеТаблиц.ИсходнаяТаблицаТоваров.Вставить("ГруппаПродукции", "ЗНАЧЕНИЕ(Справочник.ГруппыАналитическогоУчетаНоменклатуры.ПустаяСсылка)");
	ОписаниеТаблиц.ИсходнаяТаблицаТоваров.Вставить("ВидЦены", "ЗНАЧЕНИЕ(Справочник.ВидыЦенПоставщиков.ПустаяСсылка)");
	
	ОписаниеТаблиц.Вставить("ТаблицаДанныхДокумента", Новый Соответствие);
	ОписаниеТаблиц.ИсходнаяТаблицаТоваров.Вставить("Валюта", "ЗНАЧЕНИЕ(Справочники.Валюты.ПустаяСсылка)");
	
	Возврат ОписаниеТаблиц;

КонецФункции

// Служебная функция для просмотра содержимого регистра РезервыТоваровОрганизаций в отладчике.
// 
// Возвращаемое значение:
// ТаблицаЗначений  - содержимое регистра.
//
Функция ПоказатьРезервыТоваровОрганизаций() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ * ИЗ РегистрНакопления.РезервыТоваровОрганизаций");
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПередУдалениемРегистратораПроверитьНаличиеЗаписейВРезервахТоваровОрганизаций(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ТипДокумента = ТипЗнч(Источник.Ссылка);
	
	Если Не Метаданные.РегистрыНакопления.РезервыТоваровОрганизаций.СтандартныеРеквизиты.Регистратор.Тип.СодержитТип(ТипДокумента) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РезервыТоваровОрганизаций.Регистратор КАК Регистратор
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|ГДЕ
	|	РезервыТоваровОрганизаций.Регистратор = &Регистратор";
	
	Запрос.УстановитьПараметр("Регистратор", Источник.Ссылка);
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		
		ТекстИсключения = НСтр("ru = 'По документу %Документ% есть движения в регистре РезервыТоваровОрганизаций. Удаление документа невозможно.'");
		ТекстИсключения = СтрЗаменить(ТекстИсключения, "%Документ%", Источник.Ссылка);
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОформлениеВыкуповИПередач

Функция ПоляШапкиПриОформленииПоРезервамТоваровОрганизаций() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("Период");
	Результат.Вставить("Отправитель");
	Результат.Вставить("Получатель");
	Результат.Вставить("Контрагент");
	Результат.Вставить("МестоХранения");
	Результат.Вставить("МестоХраненияПартнер");
	Результат.Вставить("МестоХраненияСклад");
	Результат.Вставить("МестоХраненияКонтрагент");
	Результат.Вставить("МестоХраненияДоговор");
	Результат.Вставить("МестоХраненияПодразделение");
	Результат.Вставить("ХозяйственнаяОперация");
	Результат.Вставить("НалогообложениеНДС");
	Результат.Вставить("Договор");
	Результат.Вставить("ВидЦены");
	Результат.Вставить("Валюта");
	
	Возврат Результат;
	
КонецФункции

// Функция - Текст запроса оформление за период
//
// Параметры:
//	Запрос					 - Запрос - запрос с установленными параметрами, влияющие на отбор.
//										Если параметры не установлены, то им будут присвоены значения по умолчанию.
//										Анализируемые параметры:
//										* Склад - СправочникСсылка.Склады, СправочникСсылка.СтруктураПредприятия
//													- если не установлен, или установлено пустое значение, то по всем складам 
//										* Отправитель - СправочникСсылка.Организации, СправочникСсылка.Партнеры
//													- если не установлен, или установлено пустое значение, то по всем отправителям 
//										* Получатель - СправочникСсылка.Организации
//													- если не установлен, или установлено пустое значение, то по всем получателям 
//										* ОформлятьПередачи - Булево - если не установлен, то устанавливается ЛОЖЬ 
//										* ОформлятьВыкупы - Булево - если не установлен, то устанавливается ЛОЖЬ 
//										* НачалоПериода - Дата - если не установлен, то берется дата первого резерва по товарам организаций 
//										* КонецПериода - Дата - если не установлен, то конец текущего месяца 
//	ТипРезультата			 - Строка - возможные значения:
//											ВыборкаПоШапке,
//											ВыборкаПоНоменклатуре - выборка по номенклатуре упорядочена по полям шапки,
//											ВТПоНоменклатуреИмяВТ - сохраняется в временной таблице ИмяВТ, если передано просто ""ВТПоНоменклатуре"", то в ВТРезервыТоваровОрганизаций
//											ВыборкаНаличияЗаписей
//											ВыборкаЗаполненияДокумента - накладываются отборы по всем полям шапки:
//																				Период,
//																				Отправитель,
//																				Контрагент,
//																				Получатель,
//																				ХозяйственнаяОперация,
//																				НалогообложениеНДС,
//																				ПередачаПодДеятельность,
//																				Договор,
//																				ВидЦены,
//																				Валюта
//	ИмяВТОтборыНоменклатуры	 - Строка - имя ВТ с колонками:АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД.
//											Если не передано - то выбирается по всей номенклатуре.
//
// Возвращаемое значение:
//	Строка - текст запроса
//
Функция ТекстЗапросаОформленияПоРезервамТоваровОрганизаций(Запрос,
															ТипРезультата = "ТаблицаЗначений",
															Знач ИмяВТОтборыНоменклатуры = "") Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Период КАК Период,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Организация КАК Организация,
	|	ВложенныйЗапрос.ВидЗапасов КАК ВидЗапасов,
	|	ВложенныйЗапрос.НомерГТД КАК НомерГТД,
	|	СУММА(ВложенныйЗапрос.Количество) КАК Количество,
	|	СУММА(ВложенныйЗапрос.КоличествоПоРНПТ) КАК КоличествоПоРНПТ,
	|	ВложенныйЗапрос.КорОрганизация КАК КорОрганизация,
	|	ВложенныйЗапрос.КорВидЗапасов КАК КорВидЗапасов
	|ПОМЕСТИТЬ ВТРезервыТоваровОрганизацийДляЗапроса
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период,
	|		РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		РезервыТоваровОрганизаций.Организация КАК Организация,
	|		РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|		РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|		РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|		РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|		РезервыТоваровОрганизаций.ЭтоСторно КАК ЭтоСторно,
	|		РезервыТоваровОрганизаций.Количество КАК Количество,
	|		ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			ИНАЧЕ РезервыТоваровОрганизаций.КоличествоПоРНПТ
	|		КОНЕЦ КАК КоличествоПоРНПТ
	|	ИЗ
	|		РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|	ГДЕ
	|		РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И РезервыТоваровОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И (&ОформлятьПередачи
	|					И РезервыТоваровОрганизаций.Организация <> РезервыТоваровОрганизаций.КорОрганизация
	|				ИЛИ &ОформлятьВыкупы
	|					И РезервыТоваровОрганизаций.Организация = РезервыТоваровОрганизаций.КорОрганизация
	|					И РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи))
	|		И (&ПоВсемПолучателям
	|				ИЛИ РезервыТоваровОрганизаций.Организация В (&Получатель))
	|		И (&ПоВсемСкладам
	|				ИЛИ РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения = &МестоХранения)
	|		И (&ПоВсемОтправителям
	|				ИЛИ (&ОформлятьПередачи
	|						И РезервыТоваровОрганизаций.КорОрганизация = &Отправитель
	|					ИЛИ &ОформлятьВыкупы
	|						И РезервыТоваровОрганизаций.КорВидЗапасов.ВладелецТовара = &Отправитель))
	|		И (&ПоВсейНоменклатуре
	|				ИЛИ (РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры, РезервыТоваровОрганизаций.КорВидЗапасов, РезервыТоваровОрганизаций.КорОрганизация, РезервыТоваровОрганизаций.НомерГТД) В
	|					(ВЫБРАТЬ
	|						ВТОтборы.АналитикаУчетаНоменклатуры,
	|						ВТОтборы.ВидЗапасов,
	|						ВТОтборы.Организация,
	|						ВТОтборы.НомерГТД
	|					ИЗ
	|						ИмяВтОтборыНоменклатуры КАК ВТОтборы))
	| //%ТекстЗапросаОбъединенияСВТВстречныеРезервы%
	|		) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.КорВидЗапасов,
	|	ВложенныйЗапрос.КорОрганизация,
	|	ВложенныйЗапрос.ВидЗапасов,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.АналитикаУчетаНоменклатуры,
	|	ВложенныйЗапрос.Период
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВложенныйЗапрос.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ //%ТекстПараметрПроверкиНаличияЗаписей%
	|	КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|				И РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|			ТОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ВладелецТовара
	|		ИНАЧЕ РезервыТоваровОрганизаций.КорОрганизация
	|	КОНЕЦ КАК Отправитель,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|				И РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|			ТОГДА РезервыТоваровОрганизаций.КорВидЗапасов.Контрагент
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК Контрагент,
	|	РезервыТоваровОрганизаций.Организация КАК Организация,
	|	РезервыТоваровОрганизаций.Организация КАК Получатель,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА РезервыТоваровОрганизаций.Организация
	|		ИНАЧЕ РезервыТоваровОрганизаций.КорОрганизация
	|	КОНЕЦ КАК КорОрганизация,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаНаКомиссиюВДругуюОрганизацию)
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|				И РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|			ТОГДА ВЫБОР
	|					КОГДА РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.ТипМестаХранения В (ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Подразделение), ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.ДоговорКонтрагента))
	|						ТОГДА ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыкупПринятыхНаХранениеТоваров)
	|					ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка)
	|				КОНЕЦ
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.РеализацияТоваровВДругуюОрганизацию)
	|	КОНЕЦ КАК ХозяйственнаяОперация,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА РезервыТоваровОрганизаций.ВидЗапасов.НалогообложениеНДС
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПустаяСсылка)
	|	КОНЕЦ КАК НалогообложениеНДС,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(РезервыТоваровОрганизаций.ВидЗапасов.Договор, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|						ТОГДА ЕСТЬNULL(НастройкаПередачиТоваров.Договор, НЕОПРЕДЕЛЕНО)
	|					ИНАЧЕ РезервыТоваровОрганизаций.ВидЗапасов.Договор
	|				КОНЕЦ
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|				И РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|			ТОГДА ЕСТЬNULL(РезервыТоваровОрганизаций.КорВидЗапасов.Договор, НЕОПРЕДЕЛЕНО)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ЕСТЬNULL(НастройкаПередачиТоваров.СпособПередачиТоваров, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|					ТОГДА НастройкаПередачиТоваров.Договор
	|				ИНАЧЕ РезервыТоваровОрганизаций.ВидЗапасов.Договор
	|			КОНЕЦ
	|	КОНЕЦ КАК Договор,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|			ТОГДА ВЫБОР
	|					КОГДА РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|						ТОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ВидЦены
	|					КОГДА ЕСТЬNULL(НастройкаПередачиТоваров.СпособПередачиТоваров, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|						ТОГДА НастройкаПередачиТоваров.ВидЦены
	|					ИНАЧЕ &ВидЦеныПоУмолчанию
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(НастройкаПередачиТоваров.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|			ТОГДА &ВидЦеныПоУмолчанию
	|		ИНАЧЕ НастройкаПередачиТоваров.ВидЦены
	|	КОНЕЦ КАК ВидЦены,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.МестоХранения КАК МестоХранения,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Партнер КАК МестоХраненияПартнер,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.СкладскаяТерритория КАК МестоХраненияСклад,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Подразделение КАК МестоХраненияПодразделение,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Контрагент КАК МестоХраненияКонтрагент,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Договор КАК МестоХраненияДоговор,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура КАК Номенклатура,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Характеристика КАК Характеристика,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Серия КАК Серия,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры.Назначение КАК Назначение,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасовПолучателя,
	|	РезервыТоваровОрганизаций.КорВидЗапасов КАК ВидЗапасовОтправителя,
	|	ВЫБОР
	|		КОГДА РезервыТоваровОрганизаций.ВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.КомиссионныйТовар)
	|			ТОГДА РезервыТоваровОрганизаций.ВидЗапасов.Валюта
	|		КОГДА РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = ЗНАЧЕНИЕ(Перечисление.ТипыЗапасов.ТоварНаХраненииСПравомПродажи)
	|				И РезервыТоваровОрганизаций.КорОрганизация = РезервыТоваровОрганизаций.Организация
	|			ТОГДА РезервыТоваровОрганизаций.КорВидЗапасов.Валюта
	|		КОГДА ЕСТЬNULL(НастройкаПередачиТоваров.СпособПередачиТоваров, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.СпособыПередачиТоваров.Продажа)
	|				И ЕСТЬNULL(НастройкаПередачиТоваров.ВидЦены, ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|			ТОГДА НастройкаПередачиТоваров.ВидЦены.ВалютаЦены
	|		КОГДА &ВидЦеныПоУмолчанию <> ЗНАЧЕНИЕ(Справочник.ВидыЦен.ПустаяСсылка)
	|			ТОГДА ВЫРАЗИТЬ(&ВидЦеныПоУмолчанию КАК Справочник.ВидыЦен).ВалютаЦены
	|		ИНАЧЕ &ВалютаРегламентированногоУчета
	|	КОНЕЦ КАК Валюта,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	РезервыТоваровОрганизаций.Количество КАК Количество,
	|	РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|//%ТекстИмяВТРезультата%
	|ИЗ
	|	ВТРезервыТоваровОрганизацийДляЗапроса КАК РезервыТоваровОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаПередачиТоваровМеждуОрганизациями КАК НастройкаПередачиТоваров
	|		ПО РезервыТоваровОрганизаций.Организация = НастройкаПередачиТоваров.ОрганизацияПродавец
	|			И РезервыТоваровОрганизаций.КорОрганизация = НастройкаПередачиТоваров.ОрганизацияВладелец
	|			И РезервыТоваровОрганизаций.КорВидЗапасов.ТипЗапасов = НастройкаПередачиТоваров.ТипЗапасов
	|//%ТекстПоляУпорядочиванияПоШапке%";
	
	ТекстВстречныхРезервов = ТекстЗапросаВстречныхРезервов("ВыборкаНеУпорядоченная", ИмяВТОтборыНоменклатуры, Истина);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
								"//%ТекстЗапросаОбъединенияСВТВстречныеРезервы%",
								ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении() + ТекстВстречныхРезервов);
	
	Если Не Запрос.Параметры.Свойство("НачалоПериода")
		Или Не ЗначениеЗаполнено(Запрос.Параметры.НачалоПериода) Тогда
		
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ДатаПервогоРезерва(ТекущаяДатаСеанса())));
		
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("КонецПериода")
		Или Не ЗначениеЗаполнено(Запрос.Параметры.КонецПериода) Тогда
		
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ТекущаяДатаСеанса()));
		
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("ВалютаРегламентированногоУчета") Тогда
		Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	КонецЕсли;
		
	Если ПустаяСтрока(ИмяВТОтборыНоменклатуры) Тогда
		ТекстВТОтборыНоменклатуры =
		"ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
		|	ЗНАЧЕНИЕ(Справочник.ВидыЗапасов.ПустаяСсылка) КАК ВидЗапасов,
		|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
		|	ЗНАЧЕНИЕ(Справочник.НомераГТД.ПустаяСсылка) КАК НомерГТД
		|ПОМЕСТИТЬ ВТОтборыНоменклатурыДляРезервов
		|ГДЕ
		|	ЛОЖЬ";
		
		ТекстЗапроса = ТекстВТОтборыНоменклатуры + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстЗапроса;
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВтОтборыНоменклатуры", "ВТОтборыНоменклатурыДляРезервов");
		
		Запрос.УстановитьПараметр("ПоВсейНоменклатуре", Истина);
	Иначе
		Запрос.УстановитьПараметр("ПоВсейНоменклатуре", Ложь);
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ИмяВтОтборыНоменклатуры", ИмяВТОтборыНоменклатуры);
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("ОформлятьПередачи") Тогда
		Запрос.УстановитьПараметр("ОформлятьПередачи", Ложь);
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("ОформлятьВыкупы") Тогда
		Запрос.УстановитьПараметр("ОформлятьВыкупы", Ложь);
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("МестоХранения") Тогда
		Запрос.УстановитьПараметр("МестоХранения", Неопределено);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПоВсемСкладам", Не ЗначениеЗаполнено(Запрос.Параметры.МестоХранения));
	
	Если Не Запрос.Параметры.Свойство("Отправитель") Тогда
		Запрос.УстановитьПараметр("Отправитель", Неопределено);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПоВсемОтправителям", Не ЗначениеЗаполнено(Запрос.Параметры.Отправитель));
	
	Если Не Запрос.Параметры.Свойство("Получатель") Тогда
		Запрос.УстановитьПараметр("Получатель", Новый Массив);
		Запрос.УстановитьПараметр("ПоВсемПолучателям", Истина);
	ИначеЕсли ТипЗнч(Запрос.Параметры.Получатель) = Тип("Массив") Тогда	
		Запрос.УстановитьПараметр("Получатель", Запрос.Параметры.Получатель);
		Запрос.УстановитьПараметр("ПоВсемПолучателям", Запрос.Параметры.Получатель.Количество() = 0);
	Иначе
		
		Если ЗначениеЗаполнено(Запрос.Параметры.Получатель) Тогда
			МассивПараметр = Новый Массив;
			МассивПараметр.Добавить(Запрос.Параметры.Получатель);
			
			Запрос.УстановитьПараметр("Получатель", МассивПараметр);
			Запрос.УстановитьПараметр("ПоВсемПолучателям", Ложь);
		Иначе
			Запрос.УстановитьПараметр("Получатель", Новый Массив);
			Запрос.УстановитьПараметр("ПоВсемПолучателям", Истина);
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидЦеныПоУмолчанию",
								Справочники.ВидыЦен.ВидЦеныПоУмолчанию(
									Справочники.ВидыЦен.ПустаяСсылка(),
									Новый Структура("ИспользоватьПриПередачеМеждуОрганизациями", Истина)));
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	Если ВРег(ТипРезультата) = ВРег("ВыборкаПоШапке") Тогда
		
		ТекстИмяВТРезультата = "ВТРезервыТоваровОрганизаций";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстИмяВТРезультата%", "ПОМЕСТИТЬ " + ТекстИмяВТРезультата);
		
		МассивВыборки = Новый Массив;
		
		ПоляШапки = ПоляШапкиПриОформленииПоРезервамТоваровОрганизаций();
		
		Для Каждого КлючЗначение из ПоляШапки Цикл
			ТекстПоля = "РезервыТоваровОрганизаций." + КлючЗначение.Ключ + " КАК " + КлючЗначение.Ключ;
			
			МассивВыборки.Добавить(ТекстПоля);
		КонецЦикла;
		
		ТекстВыборкиПолей = СтрСоединить(МассивВыборки, ",");
		
		ТекстВыборки = "
		|ВЫБРАТЬ РАЗЛИЧНЫЕ " 
		+ ТекстВыборкиПолей + "
		|ИЗ
		|	ВТРезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций";
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстВыборки;
		
	ИначеЕсли ВРег(ТипРезультата) = ВРег("ВыборкаПоНоменклатуре") Тогда
		
		МассивВыборки	= Новый Массив;
		ПоляШапки		= ПоляШапкиПриОформленииПоРезервамТоваровОрганизаций();
		
		Для Каждого КлючЗначение из ПоляШапки Цикл
			ТекстПоля = КлючЗначение.Ключ;
			
			МассивВыборки.Добавить(ТекстПоля);
		КонецЦикла;
		
		ТекстПоляУпорядочиванияПоШапке = "
		|
		|УПОРЯДОЧИТЬ ПО "
		+ СтрСоединить(МассивВыборки, ",");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстПоляУпорядочиванияПоШапке%", ТекстПоляУпорядочиванияПоШапке);
		
	ИначеЕсли СтрНайти(ВРег(ТипРезультата), ВРег("ВТПоНоменклатуре")) > 0 Тогда	
		
		ТекстИмяВТРезультата  = СтрЗаменить(ВРег(ТипРезультата), ВРег("ВТПоНоменклатуре"), "");
		
		Если ПустаяСтрока(ТекстИмяВТРезультата) Тогда
			ТекстИмяВТРезультата = "ВТРезервыТоваровОрганизаций";
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстИмяВТРезультата%", "ПОМЕСТИТЬ " + ТекстИмяВТРезультата);	
		
	ИначеЕсли ВРег(ТипРезультата) = ВРег("ВыборкаНаличияЗаписей") Тогда
		
		ТекстПараметрПроверкиНаличияЗаписей = "ПЕРВЫЕ 1";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
									"//%ТекстПараметрПроверкиНаличияЗаписей%",
									ТекстПараметрПроверкиНаличияЗаписей);
		
	ИначеЕсли ВРег(ТипРезультата) = ВРег("ВыборкаЗаполненияДокумента") Тогда
		
		ТекстИмяВТРезультата  = "ВТРезервыТоваровОрганизаций";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//%ТекстИмяВТРезультата%", "ПОМЕСТИТЬ " + ТекстИмяВТРезультата);
		
		ТекстВыборки = 
		"ВЫБРАТЬ
		|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
		|	РезервыТоваровОрганизаций.Номенклатура КАК Номенклатура,
		|	РезервыТоваровОрганизаций.Характеристика КАК Характеристика,
		|	РезервыТоваровОрганизаций.Серия КАК Серия,
		|	РезервыТоваровОрганизаций.Назначение КАК Назначение,
		|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
		|	РезервыТоваровОрганизаций.СтавкаНДС КАК СтавкаНДС,
		|	РезервыТоваровОрганизаций.Количество КАК Количество,
		|	РезервыТоваровОрганизаций.КоличествоПоРНПТ КАК КоличествоПоРНПТ,
		|	РезервыТоваровОрганизаций.Количество КАК КоличествоУпаковок,
		|	РезервыТоваровОрганизаций.ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
		|	РезервыТоваровОрганизаций.ВидЗапасовОтправителя КАК ВидЗапасовОтправителя,
		|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД
		|ИЗ
		|	ВТРезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
		|ГДЕ
		|	&ТекстУсловияОтбораПоШапке";
		
		МассивУсловийОтбора = Новый Массив;
		
		ПоляШапки = ПоляШапкиПриОформленииПоРезервамТоваровОрганизаций();
		
		Для Каждого КлючЗначение из ПоляШапки Цикл
			
			Если Запрос.Параметры.Свойство(КлючЗначение.Ключ)
				И ТипЗнч(Запрос.Параметры[КлючЗначение.Ключ]) = Тип("Массив") Тогда
				
				ТекстПоля = "РезервыТоваровОрганизаций." + КлючЗначение.Ключ + " В(&" + КлючЗначение.Ключ + ")";
				
			Иначе
				ТекстПоля = "РезервыТоваровОрганизаций." + КлючЗначение.Ключ + " =  &" + КлючЗначение.Ключ;	
			КонецЕсли;
			
			МассивУсловийОтбора.Добавить(ТекстПоля);
			
		КонецЦикла;
		
		ТекстУсловияОтбораПоШапке = СтрСоединить(МассивУсловийОтбора, 
		"
		| И ");
		
		ТекстВыборки = СтрЗаменить(ТекстВыборки, "&ТекстУсловияОтбораПоШапке", ТекстУсловияОтбораПоШапке);
		
		ТекстЗапроса = ТекстЗапроса + ОбщегоНазначенияУТ.РазделительЗапросовВПакете() + ТекстВыборки;
		
	Иначе
		
		ТекстИсключения = НСтр("ru = 'Неизвестный тип результата.'");
		
		ВызватьИсключение ТекстИсключения;
		
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса встречных резервов
//
// Параметры:
//  ТипРезультата		 - Строка - возможные значения:
//											ВыборкаНеУпорядоченная,
//											ВыборкаУпорядоченнаяПоОрганизации,
//											ВТАналитикиВстречныхРезервов - сохраняется в временной таблице ВТАналитикиВстречныхРезервов
// 
//  ИмяВТОтборыАналитики - Строка - имя ВТ с колонками: АналитикаУчетаНоменклатуры, ВидЗапасов, НомерГТД, Организация
//											Если не передано - то выбирается всем аналитикам  
//  НуженОтборПоПериоду	 - Булево
//
// Возвращаемое значение:
//  Строка - текст запроса
//
Функция ТекстЗапросаВстречныхРезервов(ТипРезультата, ИмяВТОтборыАналитики = "", НуженОтборПоПериоду = Ложь) Экспорт
	
	ТекстЗапросаВстречныхРезервов =
	"ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) КАК Период,
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.Организация КАК Организация,
	|	РезервыТоваровОрганизаций.ВидЗапасов КАК ВидЗапасов,
	|	РезервыТоваровОрганизаций.НомерГТД КАК НомерГТД,
	|	РезервыТоваровОрганизаций.КорОрганизация КАК КорОрганизация,
	|	РезервыТоваровОрганизаций.КорВидЗапасов КАК КорВидЗапасов,
	|	ИСТИНА КАК ЭтоСторно,
	|	-СУММА(ВЫБОР
	|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА РезервыТоваровОрганизаций.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Количество,
	|	-СУММА(ВЫБОР
	|			КОГДА НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров
	|					ИЛИ НАЧАЛОПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ) < &ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров
	|				ТОГДА 0
	|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА РезервыТоваровОрганизаций.КоличествоПоРНПТ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоПоРНПТ
	|//ТекстПомещенияВВТ
	|ИЗ
	|	РегистрНакопления.РезервыТоваровОрганизаций КАК РезервыТоваровОрганизаций
	|ГДЕ
	|	&ТекстУсловияПоПериоду
	|	И &ТекстУсловияПоНоменклатуре
	|СГРУППИРОВАТЬ ПО
	|	РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры,
	|	РезервыТоваровОрганизаций.Организация,
	|	РезервыТоваровОрганизаций.ВидЗапасов,
	|	РезервыТоваровОрганизаций.КорВидЗапасов,
	|	РезервыТоваровОрганизаций.КорОрганизация,
	|	КОНЕЦПЕРИОДА(РезервыТоваровОрганизаций.Период, МЕСЯЦ),
	|	РезервыТоваровОрганизаций.НомерГТД
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА РезервыТоваровОрганизаций.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) >= СУММА(ВЫБОР
	|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА РезервыТоваровОрганизаций.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) И
	|	СУММА(ВЫБОР
	|			КОГДА РезервыТоваровОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА РезервыТоваровОрганизаций.Количество
	|			ИНАЧЕ 0
	|		КОНЕЦ) > 0
	|//ТекстУпорядочиванияПоОрганизации";
	
	Если Не ПустаяСтрока(ИмяВТОтборыАналитики) Тогда
		ТекстУсловияПоНоменклатуре = "
		|	(РезервыТоваровОрганизаций.АналитикаУчетаНоменклатуры, РезервыТоваровОрганизаций.Организация, РезервыТоваровОрганизаций.ВидЗапасов, РезервыТоваровОрганизаций.НомерГТД) 
		|	В (ВЫБРАТЬ
		|			ВТАналитикиВстречныхРезервов.АналитикаУчетаНоменклатуры,
		|			ВТАналитикиВстречныхРезервов.Организация,
		|			ВТАналитикиВстречныхРезервов.ВидЗапасов,
		|			ВТАналитикиВстречныхРезервов.НомерГТД
		|		ИЗ
		|			ВТАналитикиВстречныхРезервов КАК ВТАналитикиВстречныхРезервов)";
		
		ТекстУсловияПоНоменклатуре = СтрЗаменить(ТекстУсловияПоНоменклатуре, "ВТАналитикиВстречныхРезервов", ИмяВТОтборыАналитики); 
		
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов, "&ТекстУсловияПоНоменклатуре", ТекстУсловияПоНоменклатуре);	
	Иначе
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов, "&ТекстУсловияПоНоменклатуре", "ИСТИНА");	
	КонецЕсли;
	
	Если НуженОтборПоПериоду Тогда
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов, "&ТекстУсловияПоПериоду", "РезервыТоваровОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода");	
	Иначе
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов, "&ТекстУсловияПоПериоду", "ИСТИНА");	
	КонецЕсли;
	
	Если ТипРезультата = "ВыборкаУпорядоченнаяПоОрганизации" Тогда
		
		ТекстУпорядочивания = "
		|УПОРЯДОЧИТЬ ПО
		|	РезервыТоваровОрганизаций.Организация";
		
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов, "//ТекстУпорядочиванияПоОрганизации", ТекстУпорядочивания);	
	ИначеЕсли ТипРезультата = "ВТАналитикиВстречныхРезервов" Тогда
		
		ТекстЗапросаВстречныхРезервов = СтрЗаменить(ТекстЗапросаВстречныхРезервов, "//ТекстПомещенияВВТ", "ПОМЕСТИТЬ ВТАналитикиВстречныхРезервов");
	ИначеЕсли ТипРезультата <> "ВыборкаНеУпорядоченная" Тогда
		ТекстИсключения = НСтр("ru = 'Неизвестный тип результата.'");
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Возврат ТекстЗапросаВстречныхРезервов;
	
КонецФункции

#КонецОбласти

#КонецОбласти