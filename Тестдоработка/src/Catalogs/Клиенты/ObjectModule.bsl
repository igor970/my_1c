// В МО для реквизитов формы использую обращение через ЭтотОбъект.ИмяРеквизита т.к. это точно гарантирует, что перменная является реквизитом объекта,
// а не определена где-то выше


#Область ОбработчикиСобытий

// 1. Проверка НомерТелефона Заполен
// 2. Проверка НомерТелефона Заполнен Верно
// 3. Приведение Номера телефона к единому стандарту
// 4. Проверка НомерТелефона уже есть в БД
Процедура ПередЗаписью(Отказ)
	
	// 1. Проверка НомерТелефона Заполен
	// Телефон не является обязательным реквизитом, а других проверок не требуется,
	// значит если номер не указан то и дальнейшие действия не нужны 
	Если ПустаяСтрока(ЭтотОбъект.НомерТелефона) Тогда
		Возврат;
	КонецЕсли;
	
	// 2. Проверка НомерТелефона Заполнен Верно
	// По заданию нужно проверять является ли номер телефона телефоном
	// Для защиты от ошибки ввода пользователем применил маску для поля.
	// Защиту тоже нужна на случай программного создания элемента справочника
	Если НЕ ОбщегоНазначенияЕАПТЕКАКлиентСервер.ЭтоМобильныйНомерТелефона(ЭтотОбъект.НомерТелефона) Тогда
		
		Отказ = Истина;
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Номер телефона указан с ошибкой'");
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	// 3. Приведение Номера телефона к единому стандарту 
	// Приводим номер телефона к единому виду
	ЭтотОбъект.НомерТелефона = ОбщегоНазначенияЕАПТЕКАКлиентСервер.МобильныйНомерТелефонаСтандартныйВид(ЭтотОбъект.НомерТелефона);
	
	// 4. Проверка НомерТелефона уже есть в БД
	// Проверяем есть ли он уже в БД
	ТелефонСуществуетУКлиента = ТелефонСуществует(НомерТелефона);
	Если ТелефонСуществуетУКлиента Тогда
		
		Отказ = Истина;
		
		КлиентСуществует = Неопределено;
		Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("КлиентСуществует", КлиентСуществует) Тогда
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Дополнительно свойство отустствует, но поиск нашел совпадение'"), УровеньЖурналаРегистрации.Ошибка,,, НСтр("ru = 'Справочник.Контрагенты, создание нового'"));
			КлиентСуществует = НСтр("ru = 'Ошибка, не удалось определить клиента'");
			
		КонецЕсли;
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрШаблон(НСтр("ru = 'Номер телефона уже привязан к клиенту %1'"), КлиентСуществует);
		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает Ложь если телефона нет в БД и представление Клиента, если есть
//
// Параметры:
//  НомерТелефона - Строка, Телефон, который нужно проверить.
//							Передается только значение т.к. изменять данные не требуется, а значит и ссылка не нужна
Функция ТелефонСуществует(Знач НомерТелефона)
	
	// Поиск должен быть глобалным и никакие ограничения не должны помешать провести поиск по базе
	УстановитьПривилегированныйРежим(Истина);
	
	// Полуачем Наименование клиента, у которого есть данный номер
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Клиенты.Представление КАК Клиент
		|ИЗ
		|	Справочник.Клиенты КАК Клиенты
		|ГДЕ
		|	Клиенты.НомерТелефона = &НомерТелефона
		|	И Клиенты.Ссылка <> &Пользователь";
	
	Запрос.УстановитьПараметр("НомерТелефона", НомерТелефона);
	Запрос.УстановитьПараметр("Пользователь",  ЭтотОбъект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Ничего не нашли, возвращаем Ложь
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Нашли
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	// Пишем в доп. свойства
	ДополнительныеСвойства.Вставить("КлиентСуществует", Выборка.Клиент);
	
	Возврат Истина;
	
КонецФункции // ТелефонСуществует()

#КонецОбласти
