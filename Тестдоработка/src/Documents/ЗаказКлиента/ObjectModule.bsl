
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// 1. Заполняем первичную структуру для проведения
	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	
	// 2. Заполняем дополнительные свйоства для проведения
	Документы.ЗаказКлиента.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства);
	
КонецПроцедуры

// 1. Сворачиваем ТЧ с товарами, защита от ввода одной и той же номенклатуры в разны строках
// 2. Проверка на пустую ТЧ Товары, нечего делать если она пустая
// 3. Создаем движения по РН ТоварыНаСкладах
// 4. Проверка отрицательных остатков
Процедура ОбработкаПроведенияСтарая(Отказ, РежимПроведения)

	ПроведениеСерверУТ.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	Возврат;
	
	// РН ТоварыНаСкладах Расход по остаткам, Приход по резервам
	Движения.ТоварыНаСкладах.Записывать = Истина;
	
	Запрос = Новый Запрос;
	
	// Свернуть ТЧ можно как через ТЗ так и через запрос, сворчиваем заспросом т.к. для вычисления отрицательных остатков нужны будут проиндескированные данные
	// ВТ будет нужна в следующем запросе, без Менеджера она будет удалена
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	// 1. Сворачиваем ТЧ с товарами,  защита от ввода одной и той же номенклатуры в разны строках
	// Таблица нам будет нужна для вычисления отрицательных остатков, сразу индексируем
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаказКлиентаТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ЗаказКлиентаТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_ГруппировкаТоваров
		|ИЗ
		|	Документ.ЗаказКлиента.Товары КАК ЗаказКлиентаТовары
		|ГДЕ
		|	ЗаказКлиентаТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаказКлиентаТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ГруппировкаТоваров.Номенклатура КАК Номенклатура,
		|	ВТ_ГруппировкаТоваров.Количество КАК Количество
		|ИЗ
		|	ВТ_ГруппировкаТоваров КАК ВТ_ГруппировкаТоваров";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// 2. Проверка на пустую ТЧ Товары, нечего делать если она пустая
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	// 3. Создаем движения по РН ТоварыНаСкладах
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Списываем остатки
		Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
		
		Движение.Период 		  = Дата;
		Движение.Склад            = ЭтотОбъект.Склад;
		Движение.Номенклатура 	  = Выборка.Номенклатура;
		Движение.СвободныйОстаток = Выборка.Количество;
		
		// Принимаем резерв
		Движение = Движения.ТоварыНаСкладах.ДобавитьПриход();
		
		Движение.Период 	  = Дата;
		Движение.Склад        = ЭтотОбъект.Склад;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Резерв		  = Выборка.Количество;
		
	КонецЦикла;

	// До конца транзакции блокируем регистр, сейчас пользователь один, но маловероятно что не будет еще
	Движения.ТоварыНаСкладах.БлокироватьДляИзменения = Истина;
	Движения.Записать();
	
	// 4. Проверка отрицательных остатков
	// В запросе получаем сразу представление Номенклатуры т.к. будем выводить сообщением,
	// поле не составного типа, разыменование через ВЫБОР КОГДА не требуется
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура.Представление КАК Номенклатура,
		|	-ТоварыНаСкладахОстатки.СвободныйОстатокОстаток КАК Остаток
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ВремяОстатков,
		|			(Склад, Номенклатура) В
		|				(ВЫБРАТЬ
		|					&Склад КАК Склад,
		|					ВТ_ГруппировкаТоваров.Номенклатура КАК Номенклатура
		|				ИЗ
		|					ВТ_ГруппировкаТоваров КАК ВТ_ГруппировкаТоваров)) КАК ТоварыНаСкладахОстатки
		|ГДЕ
		|	ТоварыНаСкладахОстатки.СвободныйОстатокОстаток < 0";
	
	// Определяем время получения остатков
	ВремяОстатков = Неопределено;
	Если РежимПроведения = РежимПроведенияДокумента.Неоперативный Тогда
		ВремяОстатков = Новый Граница(МоментВремени(), ВидГраницы.Включая);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВремяОстатков", ВремяОстатков);
	Запрос.УстановитьПараметр("Склад",		   ЭтотОбъект.Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	// Если запрос вернул хоть одну запись, значит ушли в минус, блокируем проведение, сообщаем пользователю
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Отказ = Истина;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл		
			Текст = "" + СтрШаблон(НСтр("ru = 'Недостаточно товара %1 в количестве: %2'"), Выборка.Номенклатура, Выборка.Остаток) + Символы.ПС;
		КонецЦикла;
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = Текст;
		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти